

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 09 21:40:36 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1517
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F1517 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  0110                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  011D                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  018E                     	;# 
   110  018F                     	;# 
   111  0190                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020D                     	;# 
   133  0210                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0291                     	;# 
   150  0291                     	;# 
   151  0292                     	;# 
   152  0293                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  0394                     	;# 
   158  0395                     	;# 
   159  0396                     	;# 
   160  0FE4                     	;# 
   161  0FE5                     	;# 
   162  0FE6                     	;# 
   163  0FE7                     	;# 
   164  0FE8                     	;# 
   165  0FE9                     	;# 
   166  0FEA                     	;# 
   167  0FEB                     	;# 
   168  0FED                     	;# 
   169  0FEE                     	;# 
   170  0FEF                     	;# 
   171  000F                     _PORTD	set	15
   172  000E                     _PORTCbits	set	14
   173  008E                     _TRISCbits	set	142
   174  008F                     _TRISD	set	143
   175                           
   176                           	psect	stringtext1
   177  0800                     __pstringtext1:
   178  0800                     STR_2:
   179  0800  3420               	retlw	32	;' '
   180  0801  344D               	retlw	77	;'M'
   181  0802  3469               	retlw	105	;'i'
   182  0803  3463               	retlw	99	;'c'
   183  0804  3472               	retlw	114	;'r'
   184  0805  346F               	retlw	111	;'o'
   185  0806  3464               	retlw	100	;'d'
   186  0807  3469               	retlw	105	;'i'
   187  0808  3467               	retlw	103	;'g'
   188  0809  3469               	retlw	105	;'i'
   189  080A  3473               	retlw	115	;'s'
   190  080B  346F               	retlw	111	;'o'
   191  080C  3466               	retlw	102	;'f'
   192  080D  3474               	retlw	116	;'t'
   193  080E  3420               	retlw	32	;' '
   194  080F  3400               	retlw	0
   195                           
   196                           	psect	stringtext2
   197  0810                     __pstringtext2:
   198  0810                     STR_1:
   199  0810  3420               	retlw	32	;' '
   200  0811  3420               	retlw	32	;' '
   201  0812  3457               	retlw	87	;'W'
   202  0813  3465               	retlw	101	;'e'
   203  0814  346C               	retlw	108	;'l'
   204  0815  3463               	retlw	99	;'c'
   205  0816  346F               	retlw	111	;'o'
   206  0817  346D               	retlw	109	;'m'
   207  0818  3465               	retlw	101	;'e'
   208  0819  3420               	retlw	32	;' '
   209  081A  3420               	retlw	32	;' '
   210  081B  3400               	retlw	0
   211                           
   212                           	psect	stringtext3
   213  0000                     __pstringtext3:
   214                           
   215                           	psect	cinit
   216  07FD                     start_initialization:	
   217                           ; #config settings
   218                           
   219  07FD                     __initialization:
   220  07FD                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223  07FD                     __end_of__initialization:
   224  07FD  0020               	movlb	0
   225  07FE  3187  2FC7         	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	cstackCOMMON
   228  0070                     __pcstackCOMMON:
   229  0070                     ?_Lcd_Cmd:
   230  0070                     ??_Lcd_Cmd:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_Lcd_Clear:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_Init_LCD:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_Lcd_Port:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ??_Lcd_Port:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_Lcd_Write_Char:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ??_Lcd_Write_Char:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_Lcd_Set_Cursor:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     Lcd_Cmd@Cmd:	
   258                           ; 2 bytes @ 0x0
   259                           
   260  0070                     Lcd_Write_Char@Data:	
   261                           ; 1 bytes @ 0x0
   262                           
   263                           
   264                           ; 1 bytes @ 0x0
   265  0070                     	ds	1
   266  0071                     ??_Lcd_Clear:
   267  0071                     ?_Lcd_Write_String:	
   268                           ; 1 bytes @ 0x1
   269                           
   270  0071                     ??_Lcd_Set_Cursor:	
   271                           ; 1 bytes @ 0x1
   272                           
   273  0071                     Lcd_Set_Cursor@Address:	
   274                           ; 1 bytes @ 0x1
   275                           
   276  0071                     Lcd_Write_String@String:	
   277                           ; 1 bytes @ 0x1
   278                           
   279                           
   280                           ; 2 bytes @ 0x1
   281  0071                     	ds	1
   282  0072                     ??_Init_LCD:
   283                           
   284                           ; 1 bytes @ 0x2
   285  0072                     	ds	1
   286  0073                     ??_Lcd_Write_String:
   287                           
   288                           ; 1 bytes @ 0x3
   289  0073                     	ds	1
   290  0074                     ??_main:
   291                           
   292                           ; 1 bytes @ 0x4
   293  0074                     	ds	2
   294                           
   295                           	psect	maintext
   296  07C7                     __pmaintext:	
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 108 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  2   48[None  ] int 
   309 ;; Registers used:
   310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B1F/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   316 ;;      Params:         0       0       0       0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0       0       0       0
   318 ;;      Temps:          2       0       0       0       0       0       0       0
   319 ;;      Totals:         2       0       0       0       0       0       0       0
   320 ;;Total ram usage:        2 bytes
   321 ;; Hardware stack levels required when called:    4
   322 ;; This function calls:
   323 ;;		_Init_LCD
   324 ;;		_Lcd_Clear
   325 ;;		_Lcd_Set_Cursor
   326 ;;		_Lcd_Write_String
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _main
   334  07C7                     _main:
   335  07C7                     l662:	
   336                           ;incstack = 0
   337                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   338                           
   339  07C7  3187  27A7  3187   	fcall	_Init_LCD
   340  07CA                     l49:
   341  07CA  3187  2759  3187   	fcall	_Lcd_Clear
   342  07CD                     l664:
   343  07CD  3003               	movlw	3
   344  07CE  00F5               	movwf	??_main+1
   345  07CF  308A               	movlw	138
   346  07D0  00F4               	movwf	??_main
   347  07D1  3056               	movlw	86
   348  07D2                     u77:
   349  07D2  0B89               	decfsz	9,f
   350  07D3  2FD2               	goto	u77
   351  07D4  0BF4               	decfsz	??_main,f
   352  07D5  2FD2               	goto	u77
   353  07D6  0BF5               	decfsz	??_main+1,f
   354  07D7  2FD2               	goto	u77
   355  07D8                     l666:
   356  07D8  3080               	movlw	128
   357  07D9  3187  2789  3187   	fcall	_Lcd_Set_Cursor
   358  07DC                     l668:
   359  07DC  3010               	movlw	low (STR_1| (0+32768))
   360  07DD  00F1               	movwf	Lcd_Write_String@String
   361  07DE  3088               	movlw	high (STR_1| (0+32768))
   362  07DF  00F2               	movwf	Lcd_Write_String@String+1
   363  07E0  3187  2772  3187   	fcall	_Lcd_Write_String
   364  07E3                     l670:
   365  07E3  30C0               	movlw	192
   366  07E4  3187  2789  3187   	fcall	_Lcd_Set_Cursor
   367  07E7                     l672:
   368  07E7  3000               	movlw	low (STR_2| (0+32768))
   369  07E8  00F1               	movwf	Lcd_Write_String@String
   370  07E9  3088               	movlw	high (STR_2| (0+32768))
   371  07EA  00F2               	movwf	Lcd_Write_String@String+1
   372  07EB  3187  2772  3187   	fcall	_Lcd_Write_String
   373  07EE                     l674:
   374  07EE  300D               	movlw	13
   375  07EF  00F5               	movwf	??_main+1
   376  07F0  30AF               	movlw	175
   377  07F1  00F4               	movwf	??_main
   378  07F2  30B6               	movlw	182
   379  07F3                     u87:
   380  07F3  0B89               	decfsz	9,f
   381  07F4  2FF3               	goto	u87
   382  07F5  0BF4               	decfsz	??_main,f
   383  07F6  2FF3               	goto	u87
   384  07F7  0BF5               	decfsz	??_main+1,f
   385  07F8  2FF3               	goto	u87
   386  07F9  3200               	nop2
   387  07FA  2FCA               	goto	l49
   388  07FB  3180  2802         	ljmp	start
   389  07FD                     __end_of_main:
   390                           
   391                           	psect	text1
   392  0772                     __ptext1:	
   393 ;; *************** function _Lcd_Write_String *****************
   394 ;; Defined at:
   395 ;;		line 86 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  String          2    1[COMMON] PTR const unsigned char 
   398 ;;		 -> STR_2(16), STR_1(12), 
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   410 ;;      Params:         2       0       0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0
   412 ;;      Temps:          1       0       0       0       0       0       0       0
   413 ;;      Totals:         3       0       0       0       0       0       0       0
   414 ;;Total ram usage:        3 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    2
   417 ;; This function calls:
   418 ;;		_Lcd_Write_Char
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _Lcd_Write_String
   426  0772                     _Lcd_Write_String:
   427  0772                     l654:	
   428                           ;incstack = 0
   429                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   430                           
   431                           
   432                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 86:    
      +                               Lcd_Set_Cursor(0x80);;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/
      +                          Code/LCD.X/main.c: 87:         Lcd_Write_String("  Welcome  ");;../LCD-interfacing-with-
      +                          PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 88:         Lcd_Set_Cursor(0xC0)
      +                          ;
   433  0772  2F7F               	goto	l660
   434  0773                     l656:
   435                           
   436                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 89:    
      +                               Lcd_Write_String(" Microdigisoft ");;../LCD-interfacing-with-PIC16F877-Code-and-Sim
      +                          ulation-master/Code/LCD.X/main.c: 90:         _delay((unsigned long)((500)*(20000000UL/4
      +                          000.0)));
   437  0773  0871               	movf	Lcd_Write_String@String,w
   438  0774  0084               	movwf	4
   439  0775  0872               	movf	Lcd_Write_String@String+1,w
   440  0776  0085               	movwf	5
   441  0777  0800               	movf	0,w	;code access
   442  0778  3187  2750  3187   	fcall	_Lcd_Write_Char
   443  077B                     l658:
   444  077B  3001               	movlw	1
   445  077C  07F1               	addwf	Lcd_Write_String@String,f
   446  077D  3000               	movlw	0
   447  077E  3DF2               	addwfc	Lcd_Write_String@String+1,f
   448  077F                     l660:
   449                           
   450                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 88:    
      +                               Lcd_Set_Cursor(0xC0);
   451  077F  0871               	movf	Lcd_Write_String@String,w
   452  0780  0084               	movwf	4
   453  0781  0872               	movf	Lcd_Write_String@String+1,w
   454  0782  0085               	movwf	5
   455  0783  0012               	moviw fsr0++
   456  0784  1D03               	btfss	3,2
   457  0785  2F87               	goto	u61
   458  0786  2F88               	goto	u60
   459  0787                     u61:
   460  0787  2F73               	goto	l656
   461  0788                     u60:
   462  0788                     l35:
   463  0788  0008               	return
   464  0789                     __end_of_Lcd_Write_String:
   465                           
   466                           	psect	text2
   467  0750                     __ptext2:	
   468 ;; *************** function _Lcd_Write_Char *****************
   469 ;; Defined at:
   470 ;;		line 79 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  Data            1    wreg     unsigned char 
   473 ;; Auto vars:     Size  Location     Type
   474 ;;  Data            1    0[COMMON] unsigned char 
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   484 ;;      Params:         0       0       0       0       0       0       0       0
   485 ;;      Locals:         1       0       0       0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0
   487 ;;      Totals:         1       0       0       0       0       0       0       0
   488 ;;Total ram usage:        1 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    1
   491 ;; This function calls:
   492 ;;		_Lcd_Port
   493 ;; This function is called by:
   494 ;;		_Lcd_Write_String
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _Lcd_Write_Char
   500  0750                     _Lcd_Write_Char:
   501                           
   502                           ;incstack = 0
   503                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   504                           ;Lcd_Write_Char@Data stored from wreg
   505  0750  00F0               	movwf	Lcd_Write_Char@Data
   506  0751                     l594:
   507                           
   508                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 79: ;..
      +                          /LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 80:     In
      +                          it_LCD();;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c
      +                          : 81: 
   509  0751  0020               	movlb	0	; select bank0
   510  0752  170E               	bsf	14,6	;volatile
   511  0753                     l596:
   512                           
   513                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 82:    
      +                           while(1)
   514  0753  0870               	movf	Lcd_Write_Char@Data,w
   515  0754  008F               	movwf	15	;volatile
   516  0755                     l598:
   517                           
   518                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 83:    
      +                           {
   519  0755  3187  2765  3187   	fcall	_Lcd_Port
   520  0758                     l29:
   521  0758  0008               	return
   522  0759                     __end_of_Lcd_Write_Char:
   523                           
   524                           	psect	text3
   525  0789                     __ptext3:	
   526 ;; *************** function _Lcd_Set_Cursor *****************
   527 ;; Defined at:
   528 ;;		line 96 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  Address         1    wreg     unsigned char 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  Address         1    1[COMMON] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   542 ;;      Params:         0       0       0       0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0
   545 ;;      Totals:         1       0       0       0       0       0       0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		_Lcd_Cmd
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _Lcd_Set_Cursor
   558  0789                     _Lcd_Set_Cursor:
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   562                           ;Lcd_Set_Cursor@Address stored from wreg
   563  0789  00F1               	movwf	Lcd_Set_Cursor@Address
   564  078A                     l626:
   565  078A  3080               	movlw	128
   566  078B  0271               	subwf	Lcd_Set_Cursor@Address,w
   567  078C  1C03               	skipc
   568  078D  2F8F               	goto	u21
   569  078E  2F90               	goto	u20
   570  078F                     u21:
   571  078F  2F96               	goto	l630
   572  0790                     u20:
   573  0790                     l628:
   574  0790  30A9               	movlw	169
   575  0791  0271               	subwf	Lcd_Set_Cursor@Address,w
   576  0792  1C03               	skipc
   577  0793  2F95               	goto	u31
   578  0794  2F96               	goto	u30
   579  0795                     u31:
   580  0795  2FA2               	goto	l634
   581  0796                     u30:
   582  0796                     l630:
   583  0796  30C0               	movlw	192
   584  0797  0271               	subwf	Lcd_Set_Cursor@Address,w
   585  0798  1C03               	skipc
   586  0799  2F9B               	goto	u41
   587  079A  2F9C               	goto	u40
   588  079B                     u41:
   589  079B  2FA6               	goto	l43
   590  079C                     u40:
   591  079C                     l632:
   592  079C  30E9               	movlw	233
   593  079D  0271               	subwf	Lcd_Set_Cursor@Address,w
   594  079E  1803               	skipnc
   595  079F  2FA1               	goto	u51
   596  07A0  2FA2               	goto	u50
   597  07A1                     u51:
   598  07A1  2FA6               	goto	l43
   599  07A2                     u50:
   600  07A2                     l634:
   601  07A2  0871               	movf	Lcd_Set_Cursor@Address,w
   602  07A3  3187  2747  3187   	fcall	_Lcd_Cmd
   603  07A6                     l43:
   604  07A6  0008               	return
   605  07A7                     __end_of_Lcd_Set_Cursor:
   606                           
   607                           	psect	text4
   608  07A7                     __ptext4:	
   609 ;; *************** function _Init_LCD *****************
   610 ;; Defined at:
   611 ;;		line 33 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0, pclath, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   625 ;;      Params:         0       0       0       0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0
   627 ;;      Temps:          1       0       0       0       0       0       0       0
   628 ;;      Totals:         1       0       0       0       0       0       0       0
   629 ;;Total ram usage:        1 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    3
   632 ;; This function calls:
   633 ;;		_Lcd_Clear
   634 ;;		_Lcd_Cmd
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _Init_LCD
   642  07A7                     _Init_LCD:
   643  07A7                     l600:	
   644                           ;incstack = 0
   645                           ; Regs used in _Init_LCD: [wreg+status,2+status,0+pclath+cstack]
   646                           
   647                           
   648                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 36: 
   649  07A7  0020               	movlb	0	; select bank0
   650  07A8  138E               	bcf	14,7	;volatile
   651                           
   652                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 37: 
   653  07A9  130E               	bcf	14,6	;volatile
   654  07AA                     l602:
   655                           
   656                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 38: 
   657  07AA  018F               	clrf	15	;volatile
   658                           
   659                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 39: voi
      +                          d Lcd_Cmd(unsigned char Cmd)
   660  07AB  0021               	movlb	1	; select bank1
   661  07AC  018F               	clrf	15	;volatile
   662  07AD                     l604:
   663                           
   664                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 40: {
   665  07AD  138E               	bcf	14,7	;volatile
   666  07AE                     l606:
   667                           
   668                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 41:    
      +                           PORTCbits.RC6 = 0;
   669  07AE  130E               	bcf	14,6	;volatile
   670  07AF                     l608:
   671                           
   672                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 42:    
      +                           PORTD = Cmd;
   673  07AF  3041               	movlw	65
   674  07B0  00F2               	movwf	??_Init_LCD
   675  07B1  30EE               	movlw	238
   676  07B2                     u97:
   677  07B2  0B89               	decfsz	9,f
   678  07B3  2FB2               	goto	u97
   679  07B4  0BF2               	decfsz	??_Init_LCD,f
   680  07B5  2FB2               	goto	u97
   681  07B6  3200               	nop2
   682  07B7                     l610:
   683                           
   684                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 44:    
      +                           Lcd_Port();
   685  07B7  3038               	movlw	56
   686  07B8  3187  2747  3187   	fcall	_Lcd_Cmd
   687  07BB                     l612:
   688                           
   689                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 45: }
   690  07BB  300F               	movlw	15
   691  07BC  3187  2747  3187   	fcall	_Lcd_Cmd
   692  07BF                     l614:
   693                           
   694                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 46: 
   695  07BF  3006               	movlw	6
   696  07C0  3187  2747  3187   	fcall	_Lcd_Cmd
   697  07C3                     l616:
   698                           
   699                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 47: 
   700  07C3  3187  2759  3187   	fcall	_Lcd_Clear
   701  07C6                     l17:
   702  07C6  0008               	return
   703  07C7                     __end_of_Init_LCD:
   704                           
   705                           	psect	text5
   706  0759                     __ptext5:	
   707 ;; *************** function _Lcd_Clear *****************
   708 ;; Defined at:
   709 ;;		line 52 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   723 ;;      Params:         0       0       0       0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0
   725 ;;      Temps:          1       0       0       0       0       0       0       0
   726 ;;      Totals:         1       0       0       0       0       0       0       0
   727 ;;Total ram usage:        1 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    2
   730 ;; This function calls:
   731 ;;		_Lcd_Cmd
   732 ;; This function is called by:
   733 ;;		_Init_LCD
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           
   739                           ;psect for function _Lcd_Clear
   740  0759                     _Lcd_Clear:
   741  0759                     l590:	
   742                           ;incstack = 0
   743                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   744                           
   745                           
   746                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 54: }
   747  0759  3001               	movlw	1
   748  075A  3187  2747  3187   	fcall	_Lcd_Cmd
   749  075D                     l592:
   750                           
   751                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 55: 
   752  075D  3014               	movlw	20
   753  075E  00F1               	movwf	??_Lcd_Clear
   754  075F  307A               	movlw	122
   755  0760                     u107:
   756  0760  0B89               	decfsz	9,f
   757  0761  2F60               	goto	u107
   758  0762  0BF1               	decfsz	??_Lcd_Clear,f
   759  0763  2F60               	goto	u107
   760  0764                     l20:
   761  0764  0008               	return
   762  0765                     __end_of_Lcd_Clear:
   763                           
   764                           	psect	text6
   765  0747                     __ptext6:	
   766 ;; *************** function _Lcd_Cmd *****************
   767 ;; Defined at:
   768 ;;		line 69 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  Cmd             1    wreg     unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  Cmd             1    0[COMMON] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   782 ;;      Params:         0       0       0       0       0       0       0       0
   783 ;;      Locals:         1       0       0       0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0
   785 ;;      Totals:         1       0       0       0       0       0       0       0
   786 ;;Total ram usage:        1 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    1
   789 ;; This function calls:
   790 ;;		_Lcd_Port
   791 ;; This function is called by:
   792 ;;		_Init_LCD
   793 ;;		_Lcd_Clear
   794 ;;		_Lcd_Set_Cursor
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _Lcd_Cmd
   800  0747                     _Lcd_Cmd:
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   804                           ;Lcd_Cmd@Cmd stored from wreg
   805  0747  00F0               	movwf	Lcd_Cmd@Cmd
   806  0748                     l584:
   807                           
   808                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 69:    
      +                           if ((Address >= 0x80 && Address <= 0xA8) || (Address >= 0xC0 && Address <= 0xE8));../LC
      +                          D-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 70:     {;../
      +                          LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 71:        
      +                          Lcd_Cmd(Address);
   809  0748  0020               	movlb	0	; select bank0
   810  0749  130E               	bcf	14,6	;volatile
   811  074A                     l586:
   812                           
   813                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 72:    
      +                               return 1;
   814  074A  0870               	movf	Lcd_Cmd@Cmd,w
   815  074B  008F               	movwf	15	;volatile
   816  074C                     l588:
   817                           
   818                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 74:    
      +                           else
   819  074C  3187  2765  3187   	fcall	_Lcd_Port
   820  074F                     l26:
   821  074F  0008               	return
   822  0750                     __end_of_Lcd_Cmd:
   823                           
   824                           	psect	text7
   825  0765                     __ptext7:	
   826 ;; *************** function _Lcd_Port *****************
   827 ;; Defined at:
   828 ;;		line 58 in file "../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   842 ;;      Params:         0       0       0       0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0       0
   845 ;;      Totals:         0       0       0       0       0       0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_Lcd_Cmd
   852 ;;		_Lcd_Write_Char
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _Lcd_Port
   858  0765                     _Lcd_Port:
   859  0765                     l578:	
   860                           ;incstack = 0
   861                           ; Regs used in _Lcd_Port: [wreg]
   862                           
   863                           
   864                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 61:    
      +                           }
   865  0765  0020               	movlb	0	; select bank0
   866  0766  178E               	bsf	14,7	;volatile
   867  0767                     l580:
   868                           
   869                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 62: }
   870  0767  30C8               	movlw	200
   871  0768                     u117:
   872  0768  3200               	nop2
   873  0769  0B89               	decfsz	9,f
   874  076A  2F68               	goto	u117
   875  076B                     l582:
   876                           
   877                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 63: 
   878  076B  0020               	movlb	0	; select bank0
   879  076C  138E               	bcf	14,7	;volatile
   880                           
   881                           ;../LCD-interfacing-with-PIC16F877-Code-and-Simulation-master/Code/LCD.X/main.c: 64: 
   882  076D  30C8               	movlw	200
   883  076E                     u127:
   884  076E  3200               	nop2
   885  076F  0B89               	decfsz	9,f
   886  0770  2F6E               	goto	u127
   887  0771                     l23:
   888  0771  0008               	return
   889  0772                     __end_of_Lcd_Port:
   890  007E                     btemp	set	126	;btemp
   891  007E                     wtemp0	set	126
   892                           
   893                           	psect	config
   894                           
   895                           ;Config register CONFIG1 @ 0x8007
   896                           ;	Oscillator Selection
   897                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
   898                           ;	Watchdog Timer Enable
   899                           ;	WDTE = OFF, WDT disabled
   900                           ;	Power-up Timer Enable
   901                           ;	PWRTE = OFF, PWRT disabled
   902                           ;	MCLR Pin Function Select
   903                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   904                           ;	Flash Program Memory Code Protection
   905                           ;	CP = OFF, Program memory code protection is disabled
   906                           ;	Brown-out Reset Enable
   907                           ;	BOREN = ON, Brown-out Reset enabled
   908                           ;	Clock Out Enable
   909                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   910                           ;	Internal/External Switchover
   911                           ;	IESO = ON, Internal/External Switchover mode is enabled
   912                           ;	Fail-Safe Clock Monitor Enable
   913                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   914  8007                     	org	32775
   915  8007  3FE2               	dw	16354
   916                           
   917                           ;Config register CONFIG2 @ 0x8008
   918                           ;	Flash Memory Self-Write Protection
   919                           ;	WRT = OFF, Write protection off
   920                           ;	Voltage Regulator Capacitor Enable bit
   921                           ;	VCAPEN = OFF, VCAP pin function disabled
   922                           ;	Stack Overflow/Underflow Reset Enable
   923                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   924                           ;	Brown-out Reset Voltage Selection
   925                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   926                           ;	Low-Power Brown Out Reset
   927                           ;	LPBOR = OFF, Low-Power BOR is disabled
   928                           ;	Low-Voltage Programming Enable
   929                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   930  8008                     	org	32776
   931  8008  1FFF               	dw	8191

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Lcd_Write_String@String	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Init_LCD->_Lcd_Clear
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     347
                                              4 COMMON     2     2      0
                           _Init_LCD
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     1      2     212
                                              1 COMMON     3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       1     1      0      15
                                              0 COMMON     1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       1     1      0      90
                                              1 COMMON     1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             1     1      0      30
                                              2 COMMON     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            1     1      0      15
                                              1 COMMON     1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              1     1      0      15
                                              0 COMMON     1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       6       2       42.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 09 21:40:36 2020

                       l20 0764                         l23 0771                         l17 07C6  
                       l26 074F                         l43 07A6                         l35 0788  
                       l29 0758                         l49 07CA                         u20 0790  
                       u21 078F                         u30 0796                         u31 0795  
                       u40 079C                         u41 079B                         u50 07A2  
                       u51 07A1                         u60 0788                         u61 0787  
                       u77 07D2                         u87 07F3                         u97 07B2  
                      l600 07A7                        l610 07B7                        l602 07AA  
                      l612 07BB                        l604 07AD                        l614 07BF  
                      l606 07AE                        l630 0796                        l616 07C3  
                      l608 07AF                        l632 079C                        l634 07A2  
                      l626 078A                        l580 0767                        l628 0790  
                      l660 077F                        l582 076B                        l590 0759  
                      l654 0772                        l670 07E3                        l662 07C7  
                      l584 0748                        l592 075D                        l656 0773  
                      l672 07E7                        l664 07CD                        l578 0765  
                      l586 074A                        l594 0751                        l658 077B  
                      l674 07EE                        l666 07D8                        l588 074C  
                      l596 0753                        l668 07DC                        l598 0755  
                      u107 0760                        u117 0768                        u127 076E  
                      wreg 0009                       STR_1 0810                       STR_2 0800  
        ?_Lcd_Write_String 0071                       _main 07C7                       fsr0h 0005  
                     indf0 0000                       fsr0l 0004                       btemp 007E  
                     start 0002         ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 0750  
                    ?_main 0070                      _PORTD 000F    __size_of_Lcd_Set_Cursor 001E  
                    _TRISD 008F                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Port 0772            __initialization 07FD               __end_of_main 07FD  
         __end_of_Init_LCD 07C7                     ??_main 0074         __size_of_Lcd_Clear 000C  
                ??_Lcd_Cmd 0070    __size_of_Lcd_Write_Char 0009    __end_of__initialization 07FD  
        __end_of_Lcd_Clear 0765             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0789  
                ?_Lcd_Port 0070                  ?_Init_LCD 0070                 __pmaintext 07C7  
__size_of_Lcd_Write_String 0017     __end_of_Lcd_Set_Cursor 07A7                 ??_Lcd_Port 0070  
   Lcd_Write_String@String 0071                 ??_Init_LCD 0072             _Lcd_Write_Char 0750  
                  _Lcd_Cmd 0747            ?_Lcd_Set_Cursor 0070                    __ptext1 0772  
                  __ptext2 0750                    __ptext3 0789                    __ptext4 07A7  
                  __ptext5 0759                    __ptext6 0747                    __ptext7 0765  
   __end_of_Lcd_Write_Char 0759       end_of_initialization 07FD                  _PORTCbits 000E  
                _TRISCbits 008E            ?_Lcd_Write_Char 0070      Lcd_Set_Cursor@Address 0071  
                _Lcd_Clear 0759           _Lcd_Write_String 0772        start_initialization 07FD  
        __size_of_Lcd_Port 000D          __size_of_Init_LCD 0020                 ?_Lcd_Clear 0070  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0071  
              ??_Lcd_Clear 0071           ??_Lcd_Write_Char 0070                   _Lcd_Port 0765  
                 _Init_LCD 07A7   __end_of_Lcd_Write_String 0789           __size_of_Lcd_Cmd 0009  
            __size_of_main 0036         Lcd_Write_Char@Data 0070                 Lcd_Cmd@Cmd 0070  
            __pstringtext1 0800              __pstringtext2 0810              __pstringtext3 0000  
