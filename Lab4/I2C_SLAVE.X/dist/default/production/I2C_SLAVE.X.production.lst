

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Aug 05 22:13:09 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  000B                     _INTCONbits	set	11
   367  0014                     _SSPCON	set	20
   368  001E                     _ADRESH	set	30
   369  001F                     _ADCON0bits	set	31
   370  0008                     _PORTD	set	8
   371  0013                     _SSPBUF	set	19
   372  0014                     _SSPCONbits	set	20
   373  000C                     _PIR1bits	set	12
   374  008C                     _PIE1bits	set	140
   375  0091                     _SSPCON2bits	set	145
   376  0087                     _TRISCbits	set	135
   377  0094                     _SSPSTAT	set	148
   378  0093                     _SSPADD	set	147
   379  0091                     _SSPCON2	set	145
   380  009F                     _ADCON1bits	set	159
   381  008F                     _OSCCONbits	set	143
   382  0094                     _SSPSTATbits	set	148
   383  043C                     _TRISC4	set	1084
   384  043B                     _TRISC3	set	1083
   385  04A0                     _BF	set	1184
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   397  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   398  0011                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401  0011                     __end_of__initialization:
   402  0011  0183               	clrf	3
   403  0012  120A  118A  29BF   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0077                     __pbssCOMMON:
   407  0077                     _POT:
   408  0077                     	ds	1
   409  0078                     _z:
   410  0078                     	ds	1
   411                           
   412                           	psect	cstackCOMMON
   413  0070                     __pcstackCOMMON:
   414  0070                     ?_setup:
   415  0070                     ?_ADC_READ:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_OSCILLATOR:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_ADC_INIT:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_I2C_Slave_Init:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_isr:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_isr:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 1 bytes @ 0x0
   438  0070                     	ds	3
   439  0073                     ??_ADC_READ:
   440  0073                     ??_OSCILLATOR:	
   441                           ; 1 bytes @ 0x3
   442                           
   443  0073                     ??_ADC_INIT:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ??_I2C_Slave_Init:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     I2C_Slave_Init@address:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 1 bytes @ 0x3
   454  0073                     	ds	2
   455  0075                     OSCILLATOR@f:
   456  0075                     ADC_INIT@c:	
   457                           ; 1 bytes @ 0x5
   458                           
   459                           
   460                           ; 1 bytes @ 0x5
   461  0075                     	ds	1
   462  0076                     ??_setup:
   463  0076                     ??_main:	
   464                           ; 1 bytes @ 0x6
   465                           
   466                           
   467                           ; 1 bytes @ 0x6
   468  0076                     	ds	1
   469                           
   470                           	psect	maintext
   471  01BF                     __pmaintext:	
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 73 in file "MAIN_S.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          1       0       0       0       0
   494 ;;      Totals:         1       0       0       0       0
   495 ;;Total ram usage:        1 bytes
   496 ;; Hardware stack levels required when called: 3
   497 ;; This function calls:
   498 ;;		_ADC_READ
   499 ;;		_setup
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505  01BF                     _main:	
   506                           ;psect for function _main
   507                           
   508  01BF                     l852:	
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;MAIN_S.c: 74:     setup();
   514  01BF  120A  118A  2193  120A  118A  	fcall	_setup
   515  01C4                     l854:
   516                           
   517                           ;MAIN_S.c: 76:         POT = ADC_READ();
   518  01C4  120A  118A  21AB  120A  118A  	fcall	_ADC_READ
   519  01C9  00F6               	movwf	??_main
   520  01CA  0876               	movf	??_main,w
   521  01CB  00F7               	movwf	_POT
   522  01CC  29C4               	goto	l854
   523  01CD  120A  118A  280C   	ljmp	start
   524  01D0                     __end_of_main:
   525                           
   526                           	psect	text1
   527  0193                     __ptext1:	
   528 ;; *************** function _setup *****************
   529 ;; Defined at:
   530 ;;		line 82 in file "MAIN_S.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 2
   551 ;; This function calls:
   552 ;;		_ADC_INIT
   553 ;;		_I2C_Slave_Init
   554 ;;		_OSCILLATOR
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560  0193                     _setup:	
   561                           ;psect for function _setup
   562                           
   563  0193                     l796:	
   564                           ;incstack = 0
   565                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   566                           
   567                           
   568                           ;MAIN_S.c: 84:     OSCILLATOR(1);
   569  0193  3001               	movlw	1
   570  0194  120A  118A  212D  120A  118A  	fcall	_OSCILLATOR
   571  0199                     l798:
   572                           
   573                           ;MAIN_S.c: 86:     ANSEL = 0b00100000;
   574  0199  3020               	movlw	32
   575  019A  1683               	bsf	3,5	;RP0=1, select bank3
   576  019B  1703               	bsf	3,6	;RP1=1, select bank3
   577  019C  0088               	movwf	8	;volatile
   578  019D                     l800:
   579                           
   580                           ;MAIN_S.c: 87:     ANSELH = 0x00;
   581  019D  0189               	clrf	9	;volatile
   582  019E                     l802:
   583                           
   584                           ;MAIN_S.c: 93:     ADC_INIT(5);
   585  019E  3005               	movlw	5
   586  019F  120A  118A  2015  120A  118A  	fcall	_ADC_INIT
   587  01A4                     l804:
   588                           
   589                           ;MAIN_S.c: 94:     I2C_Slave_Init(0x80);
   590  01A4  3080               	movlw	128
   591  01A5  120A  118A  2179  120A  118A  	fcall	_I2C_Slave_Init
   592  01AA                     l61:
   593  01AA  0008               	return
   594  01AB                     __end_of_setup:
   595                           
   596                           	psect	text2
   597  012D                     __ptext2:	
   598 ;; *************** function _OSCILLATOR *****************
   599 ;; Defined at:
   600 ;;		line 36 in file "ADC.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  f               1    wreg     unsigned char 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  f               1    5[COMMON] unsigned char 
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         1       0       0       0       0
   616 ;;      Temps:          2       0       0       0       0
   617 ;;      Totals:         3       0       0       0       0
   618 ;;Total ram usage:        3 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 1
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_setup
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628  012D                     _OSCILLATOR:	
   629                           ;psect for function _OSCILLATOR
   630                           
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _OSCILLATOR: [wreg-fsr0h+status,2+status,0]
   634                           ;OSCILLATOR@f stored from wreg
   635  012D  00F5               	movwf	OSCILLATOR@f
   636  012E                     l756:
   637                           
   638                           ;ADC.c: 37:     OSCCONbits.SCS = 1;
   639  012E  1683               	bsf	3,5	;RP0=1, select bank1
   640  012F  1303               	bcf	3,6	;RP1=0, select bank1
   641  0130  140F               	bsf	15,0	;volatile
   642                           
   643                           ;ADC.c: 39:     switch(f){
   644  0131  2956               	goto	l760
   645  0132                     l75:	
   646                           ;ADC.c: 40:         case(1):
   647                           
   648                           
   649                           ;ADC.c: 41:             OSCCONbits.IRCF2 =1;
   650  0132  170F               	bsf	15,6	;volatile
   651                           
   652                           ;ADC.c: 42:             OSCCONbits.IRCF1 =1;
   653  0133  168F               	bsf	15,5	;volatile
   654                           
   655                           ;ADC.c: 43:             OSCCONbits.IRCF0 =1;
   656  0134  160F               	bsf	15,4	;volatile
   657                           
   658                           ;ADC.c: 44:             break;
   659  0135  2978               	goto	l85
   660  0136                     l77:	
   661                           ;ADC.c: 46:         case(2):
   662                           
   663                           
   664                           ;ADC.c: 47:             OSCCONbits.IRCF2 =1;
   665  0136  170F               	bsf	15,6	;volatile
   666                           
   667                           ;ADC.c: 48:             OSCCONbits.IRCF1 =1;
   668  0137  168F               	bsf	15,5	;volatile
   669                           
   670                           ;ADC.c: 49:             OSCCONbits.IRCF0 =0;
   671  0138  120F               	bcf	15,4	;volatile
   672                           
   673                           ;ADC.c: 50:             break;
   674  0139  2978               	goto	l85
   675  013A                     l78:	
   676                           ;ADC.c: 52:         case(3):
   677                           
   678                           
   679                           ;ADC.c: 53:             OSCCONbits.IRCF2 =1;
   680  013A  170F               	bsf	15,6	;volatile
   681                           
   682                           ;ADC.c: 54:             OSCCONbits.IRCF1 =0;
   683  013B  128F               	bcf	15,5	;volatile
   684                           
   685                           ;ADC.c: 55:             OSCCONbits.IRCF0 =1;
   686  013C  160F               	bsf	15,4	;volatile
   687                           
   688                           ;ADC.c: 56:             break;
   689  013D  2978               	goto	l85
   690  013E                     l79:	
   691                           ;ADC.c: 58:         case(4):
   692                           
   693                           
   694                           ;ADC.c: 59:             OSCCONbits.IRCF2 =1;
   695  013E  170F               	bsf	15,6	;volatile
   696                           
   697                           ;ADC.c: 60:             OSCCONbits.IRCF1 =0;
   698  013F  128F               	bcf	15,5	;volatile
   699                           
   700                           ;ADC.c: 61:             OSCCONbits.IRCF0 =0;
   701  0140  120F               	bcf	15,4	;volatile
   702                           
   703                           ;ADC.c: 62:             break;
   704  0141  2978               	goto	l85
   705  0142                     l80:	
   706                           ;ADC.c: 64:         case(5):
   707                           
   708                           
   709                           ;ADC.c: 65:             OSCCONbits.IRCF2 =0;
   710  0142  130F               	bcf	15,6	;volatile
   711                           
   712                           ;ADC.c: 66:             OSCCONbits.IRCF1 =1;
   713  0143  168F               	bsf	15,5	;volatile
   714                           
   715                           ;ADC.c: 67:             OSCCONbits.IRCF0 =1;
   716  0144  160F               	bsf	15,4	;volatile
   717                           
   718                           ;ADC.c: 68:             break;
   719  0145  2978               	goto	l85
   720  0146                     l81:	
   721                           ;ADC.c: 70:         case(6):
   722                           
   723                           
   724                           ;ADC.c: 71:             OSCCONbits.IRCF2 =0;
   725  0146  130F               	bcf	15,6	;volatile
   726                           
   727                           ;ADC.c: 72:             OSCCONbits.IRCF1 =1;
   728  0147  168F               	bsf	15,5	;volatile
   729                           
   730                           ;ADC.c: 73:             OSCCONbits.IRCF0 =0;
   731  0148  120F               	bcf	15,4	;volatile
   732                           
   733                           ;ADC.c: 74:             break;
   734  0149  2978               	goto	l85
   735  014A                     l82:	
   736                           ;ADC.c: 76:         case(7):
   737                           
   738                           
   739                           ;ADC.c: 77:             OSCCONbits.IRCF2 =0;
   740  014A  130F               	bcf	15,6	;volatile
   741                           
   742                           ;ADC.c: 78:             OSCCONbits.IRCF1 =0;
   743  014B  128F               	bcf	15,5	;volatile
   744                           
   745                           ;ADC.c: 79:             OSCCONbits.IRCF0 =1;
   746  014C  160F               	bsf	15,4	;volatile
   747                           
   748                           ;ADC.c: 80:             break;
   749  014D  2978               	goto	l85
   750  014E                     l83:	
   751                           ;ADC.c: 82:         case(8):
   752                           
   753                           
   754                           ;ADC.c: 83:             OSCCONbits.IRCF2 =0;
   755  014E  130F               	bcf	15,6	;volatile
   756                           
   757                           ;ADC.c: 84:             OSCCONbits.IRCF1 =0;
   758  014F  128F               	bcf	15,5	;volatile
   759                           
   760                           ;ADC.c: 85:             OSCCONbits.IRCF0 =0;
   761  0150  120F               	bcf	15,4	;volatile
   762                           
   763                           ;ADC.c: 86:             break;
   764  0151  2978               	goto	l85
   765  0152                     l84:	
   766                           ;ADC.c: 88:         default:
   767                           
   768                           
   769                           ;ADC.c: 89:             OSCCONbits.IRCF2 =1;
   770  0152  170F               	bsf	15,6	;volatile
   771                           
   772                           ;ADC.c: 90:             OSCCONbits.IRCF1 =1;
   773  0153  168F               	bsf	15,5	;volatile
   774                           
   775                           ;ADC.c: 91:             OSCCONbits.IRCF0 =0;
   776  0154  120F               	bcf	15,4	;volatile
   777                           
   778                           ;ADC.c: 92:             break;
   779  0155  2978               	goto	l85
   780  0156                     l760:
   781  0156  0875               	movf	OSCILLATOR@f,w
   782  0157  00F3               	movwf	??_OSCILLATOR
   783  0158  01F4               	clrf	??_OSCILLATOR+1
   784                           
   785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   786                           ; Switch size 1, requested type "simple"
   787                           ; Number of cases is 1, Range of values is 0 to 0
   788                           ; switch strategies available:
   789                           ; Name         Instructions Cycles
   790                           ; simple_byte            4     3 (average)
   791                           ; direct_byte           11     8 (fixed)
   792                           ; jumptable            260     6 (fixed)
   793                           ;	Chosen strategy is simple_byte
   794  0159  0874               	movf	??_OSCILLATOR+1,w
   795  015A  3A00               	xorlw	0	; case 0
   796  015B  1903               	skipnz
   797  015C  295E               	goto	l936
   798  015D  2952               	goto	l84
   799  015E                     l936:
   800                           
   801                           ; Switch size 1, requested type "simple"
   802                           ; Number of cases is 8, Range of values is 1 to 8
   803                           ; switch strategies available:
   804                           ; Name         Instructions Cycles
   805                           ; simple_byte           25    13 (average)
   806                           ; direct_byte           35    11 (fixed)
   807                           ; jumptable            263     9 (fixed)
   808                           ;	Chosen strategy is simple_byte
   809  015E  0873               	movf	??_OSCILLATOR,w
   810  015F  3A01               	xorlw	1	; case 1
   811  0160  1903               	skipnz
   812  0161  2932               	goto	l75
   813  0162  3A03               	xorlw	3	; case 2
   814  0163  1903               	skipnz
   815  0164  2936               	goto	l77
   816  0165  3A01               	xorlw	1	; case 3
   817  0166  1903               	skipnz
   818  0167  293A               	goto	l78
   819  0168  3A07               	xorlw	7	; case 4
   820  0169  1903               	skipnz
   821  016A  293E               	goto	l79
   822  016B  3A01               	xorlw	1	; case 5
   823  016C  1903               	skipnz
   824  016D  2942               	goto	l80
   825  016E  3A03               	xorlw	3	; case 6
   826  016F  1903               	skipnz
   827  0170  2946               	goto	l81
   828  0171  3A01               	xorlw	1	; case 7
   829  0172  1903               	skipnz
   830  0173  294A               	goto	l82
   831  0174  3A0F               	xorlw	15	; case 8
   832  0175  1903               	skipnz
   833  0176  294E               	goto	l83
   834  0177  2952               	goto	l84
   835  0178                     l85:
   836  0178  0008               	return
   837  0179                     __end_of_OSCILLATOR:
   838                           
   839                           	psect	text3
   840  0179                     __ptext3:	
   841 ;; *************** function _I2C_Slave_Init *****************
   842 ;; Defined at:
   843 ;;		line 78 in file "I2CS.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  address         1    wreg     unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  address         1    3[COMMON] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         1       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0
   860 ;;      Totals:         1       0       0       0       0
   861 ;;Total ram usage:        1 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_setup
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871  0179                     _I2C_Slave_Init:	
   872                           ;psect for function _I2C_Slave_Init
   873                           
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _I2C_Slave_Init: [wreg]
   877                           ;I2C_Slave_Init@address stored from wreg
   878  0179  00F3               	movwf	I2C_Slave_Init@address
   879  017A                     l782:
   880                           
   881                           ;I2CS.c: 78: void I2C_Slave_Init(uint8_t address);I2CS.c: 79: {;I2CS.c: 80:     SSPADD =
      +                           address;
   882  017A  0873               	movf	I2C_Slave_Init@address,w
   883  017B  1683               	bsf	3,5	;RP0=1, select bank1
   884  017C  1303               	bcf	3,6	;RP1=0, select bank1
   885  017D  0093               	movwf	19	;volatile
   886                           
   887                           ;I2CS.c: 81:     SSPCON = 0x36;
   888  017E  3036               	movlw	54
   889  017F  1283               	bcf	3,5	;RP0=0, select bank0
   890  0180  1303               	bcf	3,6	;RP1=0, select bank0
   891  0181  0094               	movwf	20	;volatile
   892                           
   893                           ;I2CS.c: 82:     SSPSTAT = 0x80;
   894  0182  3080               	movlw	128
   895  0183  1683               	bsf	3,5	;RP0=1, select bank1
   896  0184  1303               	bcf	3,6	;RP1=0, select bank1
   897  0185  0094               	movwf	20	;volatile
   898                           
   899                           ;I2CS.c: 83:     SSPCON2 = 0x01;
   900  0186  3001               	movlw	1
   901  0187  0091               	movwf	17	;volatile
   902  0188                     l784:
   903                           
   904                           ;I2CS.c: 85:     TRISC3 = 1;
   905  0188  1587               	bsf	7,3	;volatile
   906  0189                     l786:
   907                           
   908                           ;I2CS.c: 86:     TRISC4 = 1;
   909  0189  1607               	bsf	7,4	;volatile
   910  018A                     l788:
   911                           
   912                           ;I2CS.c: 88:     INTCONbits.GIE = 1;
   913  018A  178B               	bsf	11,7	;volatile
   914  018B                     l790:
   915                           
   916                           ;I2CS.c: 89:     INTCONbits.PEIE = 1;
   917  018B  170B               	bsf	11,6	;volatile
   918  018C                     l792:
   919                           
   920                           ;I2CS.c: 90:     PIR1bits.SSPIF = 0;
   921  018C  1283               	bcf	3,5	;RP0=0, select bank0
   922  018D  1303               	bcf	3,6	;RP1=0, select bank0
   923  018E  118C               	bcf	12,3	;volatile
   924  018F                     l794:
   925                           
   926                           ;I2CS.c: 91:     PIE1bits.SSPIE = 1;
   927  018F  1683               	bsf	3,5	;RP0=1, select bank1
   928  0190  1303               	bcf	3,6	;RP1=0, select bank1
   929  0191  158C               	bsf	12,3	;volatile
   930  0192                     l164:
   931  0192  0008               	return
   932  0193                     __end_of_I2C_Slave_Init:
   933                           
   934                           	psect	text4
   935  0015                     __ptext4:	
   936 ;; *************** function _ADC_INIT *****************
   937 ;; Defined at:
   938 ;;		line 98 in file "ADC.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  c               1    wreg     unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  c               1    5[COMMON] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         1       0       0       0       0
   954 ;;      Temps:          2       0       0       0       0
   955 ;;      Totals:         3       0       0       0       0
   956 ;;Total ram usage:        3 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; Hardware stack levels required when called: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_setup
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966  0015                     _ADC_INIT:	
   967                           ;psect for function _ADC_INIT
   968                           
   969                           
   970                           ;incstack = 0
   971                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
   972                           ;ADC_INIT@c stored from wreg
   973  0015  00F5               	movwf	ADC_INIT@c
   974  0016                     l766:
   975                           
   976                           ;ADC.c: 99:     switch(c){
   977  0016  2880               	goto	l770
   978  0017                     l89:	
   979                           ;ADC.c: 100:         case 0:
   980                           
   981                           
   982                           ;ADC.c: 101:             ADCON0bits.CHS3 = 0;
   983  0017  1283               	bcf	3,5	;RP0=0, select bank0
   984  0018  1303               	bcf	3,6	;RP1=0, select bank0
   985  0019  129F               	bcf	31,5	;volatile
   986                           
   987                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
   988  001A  121F               	bcf	31,4	;volatile
   989                           
   990                           ;ADC.c: 103:             ADCON0bits.CHS1 = 0;
   991  001B  119F               	bcf	31,3	;volatile
   992                           
   993                           ;ADC.c: 104:             ADCON0bits.CHS0 = 0;
   994  001C  111F               	bcf	31,2	;volatile
   995                           
   996                           ;ADC.c: 105:             break;
   997  001D  28B4               	goto	l90
   998  001E                     l91:	
   999                           ;ADC.c: 107:         case 1:
  1000                           
  1001                           
  1002                           ;ADC.c: 108:             ADCON0bits.CHS3 = 0;
  1003  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1004  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0020  129F               	bcf	31,5	;volatile
  1006                           
  1007                           ;ADC.c: 109:             ADCON0bits.CHS2 = 0;
  1008  0021  121F               	bcf	31,4	;volatile
  1009                           
  1010                           ;ADC.c: 110:             ADCON0bits.CHS1 = 0;
  1011  0022  119F               	bcf	31,3	;volatile
  1012                           
  1013                           ;ADC.c: 111:             ADCON0bits.CHS0 = 1;
  1014  0023  151F               	bsf	31,2	;volatile
  1015                           
  1016                           ;ADC.c: 112:             break;
  1017  0024  28B4               	goto	l90
  1018  0025                     l92:	
  1019                           ;ADC.c: 114:         case 2:
  1020                           
  1021                           
  1022                           ;ADC.c: 115:             ADCON0bits.CHS3 = 0;
  1023  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0027  129F               	bcf	31,5	;volatile
  1026                           
  1027                           ;ADC.c: 116:             ADCON0bits.CHS2 = 0;
  1028  0028  121F               	bcf	31,4	;volatile
  1029                           
  1030                           ;ADC.c: 117:             ADCON0bits.CHS1 = 1;
  1031  0029  159F               	bsf	31,3	;volatile
  1032                           
  1033                           ;ADC.c: 118:             ADCON0bits.CHS0 = 0;
  1034  002A  111F               	bcf	31,2	;volatile
  1035                           
  1036                           ;ADC.c: 119:             break;
  1037  002B  28B4               	goto	l90
  1038  002C                     l93:	
  1039                           ;ADC.c: 121:         case 3:
  1040                           
  1041                           
  1042                           ;ADC.c: 122:             ADCON0bits.CHS3 = 0;
  1043  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1044  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1045  002E  129F               	bcf	31,5	;volatile
  1046                           
  1047                           ;ADC.c: 123:             ADCON0bits.CHS2 = 0;
  1048  002F  121F               	bcf	31,4	;volatile
  1049                           
  1050                           ;ADC.c: 124:             ADCON0bits.CHS1 = 1;
  1051  0030  159F               	bsf	31,3	;volatile
  1052                           
  1053                           ;ADC.c: 125:             ADCON0bits.CHS0 = 1;
  1054  0031  151F               	bsf	31,2	;volatile
  1055                           
  1056                           ;ADC.c: 126:             break;
  1057  0032  28B4               	goto	l90
  1058  0033                     l94:	
  1059                           ;ADC.c: 128:         case 4:
  1060                           
  1061                           
  1062                           ;ADC.c: 129:             ADCON0bits.CHS3 = 0;
  1063  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0035  129F               	bcf	31,5	;volatile
  1066                           
  1067                           ;ADC.c: 130:             ADCON0bits.CHS2 = 1;
  1068  0036  161F               	bsf	31,4	;volatile
  1069                           
  1070                           ;ADC.c: 131:             ADCON0bits.CHS1 = 0;
  1071  0037  119F               	bcf	31,3	;volatile
  1072                           
  1073                           ;ADC.c: 132:             ADCON0bits.CHS0 = 0;
  1074  0038  111F               	bcf	31,2	;volatile
  1075                           
  1076                           ;ADC.c: 133:             break;
  1077  0039  28B4               	goto	l90
  1078  003A                     l95:	
  1079                           ;ADC.c: 135:         case 5:
  1080                           
  1081                           
  1082                           ;ADC.c: 136:             ADCON0bits.CHS3 = 0;
  1083  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1084  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1085  003C  129F               	bcf	31,5	;volatile
  1086                           
  1087                           ;ADC.c: 137:             ADCON0bits.CHS2 = 1;
  1088  003D  161F               	bsf	31,4	;volatile
  1089                           
  1090                           ;ADC.c: 138:             ADCON0bits.CHS1 = 0;
  1091  003E  119F               	bcf	31,3	;volatile
  1092                           
  1093                           ;ADC.c: 139:             ADCON0bits.CHS0 = 1;
  1094  003F  151F               	bsf	31,2	;volatile
  1095                           
  1096                           ;ADC.c: 140:             break;
  1097  0040  28B4               	goto	l90
  1098  0041                     l96:	
  1099                           ;ADC.c: 142:         case 6:
  1100                           
  1101                           
  1102                           ;ADC.c: 143:             ADCON0bits.CHS3 = 0;
  1103  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0043  129F               	bcf	31,5	;volatile
  1106                           
  1107                           ;ADC.c: 144:             ADCON0bits.CHS2 = 1;
  1108  0044  161F               	bsf	31,4	;volatile
  1109                           
  1110                           ;ADC.c: 145:             ADCON0bits.CHS1 = 1;
  1111  0045  159F               	bsf	31,3	;volatile
  1112                           
  1113                           ;ADC.c: 146:             ADCON0bits.CHS0 = 0;
  1114  0046  111F               	bcf	31,2	;volatile
  1115                           
  1116                           ;ADC.c: 147:             break;
  1117  0047  28B4               	goto	l90
  1118  0048                     l97:	
  1119                           ;ADC.c: 149:         case 7:
  1120                           
  1121                           
  1122                           ;ADC.c: 150:             ADCON0bits.CHS3 = 0;
  1123  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1125  004A  129F               	bcf	31,5	;volatile
  1126                           
  1127                           ;ADC.c: 151:             ADCON0bits.CHS2 = 1;
  1128  004B  161F               	bsf	31,4	;volatile
  1129                           
  1130                           ;ADC.c: 152:             ADCON0bits.CHS1 = 1;
  1131  004C  159F               	bsf	31,3	;volatile
  1132                           
  1133                           ;ADC.c: 153:             ADCON0bits.CHS0 = 1;
  1134  004D  151F               	bsf	31,2	;volatile
  1135                           
  1136                           ;ADC.c: 154:             break;
  1137  004E  28B4               	goto	l90
  1138  004F                     l98:	
  1139                           ;ADC.c: 156:         case 8:
  1140                           
  1141                           
  1142                           ;ADC.c: 157:             ADCON0bits.CHS3 = 1;
  1143  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0051  169F               	bsf	31,5	;volatile
  1146                           
  1147                           ;ADC.c: 158:             ADCON0bits.CHS2 = 0;
  1148  0052  121F               	bcf	31,4	;volatile
  1149                           
  1150                           ;ADC.c: 159:             ADCON0bits.CHS1 = 0;
  1151  0053  119F               	bcf	31,3	;volatile
  1152                           
  1153                           ;ADC.c: 160:             ADCON0bits.CHS0 = 0;
  1154  0054  111F               	bcf	31,2	;volatile
  1155                           
  1156                           ;ADC.c: 161:             break;
  1157  0055  28B4               	goto	l90
  1158  0056                     l99:	
  1159                           ;ADC.c: 163:         case 9:
  1160                           
  1161                           
  1162                           ;ADC.c: 164:             ADCON0bits.CHS3 = 1;
  1163  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0058  169F               	bsf	31,5	;volatile
  1166                           
  1167                           ;ADC.c: 165:             ADCON0bits.CHS2 = 0;
  1168  0059  121F               	bcf	31,4	;volatile
  1169                           
  1170                           ;ADC.c: 166:             ADCON0bits.CHS1 = 0;
  1171  005A  119F               	bcf	31,3	;volatile
  1172                           
  1173                           ;ADC.c: 167:             ADCON0bits.CHS0 = 1;
  1174  005B  151F               	bsf	31,2	;volatile
  1175                           
  1176                           ;ADC.c: 168:             break;
  1177  005C  28B4               	goto	l90
  1178  005D                     l100:	
  1179                           ;ADC.c: 170:         case 10:
  1180                           
  1181                           
  1182                           ;ADC.c: 171:             ADCON0bits.CHS3 = 1;
  1183  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1184  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1185  005F  169F               	bsf	31,5	;volatile
  1186                           
  1187                           ;ADC.c: 172:             ADCON0bits.CHS2 = 0;
  1188  0060  121F               	bcf	31,4	;volatile
  1189                           
  1190                           ;ADC.c: 173:             ADCON0bits.CHS1 = 1;
  1191  0061  159F               	bsf	31,3	;volatile
  1192                           
  1193                           ;ADC.c: 174:             ADCON0bits.CHS0 = 0;
  1194  0062  111F               	bcf	31,2	;volatile
  1195                           
  1196                           ;ADC.c: 175:             break;
  1197  0063  28B4               	goto	l90
  1198  0064                     l101:	
  1199                           ;ADC.c: 177:         case 11:
  1200                           
  1201                           
  1202                           ;ADC.c: 178:             ADCON0bits.CHS3 = 1;
  1203  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0066  169F               	bsf	31,5	;volatile
  1206                           
  1207                           ;ADC.c: 179:             ADCON0bits.CHS2 = 0;
  1208  0067  121F               	bcf	31,4	;volatile
  1209                           
  1210                           ;ADC.c: 180:             ADCON0bits.CHS1 = 1;
  1211  0068  159F               	bsf	31,3	;volatile
  1212                           
  1213                           ;ADC.c: 181:             ADCON0bits.CHS0 = 1;
  1214  0069  151F               	bsf	31,2	;volatile
  1215                           
  1216                           ;ADC.c: 182:             break;
  1217  006A  28B4               	goto	l90
  1218  006B                     l102:	
  1219                           ;ADC.c: 184:         case 12:
  1220                           
  1221                           
  1222                           ;ADC.c: 185:             ADCON0bits.CHS3 = 1;
  1223  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1224  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1225  006D  169F               	bsf	31,5	;volatile
  1226                           
  1227                           ;ADC.c: 186:             ADCON0bits.CHS2 = 1;
  1228  006E  161F               	bsf	31,4	;volatile
  1229                           
  1230                           ;ADC.c: 187:             ADCON0bits.CHS1 = 0;
  1231  006F  119F               	bcf	31,3	;volatile
  1232                           
  1233                           ;ADC.c: 188:             ADCON0bits.CHS0 = 0;
  1234  0070  111F               	bcf	31,2	;volatile
  1235                           
  1236                           ;ADC.c: 189:             break;
  1237  0071  28B4               	goto	l90
  1238  0072                     l103:	
  1239                           ;ADC.c: 191:         case 13:
  1240                           
  1241                           
  1242                           ;ADC.c: 192:             ADCON0bits.CHS3 = 1;
  1243  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0074  169F               	bsf	31,5	;volatile
  1246                           
  1247                           ;ADC.c: 193:             ADCON0bits.CHS2 = 1;
  1248  0075  161F               	bsf	31,4	;volatile
  1249                           
  1250                           ;ADC.c: 194:             ADCON0bits.CHS1 = 0;
  1251  0076  119F               	bcf	31,3	;volatile
  1252                           
  1253                           ;ADC.c: 195:             ADCON0bits.CHS0 = 1;
  1254  0077  151F               	bsf	31,2	;volatile
  1255                           
  1256                           ;ADC.c: 196:             break;
  1257  0078  28B4               	goto	l90
  1258  0079                     l104:	
  1259                           ;ADC.c: 198:         default:
  1260                           
  1261                           
  1262                           ;ADC.c: 199:             ADCON0bits.CHS3 = 0;
  1263  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1264  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1265  007B  129F               	bcf	31,5	;volatile
  1266                           
  1267                           ;ADC.c: 200:             ADCON0bits.CHS2 = 0;
  1268  007C  121F               	bcf	31,4	;volatile
  1269                           
  1270                           ;ADC.c: 201:             ADCON0bits.CHS1 = 0;
  1271  007D  119F               	bcf	31,3	;volatile
  1272                           
  1273                           ;ADC.c: 202:             ADCON0bits.CHS0 = 0;
  1274  007E  111F               	bcf	31,2	;volatile
  1275                           
  1276                           ;ADC.c: 203:             break;
  1277  007F  28B4               	goto	l90
  1278  0080                     l770:
  1279  0080  0875               	movf	ADC_INIT@c,w
  1280  0081  00F3               	movwf	??_ADC_INIT
  1281  0082  01F4               	clrf	??_ADC_INIT+1
  1282                           
  1283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 1, Range of values is 0 to 0
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte            4     3 (average)
  1289                           ; direct_byte           11     8 (fixed)
  1290                           ; jumptable            260     6 (fixed)
  1291                           ;	Chosen strategy is simple_byte
  1292  0083  0874               	movf	??_ADC_INIT+1,w
  1293  0084  3A00               	xorlw	0	; case 0
  1294  0085  1903               	skipnz
  1295  0086  2888               	goto	l938
  1296  0087  2879               	goto	l104
  1297  0088                     l938:
  1298                           
  1299                           ; Switch size 1, requested type "simple"
  1300                           ; Number of cases is 14, Range of values is 0 to 13
  1301                           ; switch strategies available:
  1302                           ; Name         Instructions Cycles
  1303                           ; simple_byte           43    22 (average)
  1304                           ; direct_byte           50     8 (fixed)
  1305                           ; jumptable            260     6 (fixed)
  1306                           ;	Chosen strategy is simple_byte
  1307  0088  0873               	movf	??_ADC_INIT,w
  1308  0089  3A00               	xorlw	0	; case 0
  1309  008A  1903               	skipnz
  1310  008B  2817               	goto	l89
  1311  008C  3A01               	xorlw	1	; case 1
  1312  008D  1903               	skipnz
  1313  008E  281E               	goto	l91
  1314  008F  3A03               	xorlw	3	; case 2
  1315  0090  1903               	skipnz
  1316  0091  2825               	goto	l92
  1317  0092  3A01               	xorlw	1	; case 3
  1318  0093  1903               	skipnz
  1319  0094  282C               	goto	l93
  1320  0095  3A07               	xorlw	7	; case 4
  1321  0096  1903               	skipnz
  1322  0097  2833               	goto	l94
  1323  0098  3A01               	xorlw	1	; case 5
  1324  0099  1903               	skipnz
  1325  009A  283A               	goto	l95
  1326  009B  3A03               	xorlw	3	; case 6
  1327  009C  1903               	skipnz
  1328  009D  2841               	goto	l96
  1329  009E  3A01               	xorlw	1	; case 7
  1330  009F  1903               	skipnz
  1331  00A0  2848               	goto	l97
  1332  00A1  3A0F               	xorlw	15	; case 8
  1333  00A2  1903               	skipnz
  1334  00A3  284F               	goto	l98
  1335  00A4  3A01               	xorlw	1	; case 9
  1336  00A5  1903               	skipnz
  1337  00A6  2856               	goto	l99
  1338  00A7  3A03               	xorlw	3	; case 10
  1339  00A8  1903               	skipnz
  1340  00A9  285D               	goto	l100
  1341  00AA  3A01               	xorlw	1	; case 11
  1342  00AB  1903               	skipnz
  1343  00AC  2864               	goto	l101
  1344  00AD  3A07               	xorlw	7	; case 12
  1345  00AE  1903               	skipnz
  1346  00AF  286B               	goto	l102
  1347  00B0  3A01               	xorlw	1	; case 13
  1348  00B1  1903               	skipnz
  1349  00B2  2872               	goto	l103
  1350  00B3  2879               	goto	l104
  1351  00B4                     l90:
  1352                           
  1353                           ;ADC.c: 206:     ADCON1bits.VCFG0 = 0;
  1354  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1355  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1356  00B6  121F               	bcf	31,4	;volatile
  1357                           
  1358                           ;ADC.c: 207:     ADCON1bits.VCFG1 = 0;
  1359  00B7  129F               	bcf	31,5	;volatile
  1360                           
  1361                           ;ADC.c: 209:     ADCON0bits.ADCS0 = 0;
  1362  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1363  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1364  00BA  131F               	bcf	31,6	;volatile
  1365                           
  1366                           ;ADC.c: 210:     ADCON0bits.ADCS1 = 1;
  1367  00BB  179F               	bsf	31,7	;volatile
  1368                           
  1369                           ;ADC.c: 212:     ADCON1bits.ADFM =0;
  1370  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1371  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1372  00BE  139F               	bcf	31,7	;volatile
  1373                           
  1374                           ;ADC.c: 214:     ADCON0bits.ADON = 1;
  1375  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1376  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1377  00C1  141F               	bsf	31,0	;volatile
  1378  00C2                     l772:
  1379                           
  1380                           ;ADC.c: 215:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1381  00C2  3021               	movlw	33
  1382  00C3  00F3               	movwf	??_ADC_INIT
  1383  00C4                     u157:
  1384  00C4  0BF3               	decfsz	??_ADC_INIT,f
  1385  00C5  28C4               	goto	u157
  1386  00C6                     l774:
  1387                           
  1388                           ;ADC.c: 216:     ADCON0bits.GO_nDONE = 1;
  1389  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1391  00C8  149F               	bsf	31,1	;volatile
  1392  00C9                     l105:
  1393  00C9  0008               	return
  1394  00CA                     __end_of_ADC_INIT:
  1395                           
  1396                           	psect	text5
  1397  01AB                     __ptext5:	
  1398 ;; *************** function _ADC_READ *****************
  1399 ;; Defined at:
  1400 ;;		line 219 in file "ADC.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      unsigned char 
  1407 ;; Registers used:
  1408 ;;		wreg
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          2       0       0       0       0
  1417 ;;      Totals:         2       0       0       0       0
  1418 ;;Total ram usage:        2 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428  01AB                     _ADC_READ:	
  1429                           ;psect for function _ADC_READ
  1430                           
  1431  01AB                     l806:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _ADC_READ: [wreg]
  1434                           
  1435                           
  1436                           ;ADC.c: 220:     ADCON0bits.GO_nDONE = 1;
  1437  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1438  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1439  01AD  149F               	bsf	31,1	;volatile
  1440  01AE                     l808:
  1441                           
  1442                           ;ADC.c: 221:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1443  01AE  3082               	movlw	130
  1444  01AF  00F4               	movwf	??_ADC_READ+1
  1445  01B0  30DD               	movlw	221
  1446  01B1  00F3               	movwf	??_ADC_READ
  1447  01B2                     u167:
  1448  01B2  0BF3               	decfsz	??_ADC_READ,f
  1449  01B3  29B2               	goto	u167
  1450  01B4  0BF4               	decfsz	??_ADC_READ+1,f
  1451  01B5  29B2               	goto	u167
  1452  01B6  29B7               	nop2
  1453  01B7                     l108:	
  1454                           ;ADC.c: 222:     while( ADCON0bits.GO_nDONE == 1);
  1455                           
  1456  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1457  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1458  01B9  189F               	btfsc	31,1	;volatile
  1459  01BA  29BC               	goto	u11
  1460  01BB  29BD               	goto	u10
  1461  01BC                     u11:
  1462  01BC  29B7               	goto	l108
  1463  01BD                     u10:
  1464  01BD                     l810:
  1465                           
  1466                           ;ADC.c: 223:     return ADRESH;
  1467  01BD  081E               	movf	30,w	;volatile
  1468  01BE                     l111:
  1469  01BE  0008               	return
  1470  01BF                     __end_of_ADC_READ:
  1471                           
  1472                           	psect	text6
  1473  00CA                     __ptext6:	
  1474 ;; *************** function _isr *****************
  1475 ;; Defined at:
  1476 ;;		line 41 in file "MAIN_S.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          3       0       0       0       0
  1493 ;;      Totals:         3       0       0       0       0
  1494 ;;Total ram usage:        3 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		Interrupt level 1
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503  00CA                     _isr:	
  1504                           ;psect for function _isr
  1505                           
  1506  00CA                     i1l818:
  1507                           
  1508                           ;MAIN_S.c: 42:    if(PIR1bits.SSPIF == 1){
  1509  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1510  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1511  00CC  1D8C               	btfss	12,3	;volatile
  1512  00CD  28CF               	goto	u4_21
  1513  00CE  28D0               	goto	u4_20
  1514  00CF                     u4_21:
  1515  00CF  2926               	goto	i1l50
  1516  00D0                     u4_20:
  1517  00D0                     i1l820:
  1518                           
  1519                           ;MAIN_S.c: 43:         SSPCONbits.CKP = 0;
  1520  00D0  1214               	bcf	20,4	;volatile
  1521                           
  1522                           ;MAIN_S.c: 44:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1523  00D1  1B14               	btfsc	20,6	;volatile
  1524  00D2  28D4               	goto	u5_21
  1525  00D3  28D5               	goto	u5_20
  1526  00D4                     u5_21:
  1527  00D4  28D9               	goto	i1l824
  1528  00D5                     u5_20:
  1529  00D5                     i1l822:
  1530  00D5  1F94               	btfss	20,7	;volatile
  1531  00D6  28D8               	goto	u6_21
  1532  00D7  28D9               	goto	u6_20
  1533  00D8                     u6_21:
  1534  00D8  28E0               	goto	i1l832
  1535  00D9                     u6_20:
  1536  00D9                     i1l824:
  1537                           
  1538                           ;MAIN_S.c: 45:             z = SSPBUF;
  1539  00D9  0813               	movf	19,w	;volatile
  1540  00DA  00F0               	movwf	??_isr
  1541  00DB  0870               	movf	??_isr,w
  1542  00DC  00F8               	movwf	_z
  1543  00DD                     i1l826:
  1544                           
  1545                           ;MAIN_S.c: 46:             SSPCONbits.SSPOV = 0;
  1546  00DD  1314               	bcf	20,6	;volatile
  1547  00DE                     i1l828:
  1548                           
  1549                           ;MAIN_S.c: 47:             SSPCONbits.WCOL = 0;
  1550  00DE  1394               	bcf	20,7	;volatile
  1551  00DF                     i1l830:
  1552                           
  1553                           ;MAIN_S.c: 48:             SSPCONbits.CKP = 1;
  1554  00DF  1614               	bsf	20,4	;volatile
  1555  00E0                     i1l832:
  1556                           
  1557                           ;MAIN_S.c: 50:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1558  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1559  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1560  00E2  1A94               	btfsc	20,5	;volatile
  1561  00E3  28E5               	goto	u7_21
  1562  00E4  28E6               	goto	u7_20
  1563  00E5                     u7_21:
  1564  00E5  2902               	goto	i1l41
  1565  00E6                     u7_20:
  1566  00E6                     i1l834:
  1567  00E6  1914               	btfsc	20,2	;volatile
  1568  00E7  28E9               	goto	u8_21
  1569  00E8  28EA               	goto	u8_20
  1570  00E9                     u8_21:
  1571  00E9  2902               	goto	i1l41
  1572  00EA                     u8_20:
  1573  00EA                     i1l836:
  1574                           
  1575                           ;MAIN_S.c: 52:             z = SSPBUF;
  1576  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1577  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1578  00EC  0813               	movf	19,w	;volatile
  1579  00ED  00F0               	movwf	??_isr
  1580  00EE  0870               	movf	??_isr,w
  1581  00EF  00F8               	movwf	_z
  1582  00F0                     i1l838:
  1583                           
  1584                           ;MAIN_S.c: 54:             PIR1bits.SSPIF = 0;
  1585  00F0  118C               	bcf	12,3	;volatile
  1586  00F1                     i1l840:
  1587                           
  1588                           ;MAIN_S.c: 55:             SSPCONbits.CKP = 1;
  1589  00F1  1614               	bsf	20,4	;volatile
  1590  00F2                     i1l42:	
  1591                           ;MAIN_S.c: 56:             while(!SSPSTATbits.BF);
  1592                           
  1593  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1594  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1595  00F4  1C14               	btfss	20,0	;volatile
  1596  00F5  28F7               	goto	u9_21
  1597  00F6  28F8               	goto	u9_20
  1598  00F7                     u9_21:
  1599  00F7  28F2               	goto	i1l42
  1600  00F8                     u9_20:
  1601  00F8                     i1l842:
  1602                           
  1603                           ;MAIN_S.c: 57:             PORTD = SSPBUF;
  1604  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1605  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1606  00FA  0813               	movf	19,w	;volatile
  1607  00FB  0088               	movwf	8	;volatile
  1608                           
  1609                           ;MAIN_S.c: 58:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1610  00FC  30A6               	movlw	166
  1611  00FD  00F0               	movwf	??_isr
  1612  00FE                     u17_27:
  1613  00FE  0BF0               	decfsz	??_isr,f
  1614  00FF  28FE               	goto	u17_27
  1615  0100  0000               	nop
  1616                           
  1617                           ;MAIN_S.c: 60:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1618  0101  2923               	goto	i1l45
  1619  0102                     i1l41:
  1620  0102  1A94               	btfsc	20,5	;volatile
  1621  0103  2905               	goto	u10_21
  1622  0104  2906               	goto	u10_20
  1623  0105                     u10_21:
  1624  0105  2923               	goto	i1l45
  1625  0106                     u10_20:
  1626  0106                     i1l844:
  1627  0106  1D14               	btfss	20,2	;volatile
  1628  0107  2909               	goto	u11_21
  1629  0108  290A               	goto	u11_20
  1630  0109                     u11_21:
  1631  0109  2923               	goto	i1l45
  1632  010A                     u11_20:
  1633  010A                     i1l846:
  1634                           
  1635                           ;MAIN_S.c: 61:             z = SSPBUF;
  1636  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1637  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1638  010C  0813               	movf	19,w	;volatile
  1639  010D  00F0               	movwf	??_isr
  1640  010E  0870               	movf	??_isr,w
  1641  010F  00F8               	movwf	_z
  1642  0110                     i1l848:
  1643                           
  1644                           ;MAIN_S.c: 62:             BF = 0;
  1645  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0112  1014               	bcf	20,0	;volatile
  1648                           
  1649                           ;MAIN_S.c: 63:             SSPBUF = POT;
  1650  0113  0877               	movf	_POT,w
  1651  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0116  0093               	movwf	19	;volatile
  1654  0117                     i1l850:
  1655                           
  1656                           ;MAIN_S.c: 64:             SSPCONbits.CKP = 1;
  1657  0117  1614               	bsf	20,4	;volatile
  1658                           
  1659                           ;MAIN_S.c: 65:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1660  0118  30A6               	movlw	166
  1661  0119  00F0               	movwf	??_isr
  1662  011A                     u18_27:
  1663  011A  0BF0               	decfsz	??_isr,f
  1664  011B  291A               	goto	u18_27
  1665  011C  0000               	nop
  1666  011D                     i1l47:	
  1667                           ;MAIN_S.c: 66:             while(SSPSTATbits.BF);
  1668                           
  1669  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1670  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1671  011F  1814               	btfsc	20,0	;volatile
  1672  0120  2922               	goto	u12_21
  1673  0121  2923               	goto	u12_20
  1674  0122                     u12_21:
  1675  0122  291D               	goto	i1l47
  1676  0123                     u12_20:
  1677  0123                     i1l45:
  1678                           
  1679                           ;MAIN_S.c: 68:         PIR1bits.SSPIF = 0;
  1680  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1682  0125  118C               	bcf	12,3	;volatile
  1683  0126                     i1l50:
  1684  0126  0872               	movf	??_isr+2,w
  1685  0127  008A               	movwf	10
  1686  0128  0E71               	swapf	??_isr+1,w
  1687  0129  0083               	movwf	3
  1688  012A  0EFE               	swapf	btemp,f
  1689  012B  0E7E               	swapf	btemp,w
  1690  012C  0009               	retfie
  1691  012D                     __end_of_isr:
  1692  007E                     btemp	set	126	;btemp
  1693  007E                     wtemp0	set	126
  1694                           
  1695                           	psect	intentry
  1696  0004                     __pintentry:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _isr: [wreg]
  1699                           
  1700  0004                     interrupt_function:
  1701  007E                     saved_w	set	btemp
  1702  0004  00FE               	movwf	btemp
  1703  0005  0E03               	swapf	3,w
  1704  0006  00F1               	movwf	??_isr+1
  1705  0007  080A               	movf	10,w
  1706  0008  00F2               	movwf	??_isr+2
  1707  0009  120A  118A  28CA   	ljmp	_isr
  1708                           
  1709                           	psect	idloc
  1710                           
  1711                           ;Config register IDLOC0 @ 0x2000
  1712                           ;	unspecified, using default values
  1713  2000                     	org	8192
  1714  2000  3FFF               	dw	16383
  1715                           
  1716                           ;Config register IDLOC1 @ 0x2001
  1717                           ;	unspecified, using default values
  1718  2001                     	org	8193
  1719  2001  3FFF               	dw	16383
  1720                           
  1721                           ;Config register IDLOC2 @ 0x2002
  1722                           ;	unspecified, using default values
  1723  2002                     	org	8194
  1724  2002  3FFF               	dw	16383
  1725                           
  1726                           ;Config register IDLOC3 @ 0x2003
  1727                           ;	unspecified, using default values
  1728  2003                     	org	8195
  1729  2003  3FFF               	dw	16383
  1730                           
  1731                           	psect	config
  1732                           
  1733                           ;Config register CONFIG1 @ 0x2007
  1734                           ;	Oscillator Selection bits
  1735                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1736                           ;	Watchdog Timer Enable bit
  1737                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1738                           ;	Power-up Timer Enable bit
  1739                           ;	PWRTE = OFF, PWRT disabled
  1740                           ;	RE3/MCLR pin function select bit
  1741                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1742                           ;	Code Protection bit
  1743                           ;	CP = OFF, Program memory code protection is disabled
  1744                           ;	Data Code Protection bit
  1745                           ;	CPD = OFF, Data memory code protection is disabled
  1746                           ;	Brown Out Reset Selection bits
  1747                           ;	BOREN = OFF, BOR disabled
  1748                           ;	Internal External Switchover bit
  1749                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1750                           ;	Fail-Safe Clock Monitor Enabled bit
  1751                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1752                           ;	Low Voltage Programming Enable bit
  1753                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1754                           ;	In-Circuit Debugger Mode bit
  1755                           ;	DEBUG = 0x1, unprogrammed default
  1756  2007                     	org	8199
  1757  2007  20D4               	dw	8404
  1758                           
  1759                           ;Config register CONFIG2 @ 0x2008
  1760                           ;	Brown-out Reset Selection bit
  1761                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1762                           ;	Flash Program Memory Self Write Enable bits
  1763                           ;	WRT = OFF, Write protection off
  1764  2008                     	org	8200
  1765  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC_INIT
    _setup->_OSCILLATOR

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              6 COMMON     1     1      0
                           _ADC_READ
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      45
                           _ADC_INIT
                     _I2C_Slave_Init
                         _OSCILLATOR
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _setup
     _ADC_INIT
     _I2C_Slave_Init
     _OSCILLATOR

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Aug 05 22:13:09 2023

                      _z 0078              _SSPSTATbits 0094                       _BF 04A0  
                     l61 01AA                       l80 0142                       l81 0146  
                     l90 00B4                       l82 014A                       l91 001E  
                     l83 014E                       l75 0132                       l92 0025  
                     l84 0152                       l93 002C                       l77 0136  
                     l85 0178                       l94 0033                       l78 013A  
                     l95 003A                       l79 013E                       l96 0041  
                     l97 0048                       l89 0017                       l98 004F  
                     l99 0056                       u10 01BD                       u11 01BC  
                    l100 005D                      l101 0064                      l102 006B  
                    l111 01BE                      l103 0072                      l104 0079  
                    l105 00C9                      l108 01B7                      l164 0192  
                    l800 019D                      l810 01BD                      l802 019E  
                    l804 01A4                      l806 01AB                      l808 01AE  
                    l760 0156                      l770 0080                      l772 00C2  
                    l756 012E                      l852 01BF                      l774 00C6  
                    l766 0016                      l790 018B                      l782 017A  
                    l854 01C4                      l792 018C                      l784 0188  
                    l936 015E                      l938 0088                      l794 018F  
                    l786 0189                      l788 018A                      l796 0193  
                    l798 0199                      u157 00C4                      u167 01B2  
                    _POT 0077                      _isr 00CA                     ?_isr 0070  
                   i1l41 0102                     i1l42 00F2                     i1l50 0126  
                   i1l45 0123                     i1l47 011D                     u4_20 00D0  
                   u4_21 00CF                     u5_20 00D5                     u5_21 00D4  
                   u6_20 00D9                     u6_21 00D8                     u7_20 00E6  
                   u7_21 00E5                     u8_20 00EA                     u8_21 00E9  
                   u9_20 00F8                     u9_21 00F7         __end_of_ADC_INIT 00CA  
       __end_of_ADC_READ 01BF                     _main 01BF                     btemp 007E  
                   start 000C              ?_OSCILLATOR 0070                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l820 00D0  
                  i1l830 00DF                    i1l822 00D5                    i1l840 00F1  
                  i1l832 00E0                    i1l824 00D9                    i1l850 0117  
                  i1l842 00F8                    i1l834 00E6                    i1l826 00DD  
                  i1l818 00CA                    i1l844 0106                    i1l836 00EA  
                  i1l828 00DE                    i1l846 010A                    i1l838 00F0  
                  i1l848 0110                    u10_20 0106                    u10_21 0105  
                  u11_20 010A                    u11_21 0109                    u12_20 0123  
                  u12_21 0122                    u17_27 00FE                    u18_27 011A  
                  _PORTD 0008                    _setup 0193                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01D0                   ??_main 0076                ADC_INIT@c 0075  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPBUF 0013                   _SSPCON 0014                ?_ADC_INIT 0070  
              ?_ADC_READ 0070                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070              OSCILLATOR@f 0075            __end_of_setup 01AB  
             ??_ADC_INIT 0073               ??_ADC_READ 0073                  ??_setup 0076  
  I2C_Slave_Init@address 0073             ??_OSCILLATOR 0073               __pmaintext 01BF  
             __pintentry 0004       __end_of_OSCILLATOR 0179                  _SSPCON2 0091  
                _SSPSTAT 0094                  __ptext1 0193                  __ptext2 012D  
                __ptext3 0179                  __ptext4 0015                  __ptext5 01AB  
                __ptext6 00CA     end_of_initialization 0011           _I2C_Slave_Init 0179  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 0193      start_initialization 000F  
            __end_of_isr 012D          ?_I2C_Slave_Init 0070              __pbssCOMMON 0077  
              ___latbits 0002                 _ADC_INIT 0015                 _ADC_READ 01AB  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         ??_I2C_Slave_Init 0073  
             _INTCONbits 000B                 intlevel1 0000               _OSCILLATOR 012D  
             _OSCCONbits 008F              _SSPCON2bits 0091               _SSPCONbits 0014  
