

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Jul 15 16:49:15 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  008F                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0105                     	;# 
   429  0107                     	;# 
   430  0108                     	;# 
   431  0109                     	;# 
   432  010C                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  010F                     	;# 
   437  0185                     	;# 
   438  0187                     	;# 
   439  0188                     	;# 
   440  0189                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443                           
   444                           	psect	strings
   445  0117                     __pstrings:
   446  0117                     stringtab:
   447  0117                     __stringtab:
   448  0117                     stringcode:	
   449                           ;	String table - string pointers are 1 byte each
   450                           
   451  0117                     stringdir:
   452  0117  3001               	movlw	high stringdir
   453  0118  008A               	movwf	10
   454  0119  0804               	movf	4,w
   455  011A  0A84               	incf	4,f
   456  011B  0782               	addwf	2,f
   457  011C                     __stringbase:
   458  011C  3400               	retlw	0
   459  011D                     __end_of__stringtab:
   460  011D                     _tabla:
   461  011D  34FC               	retlw	252
   462  011E  3460               	retlw	96
   463  011F  34DA               	retlw	218
   464  0120  34F2               	retlw	242
   465  0121  3466               	retlw	102
   466  0122  34B6               	retlw	182
   467  0123  34BE               	retlw	190
   468  0124  34E0               	retlw	224
   469  0125  34FE               	retlw	254
   470  0126  34F6               	retlw	246
   471  0127  34EE               	retlw	238
   472  0128  343E               	retlw	62
   473  0129  349C               	retlw	156
   474  012A  347A               	retlw	122
   475  012B  349E               	retlw	158
   476  012C  348E               	retlw	142
   477  012D                     __end_of_tabla:
   478  001E                     _ADRESH	set	30
   479  001F                     _ADCON0bits	set	31
   480  0008                     _PORTD	set	8
   481  0006                     _PORTB	set	6
   482  0007                     _PORTC	set	7
   483  000B                     _INTCONbits	set	11
   484  0005                     _PORTA	set	5
   485  0031                     _RB1	set	49
   486  0030                     _RB0	set	48
   487  0058                     _RBIF	set	88
   488  0096                     _IOCBbits	set	150
   489  0095                     _WPUBbits	set	149
   490  0081                     _OPTION_REGbits	set	129
   491  009F                     _ADCON1bits	set	159
   492  008F                     _OSCCONbits	set	143
   493  0088                     _TRISD	set	136
   494  0087                     _TRISC	set	135
   495  0086                     _TRISB	set	134
   496  0085                     _TRISA	set	133
   497  0189                     _ANSELH	set	393
   498  0188                     _ANSEL	set	392
   499                           
   500                           	psect	cinit
   501  000F                     start_initialization:	
   502                           ; #config settings
   503                           
   504  000F                     __initialization:
   505  000F                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  000F                     __end_of__initialization:
   509  000F  0183               	clrf	3
   510  0010  120A  118A  2942   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	cstackCOMMON
   513  0070                     __pcstackCOMMON:
   514  0070                     ?_setup:
   515  0070                     ?_IOC_INT:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_isr:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_isr:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527                           
   528                           ; 1 bytes @ 0x0
   529  0070                     	ds	3
   530  0073                     ??_IOC_INT:
   531  0073                     ?_ADC_INIT:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ?_ADC_READ:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     IOC_INT@a:	
   538                           ; 2 bytes @ 0x3
   539                           
   540  0073                     ADC_INIT@c:	
   541                           ; 1 bytes @ 0x3
   542                           
   543                           
   544                           ; 2 bytes @ 0x3
   545  0073                     	ds	2
   546  0075                     ??_setup:
   547  0075                     ??_ADC_READ:	
   548                           ; 1 bytes @ 0x5
   549                           
   550  0075                     ??_ADC_INIT:	
   551                           ; 1 bytes @ 0x5
   552                           
   553                           
   554                           ; 1 bytes @ 0x5
   555  0075                     	ds	2
   556  0077                     ??_main:
   557                           
   558                           	psect	maintext
   559  0142                     __pmaintext:	
   560                           ; 1 bytes @ 0x7
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 78 in file "MAIN.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels required when called: 3
   586 ;; This function calls:
   587 ;;		_ADC_READ
   588 ;;		_setup
   589 ;; This function is called by:
   590 ;;		Startup code after reset
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594  0142                     _main:	
   595                           ;psect for function _main
   596                           
   597  0142                     l940:	
   598                           ;incstack = 0
   599                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   600                           
   601                           
   602                           ;MAIN.c: 79:     setup();
   603  0142  120A  118A  20AF  120A  118A  	fcall	_setup
   604  0147                     l942:
   605                           
   606                           ;MAIN.c: 83:             PORTC = ADC_READ();
   607  0147  120A  118A  212D  120A  118A  	fcall	_ADC_READ
   608  014C  0873               	movf	?_ADC_READ,w
   609  014D  1283               	bcf	3,5	;RP0=0, select bank0
   610  014E  1303               	bcf	3,6	;RP1=0, select bank0
   611  014F  0087               	movwf	7	;volatile
   612  0150  2947               	goto	l942
   613  0151  120A  118A  280C   	ljmp	start
   614  0154                     __end_of_main:
   615                           
   616                           	psect	text1
   617  00AF                     __ptext1:	
   618 ;; *************** function _setup *****************
   619 ;; Defined at:
   620 ;;		line 90 in file "MAIN.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          1       0       0       0       0
   637 ;;      Totals:         1       0       0       0       0
   638 ;;Total ram usage:        1 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 2
   641 ;; This function calls:
   642 ;;		_ADC_INIT
   643 ;;		_IOC_INT
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649  00AF                     _setup:	
   650                           ;psect for function _setup
   651                           
   652  00AF                     l872:	
   653                           ;incstack = 0
   654                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   655                           
   656                           
   657                           ;MAIN.c: 92:     ANSEL = 0b00100000;
   658  00AF  3020               	movlw	32
   659  00B0  1683               	bsf	3,5	;RP0=1, select bank3
   660  00B1  1703               	bsf	3,6	;RP1=1, select bank3
   661  00B2  0088               	movwf	8	;volatile
   662  00B3                     l874:
   663                           
   664                           ;MAIN.c: 93:     ANSELH = 0x00;
   665  00B3  0189               	clrf	9	;volatile
   666  00B4                     l876:
   667                           
   668                           ;MAIN.c: 95:     TRISA = 0x00;
   669  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   670  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   671  00B6  0185               	clrf	5	;volatile
   672                           
   673                           ;MAIN.c: 96:     TRISB = 0b00000011;
   674  00B7  3003               	movlw	3
   675  00B8  0086               	movwf	6	;volatile
   676  00B9                     l878:
   677                           
   678                           ;MAIN.c: 97:     TRISC = 0x00;
   679  00B9  0187               	clrf	7	;volatile
   680  00BA                     l880:
   681                           
   682                           ;MAIN.c: 98:     TRISD = 0x00;
   683  00BA  0188               	clrf	8	;volatile
   684  00BB                     l882:
   685                           
   686                           ;MAIN.c: 100:     PORTA = 0x00;
   687  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   688  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   689  00BD  0185               	clrf	5	;volatile
   690  00BE                     l884:
   691                           
   692                           ;MAIN.c: 101:     PORTB = 0x00;
   693  00BE  0186               	clrf	6	;volatile
   694  00BF                     l886:
   695                           
   696                           ;MAIN.c: 102:     PORTC = 0x00;
   697  00BF  0187               	clrf	7	;volatile
   698  00C0                     l888:
   699                           
   700                           ;MAIN.c: 103:     PORTD = 0x00;
   701  00C0  0188               	clrf	8	;volatile
   702  00C1                     l890:
   703                           
   704                           ;MAIN.c: 106:     OSCCONbits.IRCF2 =1;
   705  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   706  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   707  00C3  170F               	bsf	15,6	;volatile
   708  00C4                     l892:
   709                           
   710                           ;MAIN.c: 107:     OSCCONbits.IRCF1 =1;
   711  00C4  168F               	bsf	15,5	;volatile
   712  00C5                     l894:
   713                           
   714                           ;MAIN.c: 108:     OSCCONbits.IRCF0 =0;
   715  00C5  120F               	bcf	15,4	;volatile
   716  00C6                     l896:
   717                           
   718                           ;MAIN.c: 109:     OSCCONbits.SCS =1;
   719  00C6  140F               	bsf	15,0	;volatile
   720  00C7                     l898:
   721                           
   722                           ;MAIN.c: 116:     IOC_INT(0b00000011);
   723  00C7  3003               	movlw	3
   724  00C8  120A  118A  2154  120A  118A  	fcall	_IOC_INT
   725  00CD                     l900:
   726                           
   727                           ;MAIN.c: 119:     ADC_INIT(5);
   728  00CD  3005               	movlw	5
   729  00CE  00F3               	movwf	ADC_INIT@c
   730  00CF  3000               	movlw	0
   731  00D0  00F4               	movwf	ADC_INIT@c+1
   732  00D1  120A  118A  2013  120A  118A  	fcall	_ADC_INIT
   733  00D6                     l902:
   734                           
   735                           ;MAIN.c: 121:     ADCON1bits.VCFG0 = 0;
   736  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   737  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   738  00D8  121F               	bcf	31,4	;volatile
   739  00D9                     l904:
   740                           
   741                           ;MAIN.c: 122:     ADCON1bits.VCFG1 = 0;
   742  00D9  129F               	bcf	31,5	;volatile
   743  00DA                     l906:
   744                           
   745                           ;MAIN.c: 124:     ADCON0bits.ADCS0 = 0;
   746  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   747  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   748  00DC  131F               	bcf	31,6	;volatile
   749  00DD                     l908:
   750                           
   751                           ;MAIN.c: 125:     ADCON0bits.ADCS1 = 0;
   752  00DD  139F               	bcf	31,7	;volatile
   753  00DE                     l910:
   754                           
   755                           ;MAIN.c: 127:     ADCON1bits.ADFM =0;
   756  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   757  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   758  00E0  139F               	bcf	31,7	;volatile
   759  00E1                     l912:
   760                           
   761                           ;MAIN.c: 129:     ADCON0bits.ADON = 1;
   762  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   763  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   764  00E3  141F               	bsf	31,0	;volatile
   765  00E4                     l914:
   766                           
   767                           ;MAIN.c: 130:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   768  00E4  3010               	movlw	16
   769  00E5  00F5               	movwf	??_setup
   770  00E6                     u147:
   771  00E6  0BF5               	decfsz	??_setup,f
   772  00E7  28E6               	goto	u147
   773  00E8  0000               	nop
   774  00E9                     l916:
   775                           
   776                           ;MAIN.c: 131:     ADCON0bits.GO_nDONE = 1;
   777  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   778  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   779  00EB  149F               	bsf	31,1	;volatile
   780  00EC                     l918:
   781                           
   782                           ;MAIN.c: 134:     INTCONbits.GIE = 1;
   783  00EC  178B               	bsf	11,7	;volatile
   784  00ED                     l920:
   785                           
   786                           ;MAIN.c: 136:     INTCONbits.RBIE = 1;
   787  00ED  158B               	bsf	11,3	;volatile
   788  00EE                     l922:
   789                           
   790                           ;MAIN.c: 137:     INTCONbits.RBIF = 0;
   791  00EE  100B               	bcf	11,0	;volatile
   792  00EF                     l924:
   793                           
   794                           ;MAIN.c: 138:     INTCONbits.T0IF = 0;
   795  00EF  110B               	bcf	11,2	;volatile
   796  00F0                     l926:
   797                           
   798                           ;MAIN.c: 139:     INTCONbits.T0IE = 1;
   799  00F0  168B               	bsf	11,5	;volatile
   800  00F1                     l68:
   801  00F1  0008               	return
   802  00F2                     __end_of_setup:
   803                           
   804                           	psect	text2
   805  0154                     __ptext2:	
   806 ;; *************** function _IOC_INT *****************
   807 ;; Defined at:
   808 ;;		line 12 in file "PUSH.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  a               1    wreg     unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  a               1    3[COMMON] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         1       0       0       0       0
   826 ;;Total ram usage:        1 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_setup
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836  0154                     _IOC_INT:	
   837                           ;psect for function _IOC_INT
   838                           
   839                           
   840                           ;incstack = 0
   841                           ; Regs used in _IOC_INT: [wreg]
   842                           ;IOC_INT@a stored from wreg
   843  0154  00F3               	movwf	IOC_INT@a
   844  0155                     l720:
   845                           
   846                           ;PUSH.c: 15:     OPTION_REGbits.nRBPU = 0;
   847  0155  1683               	bsf	3,5	;RP0=1, select bank1
   848  0156  1303               	bcf	3,6	;RP1=0, select bank1
   849  0157  1381               	bcf	1,7	;volatile
   850  0158                     l722:
   851                           
   852                           ;PUSH.c: 16:     WPUBbits.WPUB = a;
   853  0158  0873               	movf	IOC_INT@a,w
   854  0159  0095               	movwf	21	;volatile
   855                           
   856                           ;PUSH.c: 17:     IOCBbits.IOCB = a;
   857  015A  0873               	movf	IOC_INT@a,w
   858  015B  0096               	movwf	22	;volatile
   859  015C                     l77:
   860  015C  0008               	return
   861  015D                     __end_of_IOC_INT:
   862                           
   863                           	psect	text3
   864  0013                     __ptext3:	
   865 ;; *************** function _ADC_INIT *****************
   866 ;; Defined at:
   867 ;;		line 14 in file "ADC.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  c               2    3[COMMON] int 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         2       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         2       0       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_setup
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895  0013                     _ADC_INIT:	
   896                           ;psect for function _ADC_INIT
   897                           
   898  0013                     l862:	
   899                           ;incstack = 0
   900                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
   901                           
   902                           
   903                           ;ADC.c: 15:     switch(c){
   904  0013  287D               	goto	l866
   905  0014                     l87:	
   906                           ;ADC.c: 16:         case 0:
   907                           
   908                           
   909                           ;ADC.c: 17:             ADCON0bits.CHS3 = 0;
   910  0014  1283               	bcf	3,5	;RP0=0, select bank0
   911  0015  1303               	bcf	3,6	;RP1=0, select bank0
   912  0016  129F               	bcf	31,5	;volatile
   913                           
   914                           ;ADC.c: 18:             ADCON0bits.CHS2 = 0;
   915  0017  121F               	bcf	31,4	;volatile
   916                           
   917                           ;ADC.c: 19:             ADCON0bits.CHS1 = 0;
   918  0018  119F               	bcf	31,3	;volatile
   919                           
   920                           ;ADC.c: 20:             ADCON0bits.CHS0 = 0;
   921  0019  111F               	bcf	31,2	;volatile
   922                           
   923                           ;ADC.c: 21:             break;
   924  001A  28AE               	goto	l103
   925  001B                     l89:	
   926                           ;ADC.c: 23:         case 1:
   927                           
   928                           
   929                           ;ADC.c: 24:             ADCON0bits.CHS3 = 0;
   930  001B  1283               	bcf	3,5	;RP0=0, select bank0
   931  001C  1303               	bcf	3,6	;RP1=0, select bank0
   932  001D  129F               	bcf	31,5	;volatile
   933                           
   934                           ;ADC.c: 25:             ADCON0bits.CHS2 = 0;
   935  001E  121F               	bcf	31,4	;volatile
   936                           
   937                           ;ADC.c: 26:             ADCON0bits.CHS1 = 0;
   938  001F  119F               	bcf	31,3	;volatile
   939                           
   940                           ;ADC.c: 27:             ADCON0bits.CHS0 = 1;
   941  0020  151F               	bsf	31,2	;volatile
   942                           
   943                           ;ADC.c: 28:             break;
   944  0021  28AE               	goto	l103
   945  0022                     l90:	
   946                           ;ADC.c: 30:         case 2:
   947                           
   948                           
   949                           ;ADC.c: 31:             ADCON0bits.CHS3 = 0;
   950  0022  1283               	bcf	3,5	;RP0=0, select bank0
   951  0023  1303               	bcf	3,6	;RP1=0, select bank0
   952  0024  129F               	bcf	31,5	;volatile
   953                           
   954                           ;ADC.c: 32:             ADCON0bits.CHS2 = 0;
   955  0025  121F               	bcf	31,4	;volatile
   956                           
   957                           ;ADC.c: 33:             ADCON0bits.CHS1 = 1;
   958  0026  159F               	bsf	31,3	;volatile
   959                           
   960                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;
   961  0027  111F               	bcf	31,2	;volatile
   962                           
   963                           ;ADC.c: 35:             break;
   964  0028  28AE               	goto	l103
   965  0029                     l91:	
   966                           ;ADC.c: 37:         case 3:
   967                           
   968                           
   969                           ;ADC.c: 38:             ADCON0bits.CHS3 = 0;
   970  0029  1283               	bcf	3,5	;RP0=0, select bank0
   971  002A  1303               	bcf	3,6	;RP1=0, select bank0
   972  002B  129F               	bcf	31,5	;volatile
   973                           
   974                           ;ADC.c: 39:             ADCON0bits.CHS2 = 0;
   975  002C  121F               	bcf	31,4	;volatile
   976                           
   977                           ;ADC.c: 40:             ADCON0bits.CHS1 = 1;
   978  002D  159F               	bsf	31,3	;volatile
   979                           
   980                           ;ADC.c: 41:             ADCON0bits.CHS0 = 1;
   981  002E  151F               	bsf	31,2	;volatile
   982                           
   983                           ;ADC.c: 42:             break;
   984  002F  28AE               	goto	l103
   985  0030                     l92:	
   986                           ;ADC.c: 44:         case 4:
   987                           
   988                           
   989                           ;ADC.c: 45:             ADCON0bits.CHS3 = 0;
   990  0030  1283               	bcf	3,5	;RP0=0, select bank0
   991  0031  1303               	bcf	3,6	;RP1=0, select bank0
   992  0032  129F               	bcf	31,5	;volatile
   993                           
   994                           ;ADC.c: 46:             ADCON0bits.CHS2 = 1;
   995  0033  161F               	bsf	31,4	;volatile
   996                           
   997                           ;ADC.c: 47:             ADCON0bits.CHS1 = 0;
   998  0034  119F               	bcf	31,3	;volatile
   999                           
  1000                           ;ADC.c: 48:             ADCON0bits.CHS0 = 0;
  1001  0035  111F               	bcf	31,2	;volatile
  1002                           
  1003                           ;ADC.c: 49:             break;
  1004  0036  28AE               	goto	l103
  1005  0037                     l93:	
  1006                           ;ADC.c: 51:         case 5:
  1007                           
  1008                           
  1009                           ;ADC.c: 52:             ADCON0bits.CHS3 = 0;
  1010  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0039  129F               	bcf	31,5	;volatile
  1013                           
  1014                           ;ADC.c: 53:             ADCON0bits.CHS2 = 1;
  1015  003A  161F               	bsf	31,4	;volatile
  1016                           
  1017                           ;ADC.c: 54:             ADCON0bits.CHS1 = 0;
  1018  003B  119F               	bcf	31,3	;volatile
  1019                           
  1020                           ;ADC.c: 55:             ADCON0bits.CHS0 = 1;
  1021  003C  151F               	bsf	31,2	;volatile
  1022                           
  1023                           ;ADC.c: 56:             break;
  1024  003D  28AE               	goto	l103
  1025  003E                     l94:	
  1026                           ;ADC.c: 58:         case 6:
  1027                           
  1028                           
  1029                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  1030  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1031  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0040  129F               	bcf	31,5	;volatile
  1033                           
  1034                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1035  0041  161F               	bsf	31,4	;volatile
  1036                           
  1037                           ;ADC.c: 61:             ADCON0bits.CHS1 = 1;
  1038  0042  159F               	bsf	31,3	;volatile
  1039                           
  1040                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  1041  0043  111F               	bcf	31,2	;volatile
  1042                           
  1043                           ;ADC.c: 63:             break;
  1044  0044  28AE               	goto	l103
  1045  0045                     l95:	
  1046                           ;ADC.c: 65:         case 7:
  1047                           
  1048                           
  1049                           ;ADC.c: 66:             ADCON0bits.CHS3 = 0;
  1050  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0047  129F               	bcf	31,5	;volatile
  1053                           
  1054                           ;ADC.c: 67:             ADCON0bits.CHS2 = 1;
  1055  0048  161F               	bsf	31,4	;volatile
  1056                           
  1057                           ;ADC.c: 68:             ADCON0bits.CHS1 = 1;
  1058  0049  159F               	bsf	31,3	;volatile
  1059                           
  1060                           ;ADC.c: 69:             ADCON0bits.CHS0 = 1;
  1061  004A  151F               	bsf	31,2	;volatile
  1062                           
  1063                           ;ADC.c: 70:             break;
  1064  004B  28AE               	goto	l103
  1065  004C                     l96:	
  1066                           ;ADC.c: 72:         case 8:
  1067                           
  1068                           
  1069                           ;ADC.c: 73:             ADCON0bits.CHS3 = 1;
  1070  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1071  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1072  004E  169F               	bsf	31,5	;volatile
  1073                           
  1074                           ;ADC.c: 74:             ADCON0bits.CHS2 = 0;
  1075  004F  121F               	bcf	31,4	;volatile
  1076                           
  1077                           ;ADC.c: 75:             ADCON0bits.CHS1 = 0;
  1078  0050  119F               	bcf	31,3	;volatile
  1079                           
  1080                           ;ADC.c: 76:             ADCON0bits.CHS0 = 0;
  1081  0051  111F               	bcf	31,2	;volatile
  1082                           
  1083                           ;ADC.c: 77:             break;
  1084  0052  28AE               	goto	l103
  1085  0053                     l97:	
  1086                           ;ADC.c: 79:         case 9:
  1087                           
  1088                           
  1089                           ;ADC.c: 80:             ADCON0bits.CHS3 = 1;
  1090  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0055  169F               	bsf	31,5	;volatile
  1093                           
  1094                           ;ADC.c: 81:             ADCON0bits.CHS2 = 0;
  1095  0056  121F               	bcf	31,4	;volatile
  1096                           
  1097                           ;ADC.c: 82:             ADCON0bits.CHS1 = 0;
  1098  0057  119F               	bcf	31,3	;volatile
  1099                           
  1100                           ;ADC.c: 83:             ADCON0bits.CHS0 = 1;
  1101  0058  151F               	bsf	31,2	;volatile
  1102                           
  1103                           ;ADC.c: 84:             break;
  1104  0059  28AE               	goto	l103
  1105  005A                     l98:	
  1106                           ;ADC.c: 86:         case 10:
  1107                           
  1108                           
  1109                           ;ADC.c: 87:             ADCON0bits.CHS3 = 1;
  1110  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1111  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1112  005C  169F               	bsf	31,5	;volatile
  1113                           
  1114                           ;ADC.c: 88:             ADCON0bits.CHS2 = 0;
  1115  005D  121F               	bcf	31,4	;volatile
  1116                           
  1117                           ;ADC.c: 89:             ADCON0bits.CHS1 = 1;
  1118  005E  159F               	bsf	31,3	;volatile
  1119                           
  1120                           ;ADC.c: 90:             ADCON0bits.CHS0 = 0;
  1121  005F  111F               	bcf	31,2	;volatile
  1122                           
  1123                           ;ADC.c: 91:             break;
  1124  0060  28AE               	goto	l103
  1125  0061                     l99:	
  1126                           ;ADC.c: 93:         case 11:
  1127                           
  1128                           
  1129                           ;ADC.c: 94:             ADCON0bits.CHS3 = 1;
  1130  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0063  169F               	bsf	31,5	;volatile
  1133                           
  1134                           ;ADC.c: 95:             ADCON0bits.CHS2 = 0;
  1135  0064  121F               	bcf	31,4	;volatile
  1136                           
  1137                           ;ADC.c: 96:             ADCON0bits.CHS1 = 1;
  1138  0065  159F               	bsf	31,3	;volatile
  1139                           
  1140                           ;ADC.c: 97:             ADCON0bits.CHS0 = 1;
  1141  0066  151F               	bsf	31,2	;volatile
  1142                           
  1143                           ;ADC.c: 98:             break;
  1144  0067  28AE               	goto	l103
  1145  0068                     l100:	
  1146                           ;ADC.c: 100:         case 12:
  1147                           
  1148                           
  1149                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1150  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1152  006A  169F               	bsf	31,5	;volatile
  1153                           
  1154                           ;ADC.c: 102:             ADCON0bits.CHS2 = 1;
  1155  006B  161F               	bsf	31,4	;volatile
  1156                           
  1157                           ;ADC.c: 103:             ADCON0bits.CHS1 = 0;
  1158  006C  119F               	bcf	31,3	;volatile
  1159                           
  1160                           ;ADC.c: 104:             ADCON0bits.CHS0 = 0;
  1161  006D  111F               	bcf	31,2	;volatile
  1162                           
  1163                           ;ADC.c: 105:             break;
  1164  006E  28AE               	goto	l103
  1165  006F                     l101:	
  1166                           ;ADC.c: 107:         case 13:
  1167                           
  1168                           
  1169                           ;ADC.c: 108:             ADCON0bits.CHS3 = 1;
  1170  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0071  169F               	bsf	31,5	;volatile
  1173                           
  1174                           ;ADC.c: 109:             ADCON0bits.CHS2 = 1;
  1175  0072  161F               	bsf	31,4	;volatile
  1176                           
  1177                           ;ADC.c: 110:             ADCON0bits.CHS1 = 0;
  1178  0073  119F               	bcf	31,3	;volatile
  1179                           
  1180                           ;ADC.c: 111:             ADCON0bits.CHS0 = 1;
  1181  0074  151F               	bsf	31,2	;volatile
  1182                           
  1183                           ;ADC.c: 112:             break;
  1184  0075  28AE               	goto	l103
  1185  0076                     l102:	
  1186                           ;ADC.c: 114:         default:
  1187                           
  1188                           
  1189                           ;ADC.c: 115:             ADCON0bits.CHS3 = 0;
  1190  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0078  129F               	bcf	31,5	;volatile
  1193                           
  1194                           ;ADC.c: 116:             ADCON0bits.CHS2 = 0;
  1195  0079  121F               	bcf	31,4	;volatile
  1196                           
  1197                           ;ADC.c: 117:             ADCON0bits.CHS1 = 0;
  1198  007A  119F               	bcf	31,3	;volatile
  1199                           
  1200                           ;ADC.c: 118:             ADCON0bits.CHS0 = 0;
  1201  007B  111F               	bcf	31,2	;volatile
  1202                           
  1203                           ;ADC.c: 119:             break;
  1204  007C  28AE               	goto	l103
  1205  007D                     l866:
  1206                           
  1207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1208                           ; Switch size 1, requested type "simple"
  1209                           ; Number of cases is 1, Range of values is 0 to 0
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte            4     3 (average)
  1213                           ; direct_byte           11     8 (fixed)
  1214                           ; jumptable            260     6 (fixed)
  1215                           ;	Chosen strategy is simple_byte
  1216  007D  0874               	movf	ADC_INIT@c+1,w
  1217  007E  3A00               	xorlw	0	; case 0
  1218  007F  1903               	skipnz
  1219  0080  2882               	goto	l964
  1220  0081  2876               	goto	l102
  1221  0082                     l964:
  1222                           
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 14, Range of values is 0 to 13
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           43    22 (average)
  1228                           ; direct_byte           50     8 (fixed)
  1229                           ; jumptable            260     6 (fixed)
  1230                           ;	Chosen strategy is simple_byte
  1231  0082  0873               	movf	ADC_INIT@c,w
  1232  0083  3A00               	xorlw	0	; case 0
  1233  0084  1903               	skipnz
  1234  0085  2814               	goto	l87
  1235  0086  3A01               	xorlw	1	; case 1
  1236  0087  1903               	skipnz
  1237  0088  281B               	goto	l89
  1238  0089  3A03               	xorlw	3	; case 2
  1239  008A  1903               	skipnz
  1240  008B  2822               	goto	l90
  1241  008C  3A01               	xorlw	1	; case 3
  1242  008D  1903               	skipnz
  1243  008E  2829               	goto	l91
  1244  008F  3A07               	xorlw	7	; case 4
  1245  0090  1903               	skipnz
  1246  0091  2830               	goto	l92
  1247  0092  3A01               	xorlw	1	; case 5
  1248  0093  1903               	skipnz
  1249  0094  2837               	goto	l93
  1250  0095  3A03               	xorlw	3	; case 6
  1251  0096  1903               	skipnz
  1252  0097  283E               	goto	l94
  1253  0098  3A01               	xorlw	1	; case 7
  1254  0099  1903               	skipnz
  1255  009A  2845               	goto	l95
  1256  009B  3A0F               	xorlw	15	; case 8
  1257  009C  1903               	skipnz
  1258  009D  284C               	goto	l96
  1259  009E  3A01               	xorlw	1	; case 9
  1260  009F  1903               	skipnz
  1261  00A0  2853               	goto	l97
  1262  00A1  3A03               	xorlw	3	; case 10
  1263  00A2  1903               	skipnz
  1264  00A3  285A               	goto	l98
  1265  00A4  3A01               	xorlw	1	; case 11
  1266  00A5  1903               	skipnz
  1267  00A6  2861               	goto	l99
  1268  00A7  3A07               	xorlw	7	; case 12
  1269  00A8  1903               	skipnz
  1270  00A9  2868               	goto	l100
  1271  00AA  3A01               	xorlw	1	; case 13
  1272  00AB  1903               	skipnz
  1273  00AC  286F               	goto	l101
  1274  00AD  2876               	goto	l102
  1275  00AE                     l103:
  1276  00AE  0008               	return
  1277  00AF                     __end_of_ADC_INIT:
  1278                           
  1279                           	psect	text4
  1280  012D                     __ptext4:	
  1281 ;; *************** function _ADC_READ *****************
  1282 ;; Defined at:
  1283 ;;		line 122 in file "ADC.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2    3[COMMON] int 
  1290 ;; Registers used:
  1291 ;;		wreg
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         2       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          2       0       0       0       0
  1300 ;;      Totals:         4       0       0       0       0
  1301 ;;Total ram usage:        4 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311  012D                     _ADC_READ:	
  1312                           ;psect for function _ADC_READ
  1313                           
  1314  012D                     l928:	
  1315                           ;incstack = 0
  1316                           ; Regs used in _ADC_READ: [wreg]
  1317                           
  1318                           
  1319                           ;ADC.c: 123:     ADCON0bits.GO = 1;
  1320  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1321  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1322  012F  149F               	bsf	31,1	;volatile
  1323                           
  1324                           ;ADC.c: 124:     while(ADCON0bits.GO == 1){
  1325  0130  293D               	goto	l938
  1326  0131                     l107:
  1327                           
  1328                           ;ADC.c: 125:         if (ADCON0bits.GO == 0){
  1329  0131  189F               	btfsc	31,1	;volatile
  1330  0132  2934               	goto	u121
  1331  0133  2935               	goto	u120
  1332  0134                     u121:
  1333  0134  293D               	goto	l938
  1334  0135                     u120:
  1335  0135                     l930:
  1336                           
  1337                           ;ADC.c: 126:             return ADRESH;
  1338  0135  081E               	movf	30,w	;volatile
  1339  0136  00F5               	movwf	??_ADC_READ
  1340  0137  01F6               	clrf	??_ADC_READ+1
  1341  0138  0875               	movf	??_ADC_READ,w
  1342  0139  00F3               	movwf	?_ADC_READ
  1343  013A  0876               	movf	??_ADC_READ+1,w
  1344  013B  00F4               	movwf	?_ADC_READ+1
  1345  013C  2941               	goto	l109
  1346  013D                     l938:
  1347                           
  1348                           ;ADC.c: 124:     while(ADCON0bits.GO == 1){
  1349  013D  189F               	btfsc	31,1	;volatile
  1350  013E  2940               	goto	u131
  1351  013F  2941               	goto	u130
  1352  0140                     u131:
  1353  0140  2931               	goto	l107
  1354  0141                     u130:
  1355  0141                     l109:
  1356  0141  0008               	return
  1357  0142                     __end_of_ADC_READ:
  1358                           
  1359                           	psect	text5
  1360  00F2                     __ptext5:	
  1361 ;; *************** function _isr *****************
  1362 ;; Defined at:
  1363 ;;		line 55 in file "MAIN.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          3       0       0       0       0
  1380 ;;      Totals:         3       0       0       0       0
  1381 ;;Total ram usage:        3 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		Interrupt level 1
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390  00F2                     _isr:	
  1391                           ;psect for function _isr
  1392                           
  1393  00F2                     i1l802:
  1394                           
  1395                           ;MAIN.c: 57:     if (RBIF==1){
  1396  00F2  1C0B               	btfss	11,0	;volatile
  1397  00F3  28F5               	goto	u3_21
  1398  00F4  28F6               	goto	u3_20
  1399  00F5                     u3_21:
  1400  00F5  2910               	goto	i1l57
  1401  00F6                     u3_20:
  1402  00F6                     i1l804:
  1403                           
  1404                           ;MAIN.c: 58:         if (RB0==0){
  1405  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1406  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1407  00F8  1806               	btfsc	6,0	;volatile
  1408  00F9  28FB               	goto	u4_21
  1409  00FA  28FC               	goto	u4_20
  1410  00FB                     u4_21:
  1411  00FB  2905               	goto	i1l52
  1412  00FC                     u4_20:
  1413  00FC                     i1l806:
  1414                           
  1415                           ;MAIN.c: 59:             if (RB0==0){
  1416  00FC  1806               	btfsc	6,0	;volatile
  1417  00FD  28FF               	goto	u5_21
  1418  00FE  2900               	goto	u5_20
  1419  00FF                     u5_21:
  1420  00FF  290F               	goto	i1l814
  1421  0100                     u5_20:
  1422  0100                     i1l808:
  1423                           
  1424                           ;MAIN.c: 60:                 PORTA++;
  1425  0100  3001               	movlw	1
  1426  0101  00F0               	movwf	??_isr
  1427  0102  0870               	movf	??_isr,w
  1428  0103  0785               	addwf	5,f	;volatile
  1429  0104  290F               	goto	i1l814
  1430  0105                     i1l52:
  1431  0105  1886               	btfsc	6,1	;volatile
  1432  0106  2908               	goto	u6_21
  1433  0107  2909               	goto	u6_20
  1434  0108                     u6_21:
  1435  0108  290F               	goto	i1l814
  1436  0109                     u6_20:
  1437  0109                     i1l810:
  1438                           
  1439                           ;MAIN.c: 63:             if (RB1==0){
  1440  0109  1886               	btfsc	6,1	;volatile
  1441  010A  290C               	goto	u7_21
  1442  010B  290D               	goto	u7_20
  1443  010C                     u7_21:
  1444  010C  290F               	goto	i1l814
  1445  010D                     u7_20:
  1446  010D                     i1l812:
  1447                           
  1448                           ;MAIN.c: 64:                 PORTA--;
  1449  010D  3001               	movlw	1
  1450  010E  0285               	subwf	5,f	;volatile
  1451  010F                     i1l814:
  1452                           
  1453                           ;MAIN.c: 68:         INTCONbits.RBIF=0;
  1454  010F  100B               	bcf	11,0	;volatile
  1455  0110                     i1l57:
  1456  0110  0872               	movf	??_isr+2,w
  1457  0111  008A               	movwf	10
  1458  0112  0E71               	swapf	??_isr+1,w
  1459  0113  0083               	movwf	3
  1460  0114  0EFE               	swapf	btemp,f
  1461  0115  0E7E               	swapf	btemp,w
  1462  0116  0009               	retfie
  1463  0117                     __end_of_isr:
  1464  007E                     btemp	set	126	;btemp
  1465  007E                     wtemp0	set	126
  1466                           
  1467                           	psect	intentry
  1468  0004                     __pintentry:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _isr: [wreg+status,2+status,0]
  1471                           
  1472  0004                     interrupt_function:
  1473  007E                     saved_w	set	btemp
  1474  0004  00FE               	movwf	btemp
  1475  0005  0E03               	swapf	3,w
  1476  0006  00F1               	movwf	??_isr+1
  1477  0007  080A               	movf	10,w
  1478  0008  00F2               	movwf	??_isr+2
  1479  0009  120A  118A  28F2   	ljmp	_isr
  1480                           
  1481                           	psect	idloc
  1482                           
  1483                           ;Config register IDLOC0 @ 0x2000
  1484                           ;	unspecified, using default values
  1485  2000                     	org	8192
  1486  2000  3FFF               	dw	16383
  1487                           
  1488                           ;Config register IDLOC1 @ 0x2001
  1489                           ;	unspecified, using default values
  1490  2001                     	org	8193
  1491  2001  3FFF               	dw	16383
  1492                           
  1493                           ;Config register IDLOC2 @ 0x2002
  1494                           ;	unspecified, using default values
  1495  2002                     	org	8194
  1496  2002  3FFF               	dw	16383
  1497                           
  1498                           ;Config register IDLOC3 @ 0x2003
  1499                           ;	unspecified, using default values
  1500  2003                     	org	8195
  1501  2003  3FFF               	dw	16383
  1502                           
  1503                           	psect	config
  1504                           
  1505                           ;Config register CONFIG1 @ 0x2007
  1506                           ;	Oscillator Selection bits
  1507                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1508                           ;	Watchdog Timer Enable bit
  1509                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1510                           ;	Power-up Timer Enable bit
  1511                           ;	PWRTE = OFF, PWRT disabled
  1512                           ;	RE3/MCLR pin function select bit
  1513                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1514                           ;	Code Protection bit
  1515                           ;	CP = OFF, Program memory code protection is disabled
  1516                           ;	Data Code Protection bit
  1517                           ;	CPD = OFF, Data memory code protection is disabled
  1518                           ;	Brown Out Reset Selection bits
  1519                           ;	BOREN = OFF, BOR disabled
  1520                           ;	Internal External Switchover bit
  1521                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1522                           ;	Fail-Safe Clock Monitor Enabled bit
  1523                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1524                           ;	Low Voltage Programming Enable bit
  1525                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1526                           ;	In-Circuit Debugger Mode bit
  1527                           ;	DEBUG = 0x1, unprogrammed default
  1528  2007                     	org	8199
  1529  2007  20D4               	dw	8404
  1530                           
  1531                           ;Config register CONFIG2 @ 0x2008
  1532                           ;	Brown-out Reset Selection bit
  1533                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1534                           ;	Flash Program Memory Self Write Enable bits
  1535                           ;	WRT = OFF, Write protection off
  1536  2008                     	org	8200
  1537  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_READ
    _setup->_ADC_INIT

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     128
                           _ADC_READ
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     128
                                              5 COMMON     1     1      0
                           _ADC_INIT
                            _IOC_INT
 ---------------------------------------------------------------------------------
 (2) _IOC_INT                                              1     1      0      30
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     2      2       0
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _setup
     _ADC_INIT
     _IOC_INT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Jul 15 16:49:15 2023

                      pc 0002                       l90 0022                       l91 0029  
                     l92 0030                       l68 00F1                       l93 0037  
                     l77 015C                       l94 003E                       l95 0045  
                     l87 0014                       l96 004C                       l97 0053  
                     l89 001B                       l98 005A                       l99 0061  
                     fsr 0004                      l100 0068                      l101 006F  
                    l102 0076                      l103 00AE                      l107 0131  
                    l109 0141                      l720 0155                      l722 0158  
                    l900 00CD                      l910 00DE                      l902 00D6  
                    l920 00ED                      l912 00E1                      l904 00D9  
                    l930 0135                      l922 00EE                      l914 00E4  
                    l906 00DA                      l924 00EF                      l916 00E9  
                    l908 00DD                      l940 0142                      l862 0013  
                    l926 00F0                      l918 00EC                      l942 0147  
                    l928 012D                      l880 00BA                      l872 00AF  
                    l938 013D                      l866 007D                      l890 00C1  
                    l882 00BB                      l874 00B3                      l964 0082  
                    l892 00C4                      l884 00BE                      l876 00B4  
                    l894 00C5                      l886 00BF                      l878 00B9  
                    l896 00C6                      l888 00C0                      l898 00C7  
                    _RB0 0030                      _RB1 0031                      u120 0135  
                    u121 0134                      u130 0141                      u131 0140  
                    u147 00E6                      _isr 00F2          __end_of_IOC_INT 015D  
                   ?_isr 0070                     _RBIF 0058                     i1l52 0105  
                   i1l57 0110                     u3_20 00F6                     u3_21 00F5  
                   u4_20 00FC                     u4_21 00FB                     u5_20 0100  
                   u5_21 00FF                     u6_20 0109                     u6_21 0108  
                   u7_20 010D                     u7_21 010C         __end_of_ADC_INIT 00AF  
       __end_of_ADC_READ 0142                     _main 0142                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l810 0109                    i1l802 00F2  
                  i1l812 010D                    i1l804 00F6                    i1l814 010F  
                  i1l806 00FC                    i1l808 0100                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _tabla 011D                    _setup 00AF  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0154                   ??_main 0077  
              ADC_INIT@c 0073                ??_IOC_INT 0073                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                ?_ADC_INIT 0073  
              ?_ADC_READ 0073                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070            __end_of_tabla 012D            __end_of_setup 00F2  
             ??_ADC_INIT 0075               ??_ADC_READ 0075           _OPTION_REGbits 0081  
                ??_setup 0075               __pmaintext 0142               __pintentry 0004  
                _IOC_INT 0154               __stringtab 0117                  __ptext1 00AF  
                __ptext2 0154                  __ptext3 0013                  __ptext4 012D  
                __ptext5 00F2     end_of_initialization 000F      start_initialization 000F  
            __end_of_isr 0117                 ?_IOC_INT 0070                ___latbits 0002  
               IOC_INT@a 0073                __pstrings 0117                 _ADC_INIT 0013  
               _ADC_READ 012D        interrupt_function 0004                 _IOCBbits 0096  
             _ADCON0bits 001F              __stringbase 011C               _ADCON1bits 009F  
               _WPUBbits 0095       __end_of__stringtab 011D               _INTCONbits 000B  
               intlevel1 0000                stringcode 0117               _OSCCONbits 008F  
               stringdir 0117                 stringtab 0117  
