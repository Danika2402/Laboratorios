

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Jul 16 16:09:27 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446                           
   447                           	psect	strings
   448  0200                     __pstrings:
   449  0200                     stringtab:
   450  0200                     __stringtab:
   451  0200                     stringcode:	
   452                           ;	String table - string pointers are 1 byte each
   453                           
   454  0200                     stringdir:
   455  0200  3002               	movlw	high stringdir
   456  0201  008A               	movwf	10
   457  0202  0804               	movf	4,w
   458  0203  0A84               	incf	4,f
   459  0204  0782               	addwf	2,f
   460  0205                     __stringbase:
   461  0205  3400               	retlw	0
   462  0206                     __end_of__stringtab:
   463  0206                     _tabla:
   464  0206  34FC               	retlw	252
   465  0207  3460               	retlw	96
   466  0208  34DA               	retlw	218
   467  0209  34F2               	retlw	242
   468  020A  3466               	retlw	102
   469  020B  34B6               	retlw	182
   470  020C  34BE               	retlw	190
   471  020D  34E0               	retlw	224
   472  020E  34FE               	retlw	254
   473  020F  34F6               	retlw	246
   474  0210  34EE               	retlw	238
   475  0211  343E               	retlw	62
   476  0212  349C               	retlw	156
   477  0213  347A               	retlw	122
   478  0214  349E               	retlw	158
   479  0215  348E               	retlw	142
   480  0216                     __end_of_tabla:
   481  0006                     _PORTB	set	6
   482  001E                     _ADRESH	set	30
   483  001F                     _ADCON0bits	set	31
   484  0001                     _TMR0	set	1
   485  0007                     _PORTC	set	7
   486  0008                     _PORTD	set	8
   487  000B                     _INTCONbits	set	11
   488  0005                     _PORTA	set	5
   489  0037                     _RB7	set	55
   490  0041                     _RD1	set	65
   491  0040                     _RD0	set	64
   492  005A                     _T0IF	set	90
   493  0031                     _RB1	set	49
   494  0030                     _RB0	set	48
   495  0058                     _RBIF	set	88
   496  0096                     _IOCBbits	set	150
   497  0095                     _WPUBbits	set	149
   498  0081                     _OPTION_REGbits	set	129
   499  009F                     _ADCON1bits	set	159
   500  008F                     _OSCCONbits	set	143
   501  0088                     _TRISD	set	136
   502  0087                     _TRISC	set	135
   503  0086                     _TRISB	set	134
   504  0085                     _TRISA	set	133
   505  0189                     _ANSELH	set	393
   506  0188                     _ANSEL	set	392
   507                           
   508                           	psect	cinit
   509  0013                     start_initialization:	
   510                           ; #config settings
   511                           
   512  0013                     __initialization:
   513                           
   514                           ; Clear objects allocated to COMMON
   515  0013  01F5               	clrf	__pbssCOMMON& (0+127)
   516  0014  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   517  0015  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   518  0016  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   519  0017                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522  0017                     __end_of__initialization:
   523  0017  0183               	clrf	3
   524  0018  120A  118A  29B9   	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssCOMMON
   527  0075                     __pbssCOMMON:
   528  0075                     _POT:
   529  0075                     	ds	1
   530  0076                     _display:
   531  0076                     	ds	1
   532  0077                     _decena:
   533  0077                     	ds	1
   534  0078                     _unidad:
   535  0078                     	ds	1
   536                           
   537                           	psect	cstackCOMMON
   538  0070                     __pcstackCOMMON:
   539  0070                     ?_setup:
   540  0070                     ?_PRESCALER_TMR0:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_IOC_INT:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_isr:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_isr:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_main:	
   553                           ; 1 bytes @ 0x0
   554                           
   555                           
   556                           ; 1 bytes @ 0x0
   557  0070                     	ds	5
   558  0075                     ??_PRESCALER_TMR0:
   559  0075                     ??_IOC_INT:	
   560                           ; 1 bytes @ 0x5
   561                           
   562  0075                     ??_ADC_INIT:	
   563                           ; 1 bytes @ 0x5
   564                           
   565                           
   566                           	psect	cstackBANK0
   567  0020                     __pcstackBANK0:	
   568                           ; 1 bytes @ 0x5
   569                           
   570  0020                     ?_ADC_INIT:
   571  0020                     ?___awdiv:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     IOC_INT@a:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0020                     PRESCALER_TMR0@a:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0020                     ADC_INIT@c:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0020                     ___awdiv@divisor:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 2 bytes @ 0x0
   588  0020                     	ds	2
   589  0022                     ??_setup:
   590  0022                     ___awdiv@dividend:	
   591                           ; 1 bytes @ 0x2
   592                           
   593                           
   594                           ; 2 bytes @ 0x2
   595  0022                     	ds	2
   596  0024                     ??___awdiv:
   597                           
   598                           ; 1 bytes @ 0x4
   599  0024                     	ds	1
   600  0025                     ___awdiv@counter:
   601                           
   602                           ; 1 bytes @ 0x5
   603  0025                     	ds	1
   604  0026                     ___awdiv@sign:
   605                           
   606                           ; 1 bytes @ 0x6
   607  0026                     	ds	1
   608  0027                     ___awdiv@quotient:
   609                           
   610                           ; 2 bytes @ 0x7
   611  0027                     	ds	2
   612  0029                     ??_main:
   613                           
   614                           ; 1 bytes @ 0x9
   615  0029                     	ds	3
   616                           
   617                           	psect	maintext
   618  01B9                     __pmaintext:	
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 97 in file "MAIN.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B00/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       3       0       0       0
   641 ;;      Totals:         0       3       0       0       0
   642 ;;Total ram usage:        3 bytes
   643 ;; Hardware stack levels required when called: 4
   644 ;; This function calls:
   645 ;;		___awdiv
   646 ;;		_setup
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652  01B9                     _main:	
   653                           ;psect for function _main
   654                           
   655  01B9                     l1294:	
   656                           ;incstack = 0
   657                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   658                           
   659                           
   660                           ;MAIN.c: 98:     setup();
   661  01B9  120A  118A  2164  120A  118A  	fcall	_setup
   662  01BE                     l1296:
   663                           
   664                           ;MAIN.c: 100:         if (ADCON0bits.GO == 0){
   665  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   666  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   667  01C0  189F               	btfsc	31,1	;volatile
   668  01C1  29C3               	goto	u591
   669  01C2  29C4               	goto	u590
   670  01C3                     u591:
   671  01C3  29D2               	goto	l1302
   672  01C4                     u590:
   673  01C4                     l1298:
   674                           
   675                           ;MAIN.c: 101:             POT = ADRESH;
   676  01C4  081E               	movf	30,w	;volatile
   677  01C5  00A9               	movwf	??_main
   678  01C6  0829               	movf	??_main,w
   679  01C7  00F5               	movwf	_POT
   680                           
   681                           ;MAIN.c: 102:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   682  01C8  300F               	movlw	15
   683  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   684  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   685  01CB  00A9               	movwf	??_main
   686  01CC                     u627:
   687  01CC  0BA9               	decfsz	??_main,f
   688  01CD  29CC               	goto	u627
   689  01CE  29CF               	nop2
   690  01CF                     l1300:
   691                           
   692                           ;MAIN.c: 103:             ADCON0bits.GO = 1;
   693  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   694  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   695  01D1  149F               	bsf	31,1	;volatile
   696  01D2                     l1302:
   697                           
   698                           ;MAIN.c: 106:         decena = (uint8_t)(POT % 16);
   699  01D2  0875               	movf	_POT,w
   700  01D3  390F               	andlw	15
   701  01D4  00A9               	movwf	??_main
   702  01D5  0829               	movf	??_main,w
   703  01D6  00F7               	movwf	_decena
   704  01D7                     l1304:
   705                           
   706                           ;MAIN.c: 107:         unidad = (uint8_t)((POT/16) % 16);
   707  01D7  3010               	movlw	16
   708  01D8  00A0               	movwf	___awdiv@divisor
   709  01D9  3000               	movlw	0
   710  01DA  00A1               	movwf	___awdiv@divisor+1
   711  01DB  0875               	movf	_POT,w
   712  01DC  00A9               	movwf	??_main
   713  01DD  01AA               	clrf	??_main+1
   714  01DE  0829               	movf	??_main,w
   715  01DF  00A2               	movwf	___awdiv@dividend
   716  01E0  082A               	movf	??_main+1,w
   717  01E1  00A3               	movwf	___awdiv@dividend+1
   718  01E2  120A  118A  209B  120A  118A  	fcall	___awdiv
   719  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   720  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   721  01E9  0820               	movf	?___awdiv,w
   722  01EA  390F               	andlw	15
   723  01EB  00AB               	movwf	??_main+2
   724  01EC  082B               	movf	??_main+2,w
   725  01ED  00F8               	movwf	_unidad
   726  01EE                     l1306:
   727                           
   728                           ;MAIN.c: 109:         RB7 = (POT > PORTA) ? 1:0;
   729  01EE  0875               	movf	_POT,w
   730  01EF  0205               	subwf	5,w	;volatile
   731  01F0  1C03               	skipc
   732  01F1  29F3               	goto	u601
   733  01F2  29F7               	goto	u600
   734  01F3                     u601:
   735  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   736  01F4  1303               	bcf	3,6	;RP1=0, select bank0
   737  01F5  1786               	bsf	6,7	;volatile
   738  01F6  29FA               	goto	u614
   739  01F7                     u600:
   740  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   741  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   742  01F9  1386               	bcf	6,7	;volatile
   743  01FA                     u614:
   744  01FA  29BE               	goto	l1296
   745  01FB  120A  118A  2810   	ljmp	start
   746  01FE                     __end_of_main:
   747                           
   748                           	psect	text1
   749  0164                     __ptext1:	
   750 ;; *************** function _setup *****************
   751 ;; Defined at:
   752 ;;		line 113 in file "MAIN.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       1       0       0       0
   769 ;;      Totals:         0       1       0       0       0
   770 ;;Total ram usage:        1 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 3
   773 ;; This function calls:
   774 ;;		_ADC_INIT
   775 ;;		_IOC_INT
   776 ;;		_PRESCALER_TMR0
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782  0164                     _setup:	
   783                           ;psect for function _setup
   784                           
   785  0164                     l1182:	
   786                           ;incstack = 0
   787                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   788                           
   789                           
   790                           ;MAIN.c: 115:     ANSEL = 0b00100000;
   791  0164  3020               	movlw	32
   792  0165  1683               	bsf	3,5	;RP0=1, select bank3
   793  0166  1703               	bsf	3,6	;RP1=1, select bank3
   794  0167  0088               	movwf	8	;volatile
   795  0168                     l1184:
   796                           
   797                           ;MAIN.c: 116:     ANSELH = 0x00;
   798  0168  0189               	clrf	9	;volatile
   799  0169                     l1186:
   800                           
   801                           ;MAIN.c: 118:     TRISA = 0x00;
   802  0169  1683               	bsf	3,5	;RP0=1, select bank1
   803  016A  1303               	bcf	3,6	;RP1=0, select bank1
   804  016B  0185               	clrf	5	;volatile
   805                           
   806                           ;MAIN.c: 119:     TRISB = 0b00000011;
   807  016C  3003               	movlw	3
   808  016D  0086               	movwf	6	;volatile
   809  016E                     l1188:
   810                           
   811                           ;MAIN.c: 120:     TRISC = 0x00;
   812  016E  0187               	clrf	7	;volatile
   813  016F                     l1190:
   814                           
   815                           ;MAIN.c: 121:     TRISD = 0x00;
   816  016F  0188               	clrf	8	;volatile
   817  0170                     l1192:
   818                           
   819                           ;MAIN.c: 123:     PORTA = 0x00;
   820  0170  1283               	bcf	3,5	;RP0=0, select bank0
   821  0171  1303               	bcf	3,6	;RP1=0, select bank0
   822  0172  0185               	clrf	5	;volatile
   823  0173                     l1194:
   824                           
   825                           ;MAIN.c: 124:     PORTB = 0x00;
   826  0173  0186               	clrf	6	;volatile
   827  0174                     l1196:
   828                           
   829                           ;MAIN.c: 125:     PORTC = 0x00;
   830  0174  0187               	clrf	7	;volatile
   831  0175                     l1198:
   832                           
   833                           ;MAIN.c: 126:     PORTD = 0x00;
   834  0175  0188               	clrf	8	;volatile
   835  0176                     l1200:
   836                           
   837                           ;MAIN.c: 129:     OSCCONbits.IRCF2 =1;
   838  0176  1683               	bsf	3,5	;RP0=1, select bank1
   839  0177  1303               	bcf	3,6	;RP1=0, select bank1
   840  0178  170F               	bsf	15,6	;volatile
   841  0179                     l1202:
   842                           
   843                           ;MAIN.c: 130:     OSCCONbits.IRCF1 =1;
   844  0179  168F               	bsf	15,5	;volatile
   845  017A                     l1204:
   846                           
   847                           ;MAIN.c: 131:     OSCCONbits.IRCF0 =0;
   848  017A  120F               	bcf	15,4	;volatile
   849  017B                     l1206:
   850                           
   851                           ;MAIN.c: 132:     OSCCONbits.SCS =1;
   852  017B  140F               	bsf	15,0	;volatile
   853  017C                     l1208:
   854                           
   855                           ;MAIN.c: 135:     PRESCALER_TMR0(0b0111);
   856  017C  3007               	movlw	7
   857  017D  120A  118A  2229  120A  118A  	fcall	_PRESCALER_TMR0
   858  0182                     l1210:
   859                           
   860                           ;MAIN.c: 136:     TMR0 = 244;
   861  0182  30F4               	movlw	244
   862  0183  1283               	bcf	3,5	;RP0=0, select bank0
   863  0184  1303               	bcf	3,6	;RP1=0, select bank0
   864  0185  0081               	movwf	1	;volatile
   865                           
   866                           ;MAIN.c: 139:     IOC_INT(0b00000011);
   867  0186  3003               	movlw	3
   868  0187  120A  118A  2216  120A  118A  	fcall	_IOC_INT
   869  018C                     l1212:
   870                           
   871                           ;MAIN.c: 142:     ADC_INIT(5);
   872  018C  3005               	movlw	5
   873  018D  1283               	bcf	3,5	;RP0=0, select bank0
   874  018E  1303               	bcf	3,6	;RP1=0, select bank0
   875  018F  00A0               	movwf	ADC_INIT@c
   876  0190  3000               	movlw	0
   877  0191  00A1               	movwf	ADC_INIT@c+1
   878  0192  120A  118A  201B  120A  118A  	fcall	_ADC_INIT
   879  0197                     l1214:
   880                           
   881                           ;MAIN.c: 144:     ADCON1bits.VCFG0 = 0;
   882  0197  1683               	bsf	3,5	;RP0=1, select bank1
   883  0198  1303               	bcf	3,6	;RP1=0, select bank1
   884  0199  121F               	bcf	31,4	;volatile
   885  019A                     l1216:
   886                           
   887                           ;MAIN.c: 145:     ADCON1bits.VCFG1 = 1;
   888  019A  169F               	bsf	31,5	;volatile
   889  019B                     l1218:
   890                           
   891                           ;MAIN.c: 147:     ADCON0bits.ADCS0 = 0;
   892  019B  1283               	bcf	3,5	;RP0=0, select bank0
   893  019C  1303               	bcf	3,6	;RP1=0, select bank0
   894  019D  131F               	bcf	31,6	;volatile
   895  019E                     l1220:
   896                           
   897                           ;MAIN.c: 148:     ADCON0bits.ADCS1 = 0;
   898  019E  139F               	bcf	31,7	;volatile
   899  019F                     l1222:
   900                           
   901                           ;MAIN.c: 150:     ADCON1bits.ADFM =0;
   902  019F  1683               	bsf	3,5	;RP0=1, select bank1
   903  01A0  1303               	bcf	3,6	;RP1=0, select bank1
   904  01A1  139F               	bcf	31,7	;volatile
   905  01A2                     l1224:
   906                           
   907                           ;MAIN.c: 152:     ADCON0bits.ADON = 1;
   908  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   909  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   910  01A4  141F               	bsf	31,0	;volatile
   911  01A5                     l1226:
   912                           
   913                           ;MAIN.c: 153:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   914  01A5  300F               	movlw	15
   915  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   916  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   917  01A8  00A2               	movwf	??_setup
   918  01A9                     u637:
   919  01A9  0BA2               	decfsz	??_setup,f
   920  01AA  29A9               	goto	u637
   921  01AB  29AC               	nop2
   922  01AC                     l1228:
   923                           
   924                           ;MAIN.c: 154:     ADCON0bits.GO_nDONE = 1;
   925  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   926  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   927  01AE  149F               	bsf	31,1	;volatile
   928  01AF                     l1230:
   929                           
   930                           ;MAIN.c: 157:     INTCONbits.GIE = 1;
   931  01AF  178B               	bsf	11,7	;volatile
   932  01B0                     l1232:
   933                           
   934                           ;MAIN.c: 159:     INTCONbits.RBIE = 1;
   935  01B0  158B               	bsf	11,3	;volatile
   936  01B1                     l1234:
   937                           
   938                           ;MAIN.c: 160:     INTCONbits.RBIF = 0;
   939  01B1  100B               	bcf	11,0	;volatile
   940  01B2                     l1236:
   941                           
   942                           ;MAIN.c: 161:     INTCONbits.T0IF = 0;
   943  01B2  110B               	bcf	11,2	;volatile
   944  01B3                     l1238:
   945                           
   946                           ;MAIN.c: 162:     INTCONbits.T0IE = 1;
   947  01B3  168B               	bsf	11,5	;volatile
   948  01B4                     l1240:
   949                           
   950                           ;MAIN.c: 164:     unidad = 0;
   951  01B4  01F8               	clrf	_unidad
   952  01B5                     l1242:
   953                           
   954                           ;MAIN.c: 165:     decena = 0;
   955  01B5  01F7               	clrf	_decena
   956  01B6                     l1244:
   957                           
   958                           ;MAIN.c: 166:     display = 0;
   959  01B6  01F6               	clrf	_display
   960  01B7                     l1246:
   961                           
   962                           ;MAIN.c: 167:     POT = 0;
   963  01B7  01F5               	clrf	_POT
   964  01B8                     l96:
   965  01B8  0008               	return
   966  01B9                     __end_of_setup:
   967                           
   968                           	psect	text2
   969  0229                     __ptext2:	
   970 ;; *************** function _PRESCALER_TMR0 *****************
   971 ;; Defined at:
   972 ;;		line 13 in file "TMR.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  a               1    wreg     unsigned char 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  a               1    0[BANK0 ] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       0       0       0       0
   987 ;;      Locals:         0       1       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         0       1       0       0       0
   990 ;;Total ram usage:        1 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 2
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_setup
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000  0229                     _PRESCALER_TMR0:	
  1001                           ;psect for function _PRESCALER_TMR0
  1002                           
  1003                           
  1004                           ;incstack = 0
  1005                           ; Regs used in _PRESCALER_TMR0: [wreg+status,2+status,0]
  1006                           ;PRESCALER_TMR0@a stored from wreg
  1007  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1008  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1009  022B  00A0               	movwf	PRESCALER_TMR0@a
  1010  022C                     l1164:
  1011                           
  1012                           ;TMR.c: 14:     OPTION_REGbits.T0CS = 0;
  1013  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1014  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1015  022E  1281               	bcf	1,5	;volatile
  1016  022F                     l1166:
  1017                           
  1018                           ;TMR.c: 16:     OPTION_REGbits.PS = a;
  1019  022F  0801               	movf	1,w	;volatile
  1020  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0232  0620               	xorwf	PRESCALER_TMR0@a,w
  1023  0233  39F8               	andlw	-8
  1024  0234  0620               	xorwf	PRESCALER_TMR0@a,w
  1025  0235  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0236  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0237  0081               	movwf	1	;volatile
  1028  0238                     l150:
  1029  0238  0008               	return
  1030  0239                     __end_of_PRESCALER_TMR0:
  1031                           
  1032                           	psect	text3
  1033  0216                     __ptext3:	
  1034 ;; *************** function _IOC_INT *****************
  1035 ;; Defined at:
  1036 ;;		line 12 in file "PUSH.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  a               1    wreg     unsigned char 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  a               1    0[BANK0 ] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       1       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       1       0       0       0
  1054 ;;Total ram usage:        1 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 2
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_setup
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064  0216                     _IOC_INT:	
  1065                           ;psect for function _IOC_INT
  1066                           
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _IOC_INT: [wreg]
  1070                           ;IOC_INT@a stored from wreg
  1071  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0218  00A0               	movwf	IOC_INT@a
  1074  0219                     l1168:
  1075                           
  1076                           ;PUSH.c: 15:     OPTION_REGbits.nRBPU = 0;
  1077  0219  1683               	bsf	3,5	;RP0=1, select bank1
  1078  021A  1303               	bcf	3,6	;RP1=0, select bank1
  1079  021B  1381               	bcf	1,7	;volatile
  1080  021C                     l1170:
  1081                           
  1082                           ;PUSH.c: 16:     WPUBbits.WPUB = a;
  1083  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1084  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1085  021E  0820               	movf	IOC_INT@a,w
  1086  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1087  0220  1303               	bcf	3,6	;RP1=0, select bank1
  1088  0221  0095               	movwf	21	;volatile
  1089                           
  1090                           ;PUSH.c: 17:     IOCBbits.IOCB = a;
  1091  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0224  0820               	movf	IOC_INT@a,w
  1094  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0227  0096               	movwf	22	;volatile
  1097  0228                     l105:
  1098  0228  0008               	return
  1099  0229                     __end_of_IOC_INT:
  1100                           
  1101                           	psect	text4
  1102  001B                     __ptext4:	
  1103 ;; *************** function _ADC_INIT *****************
  1104 ;; Defined at:
  1105 ;;		line 14 in file "ADC.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  c               2    0[BANK0 ] int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       2       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0
  1122 ;;      Totals:         0       2       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 2
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_setup
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133  001B                     _ADC_INIT:	
  1134                           ;psect for function _ADC_INIT
  1135                           
  1136  001B                     l1172:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
  1139                           
  1140                           
  1141                           ;ADC.c: 15:     switch(c){
  1142  001B  2867               	goto	l1176
  1143  001C                     l113:	
  1144                           ;ADC.c: 16:         case 0:
  1145                           
  1146                           
  1147                           ;ADC.c: 17:             ADCON0bits.CHS3 = 0;
  1148  001C  129F               	bcf	31,5	;volatile
  1149                           
  1150                           ;ADC.c: 18:             ADCON0bits.CHS2 = 0;
  1151  001D  121F               	bcf	31,4	;volatile
  1152                           
  1153                           ;ADC.c: 19:             ADCON0bits.CHS1 = 0;
  1154  001E  119F               	bcf	31,3	;volatile
  1155                           
  1156                           ;ADC.c: 20:             ADCON0bits.CHS0 = 0;
  1157  001F  111F               	bcf	31,2	;volatile
  1158                           
  1159                           ;ADC.c: 21:             break;
  1160  0020  289A               	goto	l129
  1161  0021                     l115:	
  1162                           ;ADC.c: 23:         case 1:
  1163                           
  1164                           
  1165                           ;ADC.c: 24:             ADCON0bits.CHS3 = 0;
  1166  0021  129F               	bcf	31,5	;volatile
  1167                           
  1168                           ;ADC.c: 25:             ADCON0bits.CHS2 = 0;
  1169  0022  121F               	bcf	31,4	;volatile
  1170                           
  1171                           ;ADC.c: 26:             ADCON0bits.CHS1 = 0;
  1172  0023  119F               	bcf	31,3	;volatile
  1173                           
  1174                           ;ADC.c: 27:             ADCON0bits.CHS0 = 1;
  1175  0024  151F               	bsf	31,2	;volatile
  1176                           
  1177                           ;ADC.c: 28:             break;
  1178  0025  289A               	goto	l129
  1179  0026                     l116:	
  1180                           ;ADC.c: 30:         case 2:
  1181                           
  1182                           
  1183                           ;ADC.c: 31:             ADCON0bits.CHS3 = 0;
  1184  0026  129F               	bcf	31,5	;volatile
  1185                           
  1186                           ;ADC.c: 32:             ADCON0bits.CHS2 = 0;
  1187  0027  121F               	bcf	31,4	;volatile
  1188                           
  1189                           ;ADC.c: 33:             ADCON0bits.CHS1 = 1;
  1190  0028  159F               	bsf	31,3	;volatile
  1191                           
  1192                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;
  1193  0029  111F               	bcf	31,2	;volatile
  1194                           
  1195                           ;ADC.c: 35:             break;
  1196  002A  289A               	goto	l129
  1197  002B                     l117:	
  1198                           ;ADC.c: 37:         case 3:
  1199                           
  1200                           
  1201                           ;ADC.c: 38:             ADCON0bits.CHS3 = 0;
  1202  002B  129F               	bcf	31,5	;volatile
  1203                           
  1204                           ;ADC.c: 39:             ADCON0bits.CHS2 = 0;
  1205  002C  121F               	bcf	31,4	;volatile
  1206                           
  1207                           ;ADC.c: 40:             ADCON0bits.CHS1 = 1;
  1208  002D  159F               	bsf	31,3	;volatile
  1209                           
  1210                           ;ADC.c: 41:             ADCON0bits.CHS0 = 1;
  1211  002E  151F               	bsf	31,2	;volatile
  1212                           
  1213                           ;ADC.c: 42:             break;
  1214  002F  289A               	goto	l129
  1215  0030                     l118:	
  1216                           ;ADC.c: 44:         case 4:
  1217                           
  1218                           
  1219                           ;ADC.c: 45:             ADCON0bits.CHS3 = 0;
  1220  0030  129F               	bcf	31,5	;volatile
  1221                           
  1222                           ;ADC.c: 46:             ADCON0bits.CHS2 = 1;
  1223  0031  161F               	bsf	31,4	;volatile
  1224                           
  1225                           ;ADC.c: 47:             ADCON0bits.CHS1 = 0;
  1226  0032  119F               	bcf	31,3	;volatile
  1227                           
  1228                           ;ADC.c: 48:             ADCON0bits.CHS0 = 0;
  1229  0033  111F               	bcf	31,2	;volatile
  1230                           
  1231                           ;ADC.c: 49:             break;
  1232  0034  289A               	goto	l129
  1233  0035                     l119:	
  1234                           ;ADC.c: 51:         case 5:
  1235                           
  1236                           
  1237                           ;ADC.c: 52:             ADCON0bits.CHS3 = 0;
  1238  0035  129F               	bcf	31,5	;volatile
  1239                           
  1240                           ;ADC.c: 53:             ADCON0bits.CHS2 = 1;
  1241  0036  161F               	bsf	31,4	;volatile
  1242                           
  1243                           ;ADC.c: 54:             ADCON0bits.CHS1 = 0;
  1244  0037  119F               	bcf	31,3	;volatile
  1245                           
  1246                           ;ADC.c: 55:             ADCON0bits.CHS0 = 1;
  1247  0038  151F               	bsf	31,2	;volatile
  1248                           
  1249                           ;ADC.c: 56:             break;
  1250  0039  289A               	goto	l129
  1251  003A                     l120:	
  1252                           ;ADC.c: 58:         case 6:
  1253                           
  1254                           
  1255                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  1256  003A  129F               	bcf	31,5	;volatile
  1257                           
  1258                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1259  003B  161F               	bsf	31,4	;volatile
  1260                           
  1261                           ;ADC.c: 61:             ADCON0bits.CHS1 = 1;
  1262  003C  159F               	bsf	31,3	;volatile
  1263                           
  1264                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  1265  003D  111F               	bcf	31,2	;volatile
  1266                           
  1267                           ;ADC.c: 63:             break;
  1268  003E  289A               	goto	l129
  1269  003F                     l121:	
  1270                           ;ADC.c: 65:         case 7:
  1271                           
  1272                           
  1273                           ;ADC.c: 66:             ADCON0bits.CHS3 = 0;
  1274  003F  129F               	bcf	31,5	;volatile
  1275                           
  1276                           ;ADC.c: 67:             ADCON0bits.CHS2 = 1;
  1277  0040  161F               	bsf	31,4	;volatile
  1278                           
  1279                           ;ADC.c: 68:             ADCON0bits.CHS1 = 1;
  1280  0041  159F               	bsf	31,3	;volatile
  1281                           
  1282                           ;ADC.c: 69:             ADCON0bits.CHS0 = 1;
  1283  0042  151F               	bsf	31,2	;volatile
  1284                           
  1285                           ;ADC.c: 70:             break;
  1286  0043  289A               	goto	l129
  1287  0044                     l122:	
  1288                           ;ADC.c: 72:         case 8:
  1289                           
  1290                           
  1291                           ;ADC.c: 73:             ADCON0bits.CHS3 = 1;
  1292  0044  169F               	bsf	31,5	;volatile
  1293                           
  1294                           ;ADC.c: 74:             ADCON0bits.CHS2 = 0;
  1295  0045  121F               	bcf	31,4	;volatile
  1296                           
  1297                           ;ADC.c: 75:             ADCON0bits.CHS1 = 0;
  1298  0046  119F               	bcf	31,3	;volatile
  1299                           
  1300                           ;ADC.c: 76:             ADCON0bits.CHS0 = 0;
  1301  0047  111F               	bcf	31,2	;volatile
  1302                           
  1303                           ;ADC.c: 77:             break;
  1304  0048  289A               	goto	l129
  1305  0049                     l123:	
  1306                           ;ADC.c: 79:         case 9:
  1307                           
  1308                           
  1309                           ;ADC.c: 80:             ADCON0bits.CHS3 = 1;
  1310  0049  169F               	bsf	31,5	;volatile
  1311                           
  1312                           ;ADC.c: 81:             ADCON0bits.CHS2 = 0;
  1313  004A  121F               	bcf	31,4	;volatile
  1314                           
  1315                           ;ADC.c: 82:             ADCON0bits.CHS1 = 0;
  1316  004B  119F               	bcf	31,3	;volatile
  1317                           
  1318                           ;ADC.c: 83:             ADCON0bits.CHS0 = 1;
  1319  004C  151F               	bsf	31,2	;volatile
  1320                           
  1321                           ;ADC.c: 84:             break;
  1322  004D  289A               	goto	l129
  1323  004E                     l124:	
  1324                           ;ADC.c: 86:         case 10:
  1325                           
  1326                           
  1327                           ;ADC.c: 87:             ADCON0bits.CHS3 = 1;
  1328  004E  169F               	bsf	31,5	;volatile
  1329                           
  1330                           ;ADC.c: 88:             ADCON0bits.CHS2 = 0;
  1331  004F  121F               	bcf	31,4	;volatile
  1332                           
  1333                           ;ADC.c: 89:             ADCON0bits.CHS1 = 1;
  1334  0050  159F               	bsf	31,3	;volatile
  1335                           
  1336                           ;ADC.c: 90:             ADCON0bits.CHS0 = 0;
  1337  0051  111F               	bcf	31,2	;volatile
  1338                           
  1339                           ;ADC.c: 91:             break;
  1340  0052  289A               	goto	l129
  1341  0053                     l125:	
  1342                           ;ADC.c: 93:         case 11:
  1343                           
  1344                           
  1345                           ;ADC.c: 94:             ADCON0bits.CHS3 = 1;
  1346  0053  169F               	bsf	31,5	;volatile
  1347                           
  1348                           ;ADC.c: 95:             ADCON0bits.CHS2 = 0;
  1349  0054  121F               	bcf	31,4	;volatile
  1350                           
  1351                           ;ADC.c: 96:             ADCON0bits.CHS1 = 1;
  1352  0055  159F               	bsf	31,3	;volatile
  1353                           
  1354                           ;ADC.c: 97:             ADCON0bits.CHS0 = 1;
  1355  0056  151F               	bsf	31,2	;volatile
  1356                           
  1357                           ;ADC.c: 98:             break;
  1358  0057  289A               	goto	l129
  1359  0058                     l126:	
  1360                           ;ADC.c: 100:         case 12:
  1361                           
  1362                           
  1363                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1364  0058  169F               	bsf	31,5	;volatile
  1365                           
  1366                           ;ADC.c: 102:             ADCON0bits.CHS2 = 1;
  1367  0059  161F               	bsf	31,4	;volatile
  1368                           
  1369                           ;ADC.c: 103:             ADCON0bits.CHS1 = 0;
  1370  005A  119F               	bcf	31,3	;volatile
  1371                           
  1372                           ;ADC.c: 104:             ADCON0bits.CHS0 = 0;
  1373  005B  111F               	bcf	31,2	;volatile
  1374                           
  1375                           ;ADC.c: 105:             break;
  1376  005C  289A               	goto	l129
  1377  005D                     l127:	
  1378                           ;ADC.c: 107:         case 13:
  1379                           
  1380                           
  1381                           ;ADC.c: 108:             ADCON0bits.CHS3 = 1;
  1382  005D  169F               	bsf	31,5	;volatile
  1383                           
  1384                           ;ADC.c: 109:             ADCON0bits.CHS2 = 1;
  1385  005E  161F               	bsf	31,4	;volatile
  1386                           
  1387                           ;ADC.c: 110:             ADCON0bits.CHS1 = 0;
  1388  005F  119F               	bcf	31,3	;volatile
  1389                           
  1390                           ;ADC.c: 111:             ADCON0bits.CHS0 = 1;
  1391  0060  151F               	bsf	31,2	;volatile
  1392                           
  1393                           ;ADC.c: 112:             break;
  1394  0061  289A               	goto	l129
  1395  0062                     l128:	
  1396                           ;ADC.c: 114:         default:
  1397                           
  1398                           
  1399                           ;ADC.c: 115:             ADCON0bits.CHS3 = 0;
  1400  0062  129F               	bcf	31,5	;volatile
  1401                           
  1402                           ;ADC.c: 116:             ADCON0bits.CHS2 = 0;
  1403  0063  121F               	bcf	31,4	;volatile
  1404                           
  1405                           ;ADC.c: 117:             ADCON0bits.CHS1 = 0;
  1406  0064  119F               	bcf	31,3	;volatile
  1407                           
  1408                           ;ADC.c: 118:             ADCON0bits.CHS0 = 0;
  1409  0065  111F               	bcf	31,2	;volatile
  1410                           
  1411                           ;ADC.c: 119:             break;
  1412  0066  289A               	goto	l129
  1413  0067                     l1176:
  1414                           
  1415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1416                           ; Switch size 1, requested type "simple"
  1417                           ; Number of cases is 1, Range of values is 0 to 0
  1418                           ; switch strategies available:
  1419                           ; Name         Instructions Cycles
  1420                           ; simple_byte            4     3 (average)
  1421                           ; direct_byte           11     8 (fixed)
  1422                           ; jumptable            260     6 (fixed)
  1423                           ;	Chosen strategy is simple_byte
  1424  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0069  0821               	movf	ADC_INIT@c+1,w
  1427  006A  3A00               	xorlw	0	; case 0
  1428  006B  1903               	skipnz
  1429  006C  286E               	goto	l1328
  1430  006D  2862               	goto	l128
  1431  006E                     l1328:
  1432                           
  1433                           ; Switch size 1, requested type "simple"
  1434                           ; Number of cases is 14, Range of values is 0 to 13
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; simple_byte           43    22 (average)
  1438                           ; direct_byte           50     8 (fixed)
  1439                           ; jumptable            260     6 (fixed)
  1440                           ;	Chosen strategy is simple_byte
  1441  006E  0820               	movf	ADC_INIT@c,w
  1442  006F  3A00               	xorlw	0	; case 0
  1443  0070  1903               	skipnz
  1444  0071  281C               	goto	l113
  1445  0072  3A01               	xorlw	1	; case 1
  1446  0073  1903               	skipnz
  1447  0074  2821               	goto	l115
  1448  0075  3A03               	xorlw	3	; case 2
  1449  0076  1903               	skipnz
  1450  0077  2826               	goto	l116
  1451  0078  3A01               	xorlw	1	; case 3
  1452  0079  1903               	skipnz
  1453  007A  282B               	goto	l117
  1454  007B  3A07               	xorlw	7	; case 4
  1455  007C  1903               	skipnz
  1456  007D  2830               	goto	l118
  1457  007E  3A01               	xorlw	1	; case 5
  1458  007F  1903               	skipnz
  1459  0080  2835               	goto	l119
  1460  0081  3A03               	xorlw	3	; case 6
  1461  0082  1903               	skipnz
  1462  0083  283A               	goto	l120
  1463  0084  3A01               	xorlw	1	; case 7
  1464  0085  1903               	skipnz
  1465  0086  283F               	goto	l121
  1466  0087  3A0F               	xorlw	15	; case 8
  1467  0088  1903               	skipnz
  1468  0089  2844               	goto	l122
  1469  008A  3A01               	xorlw	1	; case 9
  1470  008B  1903               	skipnz
  1471  008C  2849               	goto	l123
  1472  008D  3A03               	xorlw	3	; case 10
  1473  008E  1903               	skipnz
  1474  008F  284E               	goto	l124
  1475  0090  3A01               	xorlw	1	; case 11
  1476  0091  1903               	skipnz
  1477  0092  2853               	goto	l125
  1478  0093  3A07               	xorlw	7	; case 12
  1479  0094  1903               	skipnz
  1480  0095  2858               	goto	l126
  1481  0096  3A01               	xorlw	1	; case 13
  1482  0097  1903               	skipnz
  1483  0098  285D               	goto	l127
  1484  0099  2862               	goto	l128
  1485  009A                     l129:
  1486  009A  0008               	return
  1487  009B                     __end_of_ADC_INIT:
  1488                           
  1489                           	psect	text5
  1490  009B                     __ptext5:	
  1491 ;; *************** function ___awdiv *****************
  1492 ;; Defined at:
  1493 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  divisor         2    0[BANK0 ] int 
  1496 ;;  dividend        2    2[BANK0 ] int 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  quotient        2    7[BANK0 ] int 
  1499 ;;  sign            1    6[BANK0 ] unsigned char 
  1500 ;;  counter         1    5[BANK0 ] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[BANK0 ] int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       4       0       0       0
  1511 ;;      Locals:         0       4       0       0       0
  1512 ;;      Temps:          0       1       0       0       0
  1513 ;;      Totals:         0       9       0       0       0
  1514 ;;Total ram usage:        9 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 2
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524  009B                     ___awdiv:	
  1525                           ;psect for function ___awdiv
  1526                           
  1527  009B                     l1250:	
  1528                           ;incstack = 0
  1529                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1530                           
  1531  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1532  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1533  009D  01A6               	clrf	___awdiv@sign
  1534  009E                     l1252:
  1535  009E  1FA1               	btfss	___awdiv@divisor+1,7
  1536  009F  28A1               	goto	u491
  1537  00A0  28A2               	goto	u490
  1538  00A1                     u491:
  1539  00A1  28A9               	goto	l1258
  1540  00A2                     u490:
  1541  00A2                     l1254:
  1542  00A2  09A0               	comf	___awdiv@divisor,f
  1543  00A3  09A1               	comf	___awdiv@divisor+1,f
  1544  00A4  0AA0               	incf	___awdiv@divisor,f
  1545  00A5  1903               	skipnz
  1546  00A6  0AA1               	incf	___awdiv@divisor+1,f
  1547  00A7                     l1256:
  1548  00A7  01A6               	clrf	___awdiv@sign
  1549  00A8  0AA6               	incf	___awdiv@sign,f
  1550  00A9                     l1258:
  1551  00A9  1FA3               	btfss	___awdiv@dividend+1,7
  1552  00AA  28AC               	goto	u501
  1553  00AB  28AD               	goto	u500
  1554  00AC                     u501:
  1555  00AC  28B6               	goto	l1264
  1556  00AD                     u500:
  1557  00AD                     l1260:
  1558  00AD  09A2               	comf	___awdiv@dividend,f
  1559  00AE  09A3               	comf	___awdiv@dividend+1,f
  1560  00AF  0AA2               	incf	___awdiv@dividend,f
  1561  00B0  1903               	skipnz
  1562  00B1  0AA3               	incf	___awdiv@dividend+1,f
  1563  00B2                     l1262:
  1564  00B2  3001               	movlw	1
  1565  00B3  00A4               	movwf	??___awdiv
  1566  00B4  0824               	movf	??___awdiv,w
  1567  00B5  06A6               	xorwf	___awdiv@sign,f
  1568  00B6                     l1264:
  1569  00B6  01A7               	clrf	___awdiv@quotient
  1570  00B7  01A8               	clrf	___awdiv@quotient+1
  1571  00B8                     l1266:
  1572  00B8  0820               	movf	___awdiv@divisor,w
  1573  00B9  0421               	iorwf	___awdiv@divisor+1,w
  1574  00BA  1903               	btfsc	3,2
  1575  00BB  28BD               	goto	u511
  1576  00BC  28BE               	goto	u510
  1577  00BD                     u511:
  1578  00BD  28F5               	goto	l1286
  1579  00BE                     u510:
  1580  00BE                     l1268:
  1581  00BE  01A5               	clrf	___awdiv@counter
  1582  00BF  0AA5               	incf	___awdiv@counter,f
  1583  00C0  28CC               	goto	l1274
  1584  00C1                     l1270:
  1585  00C1  3001               	movlw	1
  1586  00C2                     u525:
  1587  00C2  1003               	clrc
  1588  00C3  0DA0               	rlf	___awdiv@divisor,f
  1589  00C4  0DA1               	rlf	___awdiv@divisor+1,f
  1590  00C5  3EFF               	addlw	-1
  1591  00C6  1D03               	skipz
  1592  00C7  28C2               	goto	u525
  1593  00C8                     l1272:
  1594  00C8  3001               	movlw	1
  1595  00C9  00A4               	movwf	??___awdiv
  1596  00CA  0824               	movf	??___awdiv,w
  1597  00CB  07A5               	addwf	___awdiv@counter,f
  1598  00CC                     l1274:
  1599  00CC  1FA1               	btfss	___awdiv@divisor+1,7
  1600  00CD  28CF               	goto	u531
  1601  00CE  28D0               	goto	u530
  1602  00CF                     u531:
  1603  00CF  28C1               	goto	l1270
  1604  00D0                     u530:
  1605  00D0                     l1276:
  1606  00D0  3001               	movlw	1
  1607  00D1                     u545:
  1608  00D1  1003               	clrc
  1609  00D2  0DA7               	rlf	___awdiv@quotient,f
  1610  00D3  0DA8               	rlf	___awdiv@quotient+1,f
  1611  00D4  3EFF               	addlw	-1
  1612  00D5  1D03               	skipz
  1613  00D6  28D1               	goto	u545
  1614  00D7  0821               	movf	___awdiv@divisor+1,w
  1615  00D8  0223               	subwf	___awdiv@dividend+1,w
  1616  00D9  1D03               	skipz
  1617  00DA  28DD               	goto	u555
  1618  00DB  0820               	movf	___awdiv@divisor,w
  1619  00DC  0222               	subwf	___awdiv@dividend,w
  1620  00DD                     u555:
  1621  00DD  1C03               	skipc
  1622  00DE  28E0               	goto	u551
  1623  00DF  28E1               	goto	u550
  1624  00E0                     u551:
  1625  00E0  28E8               	goto	l1282
  1626  00E1                     u550:
  1627  00E1                     l1278:
  1628  00E1  0820               	movf	___awdiv@divisor,w
  1629  00E2  02A2               	subwf	___awdiv@dividend,f
  1630  00E3  0821               	movf	___awdiv@divisor+1,w
  1631  00E4  1C03               	skipc
  1632  00E5  03A3               	decf	___awdiv@dividend+1,f
  1633  00E6  02A3               	subwf	___awdiv@dividend+1,f
  1634  00E7                     l1280:
  1635  00E7  1427               	bsf	___awdiv@quotient,0
  1636  00E8                     l1282:
  1637  00E8  3001               	movlw	1
  1638  00E9                     u565:
  1639  00E9  1003               	clrc
  1640  00EA  0CA1               	rrf	___awdiv@divisor+1,f
  1641  00EB  0CA0               	rrf	___awdiv@divisor,f
  1642  00EC  3EFF               	addlw	-1
  1643  00ED  1D03               	skipz
  1644  00EE  28E9               	goto	u565
  1645  00EF                     l1284:
  1646  00EF  3001               	movlw	1
  1647  00F0  02A5               	subwf	___awdiv@counter,f
  1648  00F1  1D03               	btfss	3,2
  1649  00F2  28F4               	goto	u571
  1650  00F3  28F5               	goto	u570
  1651  00F4                     u571:
  1652  00F4  28D0               	goto	l1276
  1653  00F5                     u570:
  1654  00F5                     l1286:
  1655  00F5  0826               	movf	___awdiv@sign,w
  1656  00F6  1903               	btfsc	3,2
  1657  00F7  28F9               	goto	u581
  1658  00F8  28FA               	goto	u580
  1659  00F9                     u581:
  1660  00F9  28FF               	goto	l1290
  1661  00FA                     u580:
  1662  00FA                     l1288:
  1663  00FA  09A7               	comf	___awdiv@quotient,f
  1664  00FB  09A8               	comf	___awdiv@quotient+1,f
  1665  00FC  0AA7               	incf	___awdiv@quotient,f
  1666  00FD  1903               	skipnz
  1667  00FE  0AA8               	incf	___awdiv@quotient+1,f
  1668  00FF                     l1290:
  1669  00FF  0828               	movf	___awdiv@quotient+1,w
  1670  0100  00A1               	movwf	?___awdiv+1
  1671  0101  0827               	movf	___awdiv@quotient,w
  1672  0102  00A0               	movwf	?___awdiv
  1673  0103                     l389:
  1674  0103  0008               	return
  1675  0104                     __end_of___awdiv:
  1676                           
  1677                           	psect	text6
  1678  0104                     __ptext6:	
  1679 ;; *************** function _isr *****************
  1680 ;; Defined at:
  1681 ;;		line 59 in file "MAIN.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          5       0       0       0       0
  1698 ;;      Totals:         5       0       0       0       0
  1699 ;;Total ram usage:        5 bytes
  1700 ;; Hardware stack levels used: 2
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		Interrupt level 1
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708  0104                     _isr:	
  1709                           ;psect for function _isr
  1710                           
  1711  0104                     i1l1090:
  1712                           
  1713                           ;MAIN.c: 61:     if (RBIF==1){
  1714  0104  1C0B               	btfss	11,0	;volatile
  1715  0105  2907               	goto	u37_21
  1716  0106  2908               	goto	u37_20
  1717  0107                     u37_21:
  1718  0107  2923               	goto	i1l71
  1719  0108                     u37_20:
  1720  0108                     i1l1092:
  1721                           
  1722                           ;MAIN.c: 62:         if (RB0==0){
  1723  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1725  010A  1806               	btfsc	6,0	;volatile
  1726  010B  290D               	goto	u38_21
  1727  010C  290E               	goto	u38_20
  1728  010D                     u38_21:
  1729  010D  2917               	goto	i1l72
  1730  010E                     u38_20:
  1731  010E                     i1l1094:
  1732                           
  1733                           ;MAIN.c: 63:             if (RB0==0){
  1734  010E  1806               	btfsc	6,0	;volatile
  1735  010F  2911               	goto	u39_21
  1736  0110  2912               	goto	u39_20
  1737  0111                     u39_21:
  1738  0111  2921               	goto	i1l1102
  1739  0112                     u39_20:
  1740  0112                     i1l1096:
  1741                           
  1742                           ;MAIN.c: 64:                 PORTA++;
  1743  0112  3001               	movlw	1
  1744  0113  00F0               	movwf	??_isr
  1745  0114  0870               	movf	??_isr,w
  1746  0115  0785               	addwf	5,f	;volatile
  1747  0116  2921               	goto	i1l1102
  1748  0117                     i1l72:
  1749  0117  1886               	btfsc	6,1	;volatile
  1750  0118  291A               	goto	u40_21
  1751  0119  291B               	goto	u40_20
  1752  011A                     u40_21:
  1753  011A  2921               	goto	i1l1102
  1754  011B                     u40_20:
  1755  011B                     i1l1098:
  1756                           
  1757                           ;MAIN.c: 67:             if (RB1==0){
  1758  011B  1886               	btfsc	6,1	;volatile
  1759  011C  291E               	goto	u41_21
  1760  011D  291F               	goto	u41_20
  1761  011E                     u41_21:
  1762  011E  2921               	goto	i1l1102
  1763  011F                     u41_20:
  1764  011F                     i1l1100:
  1765                           
  1766                           ;MAIN.c: 68:                 PORTA--;
  1767  011F  3001               	movlw	1
  1768  0120  0285               	subwf	5,f	;volatile
  1769  0121                     i1l1102:
  1770                           
  1771                           ;MAIN.c: 72:         INTCONbits.RBIF=0;
  1772  0121  100B               	bcf	11,0	;volatile
  1773                           
  1774                           ;MAIN.c: 73:     }
  1775  0122  2959               	goto	i1l84
  1776  0123                     i1l71:	
  1777                           ;MAIN.c: 74:     else if(T0IF == 1){
  1778                           
  1779  0123  1D0B               	btfss	11,2	;volatile
  1780  0124  2926               	goto	u42_21
  1781  0125  2927               	goto	u42_20
  1782  0126                     u42_21:
  1783  0126  2959               	goto	i1l84
  1784  0127                     u42_20:
  1785  0127                     i1l1104:
  1786                           
  1787                           ;MAIN.c: 75:         PORTD = 0x00;
  1788  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0129  0188               	clrf	8	;volatile
  1791  012A                     i1l1106:
  1792                           
  1793                           ;MAIN.c: 78:         if(display == 1){
  1794  012A  0376               	decf	_display,w
  1795  012B  1D03               	btfss	3,2
  1796  012C  292E               	goto	u43_21
  1797  012D  292F               	goto	u43_20
  1798  012E                     u43_21:
  1799  012E  293A               	goto	i1l1112
  1800  012F                     u43_20:
  1801  012F                     i1l1108:
  1802                           
  1803                           ;MAIN.c: 79:             RD0 = 1;
  1804  012F  1408               	bsf	8,0	;volatile
  1805  0130                     i1l1110:
  1806                           
  1807                           ;MAIN.c: 80:             PORTC = tabla[unidad];
  1808  0130  0878               	movf	_unidad,w
  1809  0131  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1810  0132  0084               	movwf	4
  1811  0133  120A  118A  2200  120A  118A  	fcall	stringdir
  1812  0138  0087               	movwf	7	;volatile
  1813                           
  1814                           ;MAIN.c: 82:         }else if(display == 2){
  1815  0139  2952               	goto	i1l1122
  1816  013A                     i1l1112:
  1817  013A  3002               	movlw	2
  1818  013B  0676               	xorwf	_display,w
  1819  013C  1D03               	btfss	3,2
  1820  013D  293F               	goto	u44_21
  1821  013E  2940               	goto	u44_20
  1822  013F                     u44_21:
  1823  013F  294B               	goto	i1l1118
  1824  0140                     u44_20:
  1825  0140                     i1l1114:
  1826                           
  1827                           ;MAIN.c: 83:             RD1 = 1;
  1828  0140  1488               	bsf	8,1	;volatile
  1829  0141                     i1l1116:
  1830                           
  1831                           ;MAIN.c: 84:             PORTC = tabla[decena];
  1832  0141  0877               	movf	_decena,w
  1833  0142  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1834  0143  0084               	movwf	4
  1835  0144  120A  118A  2200  120A  118A  	fcall	stringdir
  1836  0149  0087               	movwf	7	;volatile
  1837                           
  1838                           ;MAIN.c: 86:         }else if(display == 3){
  1839  014A  2952               	goto	i1l1122
  1840  014B                     i1l1118:
  1841  014B  3003               	movlw	3
  1842  014C  0676               	xorwf	_display,w
  1843  014D  1D03               	btfss	3,2
  1844  014E  2950               	goto	u45_21
  1845  014F  2951               	goto	u45_20
  1846  0150                     u45_21:
  1847  0150  2952               	goto	i1l1122
  1848  0151                     u45_20:
  1849  0151                     i1l1120:
  1850                           
  1851                           ;MAIN.c: 87:             display = 0;
  1852  0151  01F6               	clrf	_display
  1853  0152                     i1l1122:
  1854                           
  1855                           ;MAIN.c: 90:         ++display;
  1856  0152  3001               	movlw	1
  1857  0153  00F0               	movwf	??_isr
  1858  0154  0870               	movf	??_isr,w
  1859  0155  07F6               	addwf	_display,f
  1860  0156                     i1l1124:
  1861                           
  1862                           ;MAIN.c: 91:         INTCONbits.T0IF = 0;
  1863  0156  110B               	bcf	11,2	;volatile
  1864  0157                     i1l1126:
  1865                           
  1866                           ;MAIN.c: 92:         TMR0 = 244;
  1867  0157  30F4               	movlw	244
  1868  0158  0081               	movwf	1	;volatile
  1869  0159                     i1l84:
  1870  0159  0874               	movf	??_isr+4,w
  1871  015A  00FF               	movwf	btemp+1
  1872  015B  0873               	movf	??_isr+3,w
  1873  015C  008A               	movwf	10
  1874  015D  0872               	movf	??_isr+2,w
  1875  015E  0084               	movwf	4
  1876  015F  0E71               	swapf	??_isr+1,w
  1877  0160  0083               	movwf	3
  1878  0161  0EFE               	swapf	btemp,f
  1879  0162  0E7E               	swapf	btemp,w
  1880  0163  0009               	retfie
  1881  0164                     __end_of_isr:
  1882  007E                     btemp	set	126	;btemp
  1883  007E                     wtemp0	set	126
  1884                           
  1885                           	psect	intentry
  1886  0004                     __pintentry:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1889                           
  1890  0004                     interrupt_function:
  1891  007E                     saved_w	set	btemp
  1892  0004  00FE               	movwf	btemp
  1893  0005  0E03               	swapf	3,w
  1894  0006  00F1               	movwf	??_isr+1
  1895  0007  0804               	movf	4,w
  1896  0008  00F2               	movwf	??_isr+2
  1897  0009  080A               	movf	10,w
  1898  000A  00F3               	movwf	??_isr+3
  1899  000B  087F               	movf	btemp+1,w
  1900  000C  00F4               	movwf	??_isr+4
  1901  000D  120A  118A  2904   	ljmp	_isr
  1902                           
  1903                           	psect	idloc
  1904                           
  1905                           ;Config register IDLOC0 @ 0x2000
  1906                           ;	unspecified, using default values
  1907  2000                     	org	8192
  1908  2000  3FFF               	dw	16383
  1909                           
  1910                           ;Config register IDLOC1 @ 0x2001
  1911                           ;	unspecified, using default values
  1912  2001                     	org	8193
  1913  2001  3FFF               	dw	16383
  1914                           
  1915                           ;Config register IDLOC2 @ 0x2002
  1916                           ;	unspecified, using default values
  1917  2002                     	org	8194
  1918  2002  3FFF               	dw	16383
  1919                           
  1920                           ;Config register IDLOC3 @ 0x2003
  1921                           ;	unspecified, using default values
  1922  2003                     	org	8195
  1923  2003  3FFF               	dw	16383
  1924                           
  1925                           	psect	config
  1926                           
  1927                           ;Config register CONFIG1 @ 0x2007
  1928                           ;	Oscillator Selection bits
  1929                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1930                           ;	Watchdog Timer Enable bit
  1931                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1932                           ;	Power-up Timer Enable bit
  1933                           ;	PWRTE = OFF, PWRT disabled
  1934                           ;	RE3/MCLR pin function select bit
  1935                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1936                           ;	Code Protection bit
  1937                           ;	CP = OFF, Program memory code protection is disabled
  1938                           ;	Data Code Protection bit
  1939                           ;	CPD = OFF, Data memory code protection is disabled
  1940                           ;	Brown Out Reset Selection bits
  1941                           ;	BOREN = OFF, BOR disabled
  1942                           ;	Internal External Switchover bit
  1943                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1944                           ;	Fail-Safe Clock Monitor Enabled bit
  1945                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1946                           ;	Low Voltage Programming Enable bit
  1947                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1948                           ;	In-Circuit Debugger Mode bit
  1949                           ;	DEBUG = 0x1, unprogrammed default
  1950  2007                     	org	8199
  1951  2007  20D4               	dw	8404
  1952                           
  1953                           ;Config register CONFIG2 @ 0x2008
  1954                           ;	Brown-out Reset Selection bit
  1955                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1956                           ;	Flash Program Memory Self Write Enable bits
  1957                           ;	WRT = OFF, Write protection off
  1958  2008                     	org	8200
  1959  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _setup->_ADC_INIT

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     812
                                              9 BANK0      3     3      0
                            ___awdiv
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     187
                                              2 BANK0      1     1      0
                           _ADC_INIT
                            _IOC_INT
                     _PRESCALER_TMR0
 ---------------------------------------------------------------------------------
 (2) _PRESCALER_TMR0                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IOC_INT                                              1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _setup
     _ADC_INIT
     _IOC_INT
     _PRESCALER_TMR0

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Jul 16 16:09:27 2023

                      pc 0002                       l96 01B8             ___awdiv@sign 0026  
                     fsr 0004                      l120 003A                      l121 003F  
                    l113 001C                      l105 0228                      l122 0044  
                    l123 0049                      l115 0021                      l124 004E  
                    l116 0026                      l125 0053                      l117 002B  
                    l126 0058                      l118 0030                      l150 0238  
                    l127 005D                      l119 0035                      l128 0062  
                    l129 009A                      l389 0103                      _RB0 0030  
                    _RB1 0031           _PRESCALER_TMR0 0229                      _RD0 0040  
                    _RD1 0041                      _RB7 0037                      u500 00AD  
                    u501 00AC                      u510 00BE                      u511 00BD  
                    u600 01F7                      u601 01F3                      u530 00D0  
                    u531 00CF                      u525 00C2                      u550 00E1  
                    u614 01FA                      u551 00E0                      u545 00D1  
                    u570 00F5                      u490 00A2                      u571 00F4  
                    u555 00DD                      u491 00A1                      u627 01CC  
                    u580 00FA                      u581 00F9                      u565 00E9  
                    u637 01A9                      u590 01C4                      u591 01C3  
                    _POT 0075                      _isr 0104                      fsr0 0004  
        __end_of_IOC_INT 0229                     l1200 0176                     l1210 0182  
                   l1202 0179                     l1220 019E                     l1212 018C  
                   l1204 017A                     l1300 01CF                     l1230 01AF  
                   l1222 019F                     l1214 0197                     l1206 017B  
                   l1302 01D2                     l1240 01B4                     l1232 01B0  
                   l1224 01A2                     l1216 019A                     l1208 017C  
                   l1304 01D7                     l1250 009B                     l1170 021C  
                   l1242 01B5                     l1234 01B1                     l1226 01A5  
                   l1218 019B                     l1306 01EE                     l1260 00AD  
                   l1252 009E                     l1172 001B                     l1164 022C  
                   l1244 01B6                     l1236 01B2                     l1228 01AC  
                   l1270 00C1                     l1262 00B2                     l1254 00A2  
                   l1166 022F                     l1246 01B7                     l1238 01B3  
                   l1190 016F                     l1182 0164                     l1280 00E7  
                   l1272 00C8                     l1264 00B6                     l1256 00A7  
                   l1328 006E                     l1176 0067                     l1168 0219  
                   l1192 0170                     l1184 0168                     l1290 00FF  
                   l1282 00E8                     l1274 00CC                     l1266 00B8  
                   l1258 00A9                     l1194 0173                     l1186 0169  
                   l1284 00EF                     l1276 00D0                     l1268 00BE  
                   l1196 0174                     l1188 016E                     l1278 00E1  
                   l1286 00F5                     l1198 0175                     l1294 01B9  
                   l1288 00FA                     l1296 01BE                     l1298 01C4  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   i1l71 0123                     i1l72 0117                     i1l84 0159  
                   _TMR0 0001         __end_of_ADC_INIT 009B                     _main 01B9  
                   btemp 007E                     start 0010                    ??_isr 0070  
 __end_of_PRESCALER_TMR0 0239                    ?_main 0070          __end_of___awdiv 0104  
                  _ANSEL 0188          ___awdiv@divisor 0020          ___awdiv@counter 0025  
                  u40_20 011B                    u40_21 011A                    u41_20 011F  
                  u41_21 011E                    u42_20 0127                    u42_21 0126  
                  u43_20 012F                    u43_21 012E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u44_20 0140                    u44_21 013F                    u45_20 0151  
                  u37_20 0108                    u45_21 0150                    u37_21 0107  
                  u38_20 010E                    u38_21 010D                    u39_20 0112  
                  u39_21 0111                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _tabla 0206  
                  _setup 0164                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 01FE  
        ?_PRESCALER_TMR0 0070                   ??_main 0029                ADC_INIT@c 0020  
              ??_IOC_INT 0075          PRESCALER_TMR0@a 0020                   _ADRESH 001E  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
                 i1l1100 011F                   i1l1110 0130                   i1l1102 0121  
                 i1l1120 0151                   i1l1112 013A                   i1l1104 0127  
                 i1l1114 0140                   i1l1122 0152                   i1l1106 012A  
                 i1l1124 0156                   i1l1116 0141                   i1l1108 012F  
                 i1l1126 0157                   i1l1118 014B                   i1l1090 0104  
                 i1l1092 0108                   i1l1094 010E                   i1l1096 0112  
                 i1l1098 011B                ??___awdiv 0024                   _decena 0077  
       ___awdiv@quotient 0027                   _unidad 0078                ?_ADC_INIT 0020  
                 saved_w 007E  __end_of__initialization 0017           __pcstackCOMMON 0070  
          __end_of_tabla 0216            __end_of_setup 01B9               ??_ADC_INIT 0075  
         _OPTION_REGbits 0081                  ??_setup 0022               __pmaintext 01B9  
             __pintentry 0004                  _IOC_INT 0216               __stringtab 0200  
       ??_PRESCALER_TMR0 0075                  ___awdiv 009B                  __ptext1 0164  
                __ptext2 0229                  __ptext3 0216                  __ptext4 001B  
                __ptext5 009B                  __ptext6 0104                  _display 0076  
   end_of_initialization 0017      start_initialization 0013              __end_of_isr 0164  
               ?_IOC_INT 0070              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                 IOC_INT@a 0020                 ?___awdiv 0020  
              __pstrings 0200                 _ADC_INIT 001B        interrupt_function 0004  
               _IOCBbits 0096               _ADCON0bits 001F              __stringbase 0205  
             _ADCON1bits 009F                 _WPUBbits 0095       __end_of__stringtab 0206  
             _INTCONbits 000B                 intlevel1 0000                stringcode 0200  
             _OSCCONbits 008F                 stringdir 0200                 stringtab 0200  
