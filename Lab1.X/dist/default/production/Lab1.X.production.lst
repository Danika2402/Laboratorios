

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Jul 16 17:29:20 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450                           
   451                           	psect	strings
   452  02DF                     __pstrings:
   453  02DF                     stringtab:
   454  02DF                     __stringtab:
   455  02DF                     stringcode:	
   456                           ;	String table - string pointers are 1 byte each
   457                           
   458  02DF                     stringdir:
   459  02DF  3002               	movlw	high stringdir
   460  02E0  008A               	movwf	10
   461  02E1  0804               	movf	4,w
   462  02E2  0A84               	incf	4,f
   463  02E3  0782               	addwf	2,f
   464  02E4                     __stringbase:
   465  02E4  3400               	retlw	0
   466  02E5                     __end_of__stringtab:
   467  02E5                     _tabla:
   468  02E5  34FC               	retlw	252
   469  02E6  3460               	retlw	96
   470  02E7  34DA               	retlw	218
   471  02E8  34F2               	retlw	242
   472  02E9  3466               	retlw	102
   473  02EA  34B6               	retlw	182
   474  02EB  34BE               	retlw	190
   475  02EC  34E0               	retlw	224
   476  02ED  34FE               	retlw	254
   477  02EE  34F6               	retlw	246
   478  02EF  34EE               	retlw	238
   479  02F0  343E               	retlw	62
   480  02F1  349C               	retlw	156
   481  02F2  347A               	retlw	122
   482  02F3  349E               	retlw	158
   483  02F4  348E               	retlw	142
   484  02F5                     __end_of_tabla:
   485  001E                     _ADRESH	set	30
   486  0006                     _PORTB	set	6
   487  001F                     _ADCON0bits	set	31
   488  0001                     _TMR0	set	1
   489  0007                     _PORTC	set	7
   490  0008                     _PORTD	set	8
   491  000B                     _INTCONbits	set	11
   492  0005                     _PORTA	set	5
   493  0037                     _RB7	set	55
   494  0041                     _RD1	set	65
   495  0040                     _RD0	set	64
   496  005A                     _T0IF	set	90
   497  0031                     _RB1	set	49
   498  0030                     _RB0	set	48
   499  0058                     _RBIF	set	88
   500  008F                     _OSCCONbits	set	143
   501  0096                     _IOCBbits	set	150
   502  0095                     _WPUBbits	set	149
   503  0081                     _OPTION_REGbits	set	129
   504  009F                     _ADCON1bits	set	159
   505  0088                     _TRISD	set	136
   506  0087                     _TRISC	set	135
   507  0086                     _TRISB	set	134
   508  0085                     _TRISA	set	133
   509  0189                     _ANSELH	set	393
   510  0188                     _ANSEL	set	392
   511                           
   512                           	psect	cinit
   513  0013                     start_initialization:	
   514                           ; #config settings
   515                           
   516  0013                     __initialization:
   517                           
   518                           ; Clear objects allocated to COMMON
   519  0013  01F5               	clrf	__pbssCOMMON& (0+127)
   520  0014  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   521  0015  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   522  0016  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   523  0017                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  0017                     __end_of__initialization:
   527  0017  0183               	clrf	3
   528  0018  120A  118A  2A7D   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssCOMMON
   531  0075                     __pbssCOMMON:
   532  0075                     _POT:
   533  0075                     	ds	1
   534  0076                     _display:
   535  0076                     	ds	1
   536  0077                     _decena:
   537  0077                     	ds	1
   538  0078                     _unidad:
   539  0078                     	ds	1
   540                           
   541                           	psect	cstackCOMMON
   542  0070                     __pcstackCOMMON:
   543  0070                     ?_setup:
   544  0070                     ?_DECENA:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_UNIDAD:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_OSCILLATOR:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_IOC_INT:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_isr:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_isr:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_main:	
   563                           ; 1 bytes @ 0x0
   564                           
   565                           
   566                           ; 1 bytes @ 0x0
   567  0070                     	ds	5
   568  0075                     ??_PRESCALER_TMR0:
   569  0075                     ??_IOC_INT:	
   570                           ; 1 bytes @ 0x5
   571                           
   572  0075                     ??_ADC_INIT:	
   573                           ; 1 bytes @ 0x5
   574                           
   575                           
   576                           	psect	cstackBANK0
   577  0020                     __pcstackBANK0:	
   578                           ; 1 bytes @ 0x5
   579                           
   580  0020                     ??_DECENA:
   581  0020                     ??_OSCILLATOR:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0020                     ?_PRESCALER_TMR0:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0020                     ?_ADC_INIT:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0020                     ?_ADC_READ:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0020                     ?___awdiv:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0020                     IOC_INT@a:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0020                     ADC_INIT@c:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0020                     PRESCALER_TMR0@c:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0020                     ___awdiv@divisor:	
   606                           ; 2 bytes @ 0x0
   607                           
   608                           
   609                           ; 2 bytes @ 0x0
   610  0020                     	ds	1
   611  0021                     DECENA@c:
   612                           
   613                           ; 1 bytes @ 0x1
   614  0021                     	ds	1
   615  0022                     ??_ADC_READ:
   616  0022                     OSCILLATOR@c:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0022                     ___awdiv@dividend:	
   620                           ; 1 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0022                     	ds	1
   625  0023                     ??_setup:
   626                           
   627                           ; 1 bytes @ 0x3
   628  0023                     	ds	1
   629  0024                     ??___awdiv:
   630                           
   631                           ; 1 bytes @ 0x4
   632  0024                     	ds	1
   633  0025                     ___awdiv@counter:
   634                           
   635                           ; 1 bytes @ 0x5
   636  0025                     	ds	1
   637  0026                     ___awdiv@sign:
   638                           
   639                           ; 1 bytes @ 0x6
   640  0026                     	ds	1
   641  0027                     ___awdiv@quotient:
   642                           
   643                           ; 2 bytes @ 0x7
   644  0027                     	ds	2
   645  0029                     ??_UNIDAD:
   646                           
   647                           ; 1 bytes @ 0x9
   648  0029                     	ds	3
   649  002C                     UNIDAD@c:
   650                           
   651                           ; 1 bytes @ 0xC
   652  002C                     	ds	1
   653  002D                     ??_main:
   654                           
   655                           ; 1 bytes @ 0xD
   656  002D                     	ds	1
   657                           
   658                           	psect	maintext
   659  027D                     __pmaintext:	
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 95 in file "MAIN.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : B00/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       1       0       0       0
   682 ;;      Totals:         0       1       0       0       0
   683 ;;Total ram usage:        1 bytes
   684 ;; Hardware stack levels required when called: 4
   685 ;; This function calls:
   686 ;;		_ADC_READ
   687 ;;		_DECENA
   688 ;;		_UNIDAD
   689 ;;		_setup
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695  027D                     _main:	
   696                           ;psect for function _main
   697                           
   698  027D                     l1477:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;MAIN.c: 96:     setup();
   704  027D  120A  118A  2223  120A  118A  	fcall	_setup
   705  0282                     l1479:
   706                           
   707                           ;MAIN.c: 98:         if (ADCON0bits.GO == 0){
   708  0282  1283               	bcf	3,5	;RP0=0, select bank0
   709  0283  1303               	bcf	3,6	;RP1=0, select bank0
   710  0284  189F               	btfsc	31,1	;volatile
   711  0285  2A87               	goto	u591
   712  0286  2A88               	goto	u590
   713  0287                     u591:
   714  0287  2A9D               	goto	l1487
   715  0288                     u590:
   716  0288                     l1481:
   717                           
   718                           ;MAIN.c: 99:             POT = ADC_READ();
   719  0288  120A  118A  2312  120A  118A  	fcall	_ADC_READ
   720  028D  1283               	bcf	3,5	;RP0=0, select bank0
   721  028E  1303               	bcf	3,6	;RP1=0, select bank0
   722  028F  0820               	movf	?_ADC_READ,w
   723  0290  00AD               	movwf	??_main
   724  0291  082D               	movf	??_main,w
   725  0292  00F5               	movwf	_POT
   726  0293                     l1483:
   727                           
   728                           ;MAIN.c: 100:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   729  0293  300F               	movlw	15
   730  0294  1283               	bcf	3,5	;RP0=0, select bank0
   731  0295  1303               	bcf	3,6	;RP1=0, select bank0
   732  0296  00AD               	movwf	??_main
   733  0297                     u627:
   734  0297  0BAD               	decfsz	??_main,f
   735  0298  2A97               	goto	u627
   736  0299  2A9A               	nop2
   737  029A                     l1485:
   738                           
   739                           ;MAIN.c: 101:             ADCON0bits.GO = 1;
   740  029A  1283               	bcf	3,5	;RP0=0, select bank0
   741  029B  1303               	bcf	3,6	;RP1=0, select bank0
   742  029C  149F               	bsf	31,1	;volatile
   743  029D                     l1487:
   744                           
   745                           ;MAIN.c: 104:         decena = DECENA(POT);
   746  029D  0875               	movf	_POT,w
   747  029E  120A  118A  2308  120A  118A  	fcall	_DECENA
   748  02A3  1283               	bcf	3,5	;RP0=0, select bank0
   749  02A4  1303               	bcf	3,6	;RP1=0, select bank0
   750  02A5  00AD               	movwf	??_main
   751  02A6  082D               	movf	??_main,w
   752  02A7  00F7               	movwf	_decena
   753  02A8                     l1489:
   754                           
   755                           ;MAIN.c: 105:         unidad = UNIDAD(POT);
   756  02A8  0875               	movf	_POT,w
   757  02A9  120A  118A  22C3  120A  118A  	fcall	_UNIDAD
   758  02AE  1283               	bcf	3,5	;RP0=0, select bank0
   759  02AF  1303               	bcf	3,6	;RP1=0, select bank0
   760  02B0  00AD               	movwf	??_main
   761  02B1  082D               	movf	??_main,w
   762  02B2  00F8               	movwf	_unidad
   763  02B3                     l1491:
   764                           
   765                           ;MAIN.c: 107:         RB7 = (POT > PORTA) ? 1:0;
   766  02B3  0875               	movf	_POT,w
   767  02B4  0205               	subwf	5,w	;volatile
   768  02B5  1C03               	skipc
   769  02B6  2AB8               	goto	u601
   770  02B7  2ABC               	goto	u600
   771  02B8                     u601:
   772  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   773  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   774  02BA  1786               	bsf	6,7	;volatile
   775  02BB  2ABF               	goto	u614
   776  02BC                     u600:
   777  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   778  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   779  02BE  1386               	bcf	6,7	;volatile
   780  02BF                     u614:
   781  02BF  2A82               	goto	l1479
   782  02C0  120A  118A  2810   	ljmp	start
   783  02C3                     __end_of_main:
   784                           
   785                           	psect	text1
   786  0223                     __ptext1:	
   787 ;; *************** function _setup *****************
   788 ;; Defined at:
   789 ;;		line 111 in file "MAIN.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       1       0       0       0
   806 ;;      Totals:         0       1       0       0       0
   807 ;;Total ram usage:        1 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 3
   810 ;; This function calls:
   811 ;;		_ADC_INIT
   812 ;;		_IOC_INT
   813 ;;		_OSCILLATOR
   814 ;;		_PRESCALER_TMR0
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820  0223                     _setup:	
   821                           ;psect for function _setup
   822                           
   823  0223                     l1399:	
   824                           ;incstack = 0
   825                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   826                           
   827                           
   828                           ;MAIN.c: 113:     ANSEL = 0b00100000;
   829  0223  3020               	movlw	32
   830  0224  1683               	bsf	3,5	;RP0=1, select bank3
   831  0225  1703               	bsf	3,6	;RP1=1, select bank3
   832  0226  0088               	movwf	8	;volatile
   833  0227                     l1401:
   834                           
   835                           ;MAIN.c: 114:     ANSELH = 0x00;
   836  0227  0189               	clrf	9	;volatile
   837  0228                     l1403:
   838                           
   839                           ;MAIN.c: 116:     TRISA = 0x00;
   840  0228  1683               	bsf	3,5	;RP0=1, select bank1
   841  0229  1303               	bcf	3,6	;RP1=0, select bank1
   842  022A  0185               	clrf	5	;volatile
   843                           
   844                           ;MAIN.c: 117:     TRISB = 0b00000011;
   845  022B  3003               	movlw	3
   846  022C  0086               	movwf	6	;volatile
   847  022D                     l1405:
   848                           
   849                           ;MAIN.c: 118:     TRISC = 0x00;
   850  022D  0187               	clrf	7	;volatile
   851  022E                     l1407:
   852                           
   853                           ;MAIN.c: 119:     TRISD = 0x00;
   854  022E  0188               	clrf	8	;volatile
   855  022F                     l1409:
   856                           
   857                           ;MAIN.c: 121:     PORTA = 0x00;
   858  022F  1283               	bcf	3,5	;RP0=0, select bank0
   859  0230  1303               	bcf	3,6	;RP1=0, select bank0
   860  0231  0185               	clrf	5	;volatile
   861  0232                     l1411:
   862                           
   863                           ;MAIN.c: 122:     PORTB = 0x00;
   864  0232  0186               	clrf	6	;volatile
   865  0233                     l1413:
   866                           
   867                           ;MAIN.c: 123:     PORTC = 0x00;
   868  0233  0187               	clrf	7	;volatile
   869  0234                     l1415:
   870                           
   871                           ;MAIN.c: 124:     PORTD = 0x00;
   872  0234  0188               	clrf	8	;volatile
   873  0235                     l1417:
   874                           
   875                           ;MAIN.c: 127:     OSCILLATOR(2);
   876  0235  3002               	movlw	2
   877  0236  120A  118A  2104  120A  118A  	fcall	_OSCILLATOR
   878  023B                     l1419:
   879                           
   880                           ;MAIN.c: 134:     PRESCALER_TMR0(7);
   881  023B  3007               	movlw	7
   882  023C  1283               	bcf	3,5	;RP0=0, select bank0
   883  023D  1303               	bcf	3,6	;RP1=0, select bank0
   884  023E  00A0               	movwf	PRESCALER_TMR0@c
   885  023F  3000               	movlw	0
   886  0240  00A1               	movwf	PRESCALER_TMR0@c+1
   887  0241  120A  118A  21C6  120A  118A  	fcall	_PRESCALER_TMR0
   888                           
   889                           ;MAIN.c: 135:     TMR0 = 244;
   890  0246  30F4               	movlw	244
   891  0247  1283               	bcf	3,5	;RP0=0, select bank0
   892  0248  1303               	bcf	3,6	;RP1=0, select bank0
   893  0249  0081               	movwf	1	;volatile
   894  024A                     l1421:
   895                           
   896                           ;MAIN.c: 138:     IOC_INT(0b00000011);
   897  024A  3003               	movlw	3
   898  024B  120A  118A  22F5  120A  118A  	fcall	_IOC_INT
   899  0250                     l1423:
   900                           
   901                           ;MAIN.c: 141:     ADC_INIT(5);
   902  0250  3005               	movlw	5
   903  0251  1283               	bcf	3,5	;RP0=0, select bank0
   904  0252  1303               	bcf	3,6	;RP1=0, select bank0
   905  0253  00A0               	movwf	ADC_INIT@c
   906  0254  3000               	movlw	0
   907  0255  00A1               	movwf	ADC_INIT@c+1
   908  0256  120A  118A  201B  120A  118A  	fcall	_ADC_INIT
   909  025B                     l1425:
   910                           
   911                           ;MAIN.c: 143:     ADCON1bits.VCFG0 = 0;
   912  025B  1683               	bsf	3,5	;RP0=1, select bank1
   913  025C  1303               	bcf	3,6	;RP1=0, select bank1
   914  025D  121F               	bcf	31,4	;volatile
   915  025E                     l1427:
   916                           
   917                           ;MAIN.c: 144:     ADCON1bits.VCFG1 = 0;
   918  025E  129F               	bcf	31,5	;volatile
   919  025F                     l1429:
   920                           
   921                           ;MAIN.c: 146:     ADCON0bits.ADCS0 = 0;
   922  025F  1283               	bcf	3,5	;RP0=0, select bank0
   923  0260  1303               	bcf	3,6	;RP1=0, select bank0
   924  0261  131F               	bcf	31,6	;volatile
   925  0262                     l1431:
   926                           
   927                           ;MAIN.c: 147:     ADCON0bits.ADCS1 = 1;
   928  0262  179F               	bsf	31,7	;volatile
   929  0263                     l1433:
   930                           
   931                           ;MAIN.c: 149:     ADCON1bits.ADFM =0;
   932  0263  1683               	bsf	3,5	;RP0=1, select bank1
   933  0264  1303               	bcf	3,6	;RP1=0, select bank1
   934  0265  139F               	bcf	31,7	;volatile
   935  0266                     l1435:
   936                           
   937                           ;MAIN.c: 151:     ADCON0bits.ADON = 1;
   938  0266  1283               	bcf	3,5	;RP0=0, select bank0
   939  0267  1303               	bcf	3,6	;RP1=0, select bank0
   940  0268  141F               	bsf	31,0	;volatile
   941  0269                     l1437:
   942                           
   943                           ;MAIN.c: 152:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   944  0269  300F               	movlw	15
   945  026A  1283               	bcf	3,5	;RP0=0, select bank0
   946  026B  1303               	bcf	3,6	;RP1=0, select bank0
   947  026C  00A3               	movwf	??_setup
   948  026D                     u637:
   949  026D  0BA3               	decfsz	??_setup,f
   950  026E  2A6D               	goto	u637
   951  026F  2A70               	nop2
   952  0270                     l1439:
   953                           
   954                           ;MAIN.c: 153:     ADCON0bits.GO_nDONE = 1;
   955  0270  1283               	bcf	3,5	;RP0=0, select bank0
   956  0271  1303               	bcf	3,6	;RP1=0, select bank0
   957  0272  149F               	bsf	31,1	;volatile
   958  0273                     l1441:
   959                           
   960                           ;MAIN.c: 156:     INTCONbits.GIE = 1;
   961  0273  178B               	bsf	11,7	;volatile
   962  0274                     l1443:
   963                           
   964                           ;MAIN.c: 158:     INTCONbits.RBIE = 1;
   965  0274  158B               	bsf	11,3	;volatile
   966  0275                     l1445:
   967                           
   968                           ;MAIN.c: 159:     INTCONbits.RBIF = 0;
   969  0275  100B               	bcf	11,0	;volatile
   970  0276                     l1447:
   971                           
   972                           ;MAIN.c: 160:     INTCONbits.T0IF = 0;
   973  0276  110B               	bcf	11,2	;volatile
   974  0277                     l1449:
   975                           
   976                           ;MAIN.c: 161:     INTCONbits.T0IE = 1;
   977  0277  168B               	bsf	11,5	;volatile
   978  0278                     l1451:
   979                           
   980                           ;MAIN.c: 163:     unidad = 0;
   981  0278  01F8               	clrf	_unidad
   982  0279                     l1453:
   983                           
   984                           ;MAIN.c: 164:     decena = 0;
   985  0279  01F7               	clrf	_decena
   986  027A                     l1455:
   987                           
   988                           ;MAIN.c: 165:     display = 0;
   989  027A  01F6               	clrf	_display
   990  027B                     l1457:
   991                           
   992                           ;MAIN.c: 166:     POT = 0;
   993  027B  01F5               	clrf	_POT
   994  027C                     l100:
   995  027C  0008               	return
   996  027D                     __end_of_setup:
   997                           
   998                           	psect	text2
   999  01C6                     __ptext2:	
  1000 ;; *************** function _PRESCALER_TMR0 *****************
  1001 ;; Defined at:
  1002 ;;		line 75 in file "TMR.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  c               2    0[BANK0 ] int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       2       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         0       2       0       0       0
  1020 ;;Total ram usage:        2 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 2
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_setup
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030  01C6                     _PRESCALER_TMR0:	
  1031                           ;psect for function _PRESCALER_TMR0
  1032                           
  1033  01C6                     l1331:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _PRESCALER_TMR0: [wreg-fsr0h+status,2+status,0]
  1036                           
  1037                           
  1038                           ;TMR.c: 76:     OPTION_REGbits.T0CS = 0;
  1039  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1040  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1041  01C8  1281               	bcf	1,5	;volatile
  1042                           
  1043                           ;TMR.c: 77:     OPTION_REGbits.PSA = 0;
  1044  01C9  1181               	bcf	1,3	;volatile
  1045                           
  1046                           ;TMR.c: 79:     switch(c){
  1047  01CA  2A01               	goto	l1335
  1048  01CB                     l177:	
  1049                           ;TMR.c: 80:         case(0):
  1050                           
  1051                           
  1052                           ;TMR.c: 81:             OPTION_REGbits.PS2 = 0;
  1053  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  1054  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  1055  01CD  1101               	bcf	1,2	;volatile
  1056                           
  1057                           ;TMR.c: 82:             OPTION_REGbits.PS1 = 0;
  1058  01CE  1081               	bcf	1,1	;volatile
  1059                           
  1060                           ;TMR.c: 83:             OPTION_REGbits.PS0 = 0;
  1061  01CF  1001               	bcf	1,0	;volatile
  1062                           
  1063                           ;TMR.c: 84:             break;
  1064  01D0  2A22               	goto	l187
  1065  01D1                     l179:	
  1066                           ;TMR.c: 86:         case(1):
  1067                           
  1068                           
  1069                           ;TMR.c: 87:             OPTION_REGbits.PS2 = 0;
  1070  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1071  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1072  01D3  1101               	bcf	1,2	;volatile
  1073                           
  1074                           ;TMR.c: 88:             OPTION_REGbits.PS1 = 0;
  1075  01D4  1081               	bcf	1,1	;volatile
  1076                           
  1077                           ;TMR.c: 89:             OPTION_REGbits.PS0 = 1;
  1078  01D5  1401               	bsf	1,0	;volatile
  1079                           
  1080                           ;TMR.c: 90:             break;
  1081  01D6  2A22               	goto	l187
  1082  01D7                     l180:	
  1083                           ;TMR.c: 92:         case(2):
  1084                           
  1085                           
  1086                           ;TMR.c: 93:             OPTION_REGbits.PS2 = 0;
  1087  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  1088  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  1089  01D9  1101               	bcf	1,2	;volatile
  1090                           
  1091                           ;TMR.c: 94:             OPTION_REGbits.PS1 = 1;
  1092  01DA  1481               	bsf	1,1	;volatile
  1093                           
  1094                           ;TMR.c: 95:             OPTION_REGbits.PS0 = 0;
  1095  01DB  1001               	bcf	1,0	;volatile
  1096                           
  1097                           ;TMR.c: 96:             break;
  1098  01DC  2A22               	goto	l187
  1099  01DD                     l181:	
  1100                           ;TMR.c: 98:         case(3):
  1101                           
  1102                           
  1103                           ;TMR.c: 99:             OPTION_REGbits.PS2 = 0;
  1104  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  1105  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  1106  01DF  1101               	bcf	1,2	;volatile
  1107                           
  1108                           ;TMR.c: 100:             OPTION_REGbits.PS1 = 1;
  1109  01E0  1481               	bsf	1,1	;volatile
  1110                           
  1111                           ;TMR.c: 101:             OPTION_REGbits.PS0 = 1;
  1112  01E1  1401               	bsf	1,0	;volatile
  1113                           
  1114                           ;TMR.c: 102:             break;
  1115  01E2  2A22               	goto	l187
  1116  01E3                     l182:	
  1117                           ;TMR.c: 105:         case(4):
  1118                           
  1119                           
  1120                           ;TMR.c: 106:             OPTION_REGbits.PS2 = 1;
  1121  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1122  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1123  01E5  1501               	bsf	1,2	;volatile
  1124                           
  1125                           ;TMR.c: 107:             OPTION_REGbits.PS1 = 0;
  1126  01E6  1081               	bcf	1,1	;volatile
  1127                           
  1128                           ;TMR.c: 108:             OPTION_REGbits.PS0 = 0;
  1129  01E7  1001               	bcf	1,0	;volatile
  1130                           
  1131                           ;TMR.c: 109:             break;
  1132  01E8  2A22               	goto	l187
  1133  01E9                     l183:	
  1134                           ;TMR.c: 111:         case(5):
  1135                           
  1136                           
  1137                           ;TMR.c: 112:             OPTION_REGbits.PS2 = 1;
  1138  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1139  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1140  01EB  1501               	bsf	1,2	;volatile
  1141                           
  1142                           ;TMR.c: 113:             OPTION_REGbits.PS1 = 0;
  1143  01EC  1081               	bcf	1,1	;volatile
  1144                           
  1145                           ;TMR.c: 114:             OPTION_REGbits.PS0 = 1;
  1146  01ED  1401               	bsf	1,0	;volatile
  1147                           
  1148                           ;TMR.c: 115:             break;
  1149  01EE  2A22               	goto	l187
  1150  01EF                     l184:	
  1151                           ;TMR.c: 117:         case(6):
  1152                           
  1153                           
  1154                           ;TMR.c: 118:             OPTION_REGbits.PS2 = 1;
  1155  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1156  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1157  01F1  1501               	bsf	1,2	;volatile
  1158                           
  1159                           ;TMR.c: 119:             OPTION_REGbits.PS1 = 1;
  1160  01F2  1481               	bsf	1,1	;volatile
  1161                           
  1162                           ;TMR.c: 120:             OPTION_REGbits.PS0 = 0;
  1163  01F3  1001               	bcf	1,0	;volatile
  1164                           
  1165                           ;TMR.c: 121:             break;
  1166  01F4  2A22               	goto	l187
  1167  01F5                     l185:	
  1168                           ;TMR.c: 123:         case(7):
  1169                           
  1170                           
  1171                           ;TMR.c: 124:             OPTION_REGbits.PS2 = 1;
  1172  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1173  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  1174  01F7  1501               	bsf	1,2	;volatile
  1175                           
  1176                           ;TMR.c: 125:             OPTION_REGbits.PS1 = 1;
  1177  01F8  1481               	bsf	1,1	;volatile
  1178                           
  1179                           ;TMR.c: 126:             OPTION_REGbits.PS0 = 1;
  1180  01F9  1401               	bsf	1,0	;volatile
  1181                           
  1182                           ;TMR.c: 127:             break;
  1183  01FA  2A22               	goto	l187
  1184  01FB                     l186:	
  1185                           ;TMR.c: 129:         default:
  1186                           
  1187                           
  1188                           ;TMR.c: 130:             OPTION_REGbits.PS2 = 1;
  1189  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1190  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1191  01FD  1501               	bsf	1,2	;volatile
  1192                           
  1193                           ;TMR.c: 131:             OPTION_REGbits.PS1 = 1;
  1194  01FE  1481               	bsf	1,1	;volatile
  1195                           
  1196                           ;TMR.c: 132:             OPTION_REGbits.PS0 = 1;
  1197  01FF  1401               	bsf	1,0	;volatile
  1198                           
  1199                           ;TMR.c: 133:             break;
  1200  0200  2A22               	goto	l187
  1201  0201                     l1335:
  1202                           
  1203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 1, Range of values is 0 to 0
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte            4     3 (average)
  1209                           ; direct_byte           11     8 (fixed)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0203  0821               	movf	PRESCALER_TMR0@c+1,w
  1215  0204  3A00               	xorlw	0	; case 0
  1216  0205  1903               	skipnz
  1217  0206  2A08               	goto	l1553
  1218  0207  29FB               	goto	l186
  1219  0208                     l1553:
  1220                           
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 8, Range of values is 0 to 7
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte           25    13 (average)
  1226                           ; direct_byte           32     8 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  0208  0820               	movf	PRESCALER_TMR0@c,w
  1230  0209  3A00               	xorlw	0	; case 0
  1231  020A  1903               	skipnz
  1232  020B  29CB               	goto	l177
  1233  020C  3A01               	xorlw	1	; case 1
  1234  020D  1903               	skipnz
  1235  020E  29D1               	goto	l179
  1236  020F  3A03               	xorlw	3	; case 2
  1237  0210  1903               	skipnz
  1238  0211  29D7               	goto	l180
  1239  0212  3A01               	xorlw	1	; case 3
  1240  0213  1903               	skipnz
  1241  0214  29DD               	goto	l181
  1242  0215  3A07               	xorlw	7	; case 4
  1243  0216  1903               	skipnz
  1244  0217  29E3               	goto	l182
  1245  0218  3A01               	xorlw	1	; case 5
  1246  0219  1903               	skipnz
  1247  021A  29E9               	goto	l183
  1248  021B  3A03               	xorlw	3	; case 6
  1249  021C  1903               	skipnz
  1250  021D  29EF               	goto	l184
  1251  021E  3A01               	xorlw	1	; case 7
  1252  021F  1903               	skipnz
  1253  0220  29F5               	goto	l185
  1254  0221  29FB               	goto	l186
  1255  0222                     l187:
  1256  0222  0008               	return
  1257  0223                     __end_of_PRESCALER_TMR0:
  1258                           
  1259                           	psect	text3
  1260  0104                     __ptext3:	
  1261 ;; *************** function _OSCILLATOR *****************
  1262 ;; Defined at:
  1263 ;;		line 13 in file "TMR.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  c               1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  c               1    2[BANK0 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       1       0       0       0
  1279 ;;      Temps:          0       2       0       0       0
  1280 ;;      Totals:         0       3       0       0       0
  1281 ;;Total ram usage:        3 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 2
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_setup
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291  0104                     _OSCILLATOR:	
  1292                           ;psect for function _OSCILLATOR
  1293                           
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _OSCILLATOR: [wreg-fsr0h+status,2+status,0]
  1297                           ;OSCILLATOR@c stored from wreg
  1298  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0106  00A2               	movwf	OSCILLATOR@c
  1301  0107                     l1321:
  1302                           
  1303                           ;TMR.c: 14:     OSCCONbits.SCS =1;
  1304  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0109  140F               	bsf	15,0	;volatile
  1307                           
  1308                           ;TMR.c: 16:     switch(c){
  1309  010A  2941               	goto	l1325
  1310  010B                     l163:	
  1311                           ;TMR.c: 17:         case(1):
  1312                           
  1313                           
  1314                           ;TMR.c: 18:             OSCCONbits.IRCF2 =1;
  1315  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1316  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1317  010D  170F               	bsf	15,6	;volatile
  1318                           
  1319                           ;TMR.c: 19:             OSCCONbits.IRCF1 =1;
  1320  010E  168F               	bsf	15,5	;volatile
  1321                           
  1322                           ;TMR.c: 20:             OSCCONbits.IRCF0 =1;
  1323  010F  160F               	bsf	15,4	;volatile
  1324                           
  1325                           ;TMR.c: 21:             break;
  1326  0110  2965               	goto	l173
  1327  0111                     l165:	
  1328                           ;TMR.c: 23:         case(2):
  1329                           
  1330                           
  1331                           ;TMR.c: 24:             OSCCONbits.IRCF2 =1;
  1332  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0113  170F               	bsf	15,6	;volatile
  1335                           
  1336                           ;TMR.c: 25:             OSCCONbits.IRCF1 =1;
  1337  0114  168F               	bsf	15,5	;volatile
  1338                           
  1339                           ;TMR.c: 26:             OSCCONbits.IRCF0 =0;
  1340  0115  120F               	bcf	15,4	;volatile
  1341                           
  1342                           ;TMR.c: 27:             break;
  1343  0116  2965               	goto	l173
  1344  0117                     l166:	
  1345                           ;TMR.c: 29:         case(3):
  1346                           
  1347                           
  1348                           ;TMR.c: 30:             OSCCONbits.IRCF2 =1;
  1349  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1350  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1351  0119  170F               	bsf	15,6	;volatile
  1352                           
  1353                           ;TMR.c: 31:             OSCCONbits.IRCF1 =0;
  1354  011A  128F               	bcf	15,5	;volatile
  1355                           
  1356                           ;TMR.c: 32:             OSCCONbits.IRCF0 =1;
  1357  011B  160F               	bsf	15,4	;volatile
  1358                           
  1359                           ;TMR.c: 33:             break;
  1360  011C  2965               	goto	l173
  1361  011D                     l167:	
  1362                           ;TMR.c: 35:         case(4):
  1363                           
  1364                           
  1365                           ;TMR.c: 36:             OSCCONbits.IRCF2 =1;
  1366  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1367  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1368  011F  170F               	bsf	15,6	;volatile
  1369                           
  1370                           ;TMR.c: 37:             OSCCONbits.IRCF1 =0;
  1371  0120  128F               	bcf	15,5	;volatile
  1372                           
  1373                           ;TMR.c: 38:             OSCCONbits.IRCF0 =0;
  1374  0121  120F               	bcf	15,4	;volatile
  1375                           
  1376                           ;TMR.c: 39:             break;
  1377  0122  2965               	goto	l173
  1378  0123                     l168:	
  1379                           ;TMR.c: 41:         case(5):
  1380                           
  1381                           
  1382                           ;TMR.c: 42:             OSCCONbits.IRCF2 =0;
  1383  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1384  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1385  0125  130F               	bcf	15,6	;volatile
  1386                           
  1387                           ;TMR.c: 43:             OSCCONbits.IRCF1 =1;
  1388  0126  168F               	bsf	15,5	;volatile
  1389                           
  1390                           ;TMR.c: 44:             OSCCONbits.IRCF0 =1;
  1391  0127  160F               	bsf	15,4	;volatile
  1392                           
  1393                           ;TMR.c: 45:             break;
  1394  0128  2965               	goto	l173
  1395  0129                     l169:	
  1396                           ;TMR.c: 47:         case(6):
  1397                           
  1398                           
  1399                           ;TMR.c: 48:             OSCCONbits.IRCF2 =0;
  1400  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1401  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1402  012B  130F               	bcf	15,6	;volatile
  1403                           
  1404                           ;TMR.c: 49:             OSCCONbits.IRCF1 =1;
  1405  012C  168F               	bsf	15,5	;volatile
  1406                           
  1407                           ;TMR.c: 50:             OSCCONbits.IRCF0 =0;
  1408  012D  120F               	bcf	15,4	;volatile
  1409                           
  1410                           ;TMR.c: 51:             break;
  1411  012E  2965               	goto	l173
  1412  012F                     l170:	
  1413                           ;TMR.c: 53:         case(7):
  1414                           
  1415                           
  1416                           ;TMR.c: 54:             OSCCONbits.IRCF2 =0;
  1417  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0131  130F               	bcf	15,6	;volatile
  1420                           
  1421                           ;TMR.c: 55:             OSCCONbits.IRCF1 =0;
  1422  0132  128F               	bcf	15,5	;volatile
  1423                           
  1424                           ;TMR.c: 56:             OSCCONbits.IRCF0 =1;
  1425  0133  160F               	bsf	15,4	;volatile
  1426                           
  1427                           ;TMR.c: 57:             break;
  1428  0134  2965               	goto	l173
  1429  0135                     l171:	
  1430                           ;TMR.c: 59:         case(8):
  1431                           
  1432                           
  1433                           ;TMR.c: 60:             OSCCONbits.IRCF2 =0;
  1434  0135  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0136  1303               	bcf	3,6	;RP1=0, select bank1
  1436  0137  130F               	bcf	15,6	;volatile
  1437                           
  1438                           ;TMR.c: 61:             OSCCONbits.IRCF1 =0;
  1439  0138  128F               	bcf	15,5	;volatile
  1440                           
  1441                           ;TMR.c: 62:             OSCCONbits.IRCF0 =0;
  1442  0139  120F               	bcf	15,4	;volatile
  1443                           
  1444                           ;TMR.c: 63:             break;
  1445  013A  2965               	goto	l173
  1446  013B                     l172:	
  1447                           ;TMR.c: 65:         default:
  1448                           
  1449                           
  1450                           ;TMR.c: 66:             OSCCONbits.IRCF2 =1;
  1451  013B  1683               	bsf	3,5	;RP0=1, select bank1
  1452  013C  1303               	bcf	3,6	;RP1=0, select bank1
  1453  013D  170F               	bsf	15,6	;volatile
  1454                           
  1455                           ;TMR.c: 67:             OSCCONbits.IRCF1 =1;
  1456  013E  168F               	bsf	15,5	;volatile
  1457                           
  1458                           ;TMR.c: 68:             OSCCONbits.IRCF0 =0;
  1459  013F  120F               	bcf	15,4	;volatile
  1460                           
  1461                           ;TMR.c: 69:             break;
  1462  0140  2965               	goto	l173
  1463  0141                     l1325:
  1464  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0143  0822               	movf	OSCILLATOR@c,w
  1467  0144  00A0               	movwf	??_OSCILLATOR
  1468  0145  01A1               	clrf	??_OSCILLATOR+1
  1469                           
  1470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 1, Range of values is 0 to 0
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            4     3 (average)
  1476                           ; direct_byte           11     8 (fixed)
  1477                           ; jumptable            260     6 (fixed)
  1478                           ;	Chosen strategy is simple_byte
  1479  0146  0821               	movf	??_OSCILLATOR+1,w
  1480  0147  3A00               	xorlw	0	; case 0
  1481  0148  1903               	skipnz
  1482  0149  294B               	goto	l1555
  1483  014A  293B               	goto	l172
  1484  014B                     l1555:
  1485                           
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 8, Range of values is 1 to 8
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           25    13 (average)
  1491                           ; direct_byte           35    11 (fixed)
  1492                           ; jumptable            263     9 (fixed)
  1493                           ;	Chosen strategy is simple_byte
  1494  014B  0820               	movf	??_OSCILLATOR,w
  1495  014C  3A01               	xorlw	1	; case 1
  1496  014D  1903               	skipnz
  1497  014E  290B               	goto	l163
  1498  014F  3A03               	xorlw	3	; case 2
  1499  0150  1903               	skipnz
  1500  0151  2911               	goto	l165
  1501  0152  3A01               	xorlw	1	; case 3
  1502  0153  1903               	skipnz
  1503  0154  2917               	goto	l166
  1504  0155  3A07               	xorlw	7	; case 4
  1505  0156  1903               	skipnz
  1506  0157  291D               	goto	l167
  1507  0158  3A01               	xorlw	1	; case 5
  1508  0159  1903               	skipnz
  1509  015A  2923               	goto	l168
  1510  015B  3A03               	xorlw	3	; case 6
  1511  015C  1903               	skipnz
  1512  015D  2929               	goto	l169
  1513  015E  3A01               	xorlw	1	; case 7
  1514  015F  1903               	skipnz
  1515  0160  292F               	goto	l170
  1516  0161  3A0F               	xorlw	15	; case 8
  1517  0162  1903               	skipnz
  1518  0163  2935               	goto	l171
  1519  0164  293B               	goto	l172
  1520  0165                     l173:
  1521  0165  0008               	return
  1522  0166                     __end_of_OSCILLATOR:
  1523                           
  1524                           	psect	text4
  1525  02F5                     __ptext4:	
  1526 ;; *************** function _IOC_INT *****************
  1527 ;; Defined at:
  1528 ;;		line 12 in file "PUSH.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  a               1    wreg     unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  a               1    0[BANK0 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       1       0       0       0
  1544 ;;      Temps:          0       0       0       0       0
  1545 ;;      Totals:         0       1       0       0       0
  1546 ;;Total ram usage:        1 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 2
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_setup
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556  02F5                     _IOC_INT:	
  1557                           ;psect for function _IOC_INT
  1558                           
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _IOC_INT: [wreg]
  1562                           ;IOC_INT@a stored from wreg
  1563  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1564  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1565  02F7  00A0               	movwf	IOC_INT@a
  1566  02F8                     l1341:
  1567                           
  1568                           ;PUSH.c: 15:     OPTION_REGbits.nRBPU = 0;
  1569  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  1570  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  1571  02FA  1381               	bcf	1,7	;volatile
  1572  02FB                     l1343:
  1573                           
  1574                           ;PUSH.c: 16:     WPUBbits.WPUB = a;
  1575  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1576  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1577  02FD  0820               	movf	IOC_INT@a,w
  1578  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  1579  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0300  0095               	movwf	21	;volatile
  1581                           
  1582                           ;PUSH.c: 17:     IOCBbits.IOCB = a;
  1583  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0303  0820               	movf	IOC_INT@a,w
  1586  0304  1683               	bsf	3,5	;RP0=1, select bank1
  1587  0305  1303               	bcf	3,6	;RP1=0, select bank1
  1588  0306  0096               	movwf	22	;volatile
  1589  0307                     l109:
  1590  0307  0008               	return
  1591  0308                     __end_of_IOC_INT:
  1592                           
  1593                           	psect	text5
  1594  001B                     __ptext5:	
  1595 ;; *************** function _ADC_INIT *****************
  1596 ;; Defined at:
  1597 ;;		line 24 in file "ADC.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  c               2    0[BANK0 ] int 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       2       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0
  1614 ;;      Totals:         0       2       0       0       0
  1615 ;;Total ram usage:        2 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 2
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_setup
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625  001B                     _ADC_INIT:	
  1626                           ;psect for function _ADC_INIT
  1627                           
  1628  001B                     l1345:	
  1629                           ;incstack = 0
  1630                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
  1631                           
  1632                           
  1633                           ;ADC.c: 25:     switch(c){
  1634  001B  2867               	goto	l1349
  1635  001C                     l123:	
  1636                           ;ADC.c: 26:         case 0:
  1637                           
  1638                           
  1639                           ;ADC.c: 27:             ADCON0bits.CHS3 = 0;
  1640  001C  129F               	bcf	31,5	;volatile
  1641                           
  1642                           ;ADC.c: 28:             ADCON0bits.CHS2 = 0;
  1643  001D  121F               	bcf	31,4	;volatile
  1644                           
  1645                           ;ADC.c: 29:             ADCON0bits.CHS1 = 0;
  1646  001E  119F               	bcf	31,3	;volatile
  1647                           
  1648                           ;ADC.c: 30:             ADCON0bits.CHS0 = 0;
  1649  001F  111F               	bcf	31,2	;volatile
  1650                           
  1651                           ;ADC.c: 31:             break;
  1652  0020  289A               	goto	l139
  1653  0021                     l125:	
  1654                           ;ADC.c: 33:         case 1:
  1655                           
  1656                           
  1657                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
  1658  0021  129F               	bcf	31,5	;volatile
  1659                           
  1660                           ;ADC.c: 35:             ADCON0bits.CHS2 = 0;
  1661  0022  121F               	bcf	31,4	;volatile
  1662                           
  1663                           ;ADC.c: 36:             ADCON0bits.CHS1 = 0;
  1664  0023  119F               	bcf	31,3	;volatile
  1665                           
  1666                           ;ADC.c: 37:             ADCON0bits.CHS0 = 1;
  1667  0024  151F               	bsf	31,2	;volatile
  1668                           
  1669                           ;ADC.c: 38:             break;
  1670  0025  289A               	goto	l139
  1671  0026                     l126:	
  1672                           ;ADC.c: 40:         case 2:
  1673                           
  1674                           
  1675                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  1676  0026  129F               	bcf	31,5	;volatile
  1677                           
  1678                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  1679  0027  121F               	bcf	31,4	;volatile
  1680                           
  1681                           ;ADC.c: 43:             ADCON0bits.CHS1 = 1;
  1682  0028  159F               	bsf	31,3	;volatile
  1683                           
  1684                           ;ADC.c: 44:             ADCON0bits.CHS0 = 0;
  1685  0029  111F               	bcf	31,2	;volatile
  1686                           
  1687                           ;ADC.c: 45:             break;
  1688  002A  289A               	goto	l139
  1689  002B                     l127:	
  1690                           ;ADC.c: 47:         case 3:
  1691                           
  1692                           
  1693                           ;ADC.c: 48:             ADCON0bits.CHS3 = 0;
  1694  002B  129F               	bcf	31,5	;volatile
  1695                           
  1696                           ;ADC.c: 49:             ADCON0bits.CHS2 = 0;
  1697  002C  121F               	bcf	31,4	;volatile
  1698                           
  1699                           ;ADC.c: 50:             ADCON0bits.CHS1 = 1;
  1700  002D  159F               	bsf	31,3	;volatile
  1701                           
  1702                           ;ADC.c: 51:             ADCON0bits.CHS0 = 1;
  1703  002E  151F               	bsf	31,2	;volatile
  1704                           
  1705                           ;ADC.c: 52:             break;
  1706  002F  289A               	goto	l139
  1707  0030                     l128:	
  1708                           ;ADC.c: 54:         case 4:
  1709                           
  1710                           
  1711                           ;ADC.c: 55:             ADCON0bits.CHS3 = 0;
  1712  0030  129F               	bcf	31,5	;volatile
  1713                           
  1714                           ;ADC.c: 56:             ADCON0bits.CHS2 = 1;
  1715  0031  161F               	bsf	31,4	;volatile
  1716                           
  1717                           ;ADC.c: 57:             ADCON0bits.CHS1 = 0;
  1718  0032  119F               	bcf	31,3	;volatile
  1719                           
  1720                           ;ADC.c: 58:             ADCON0bits.CHS0 = 0;
  1721  0033  111F               	bcf	31,2	;volatile
  1722                           
  1723                           ;ADC.c: 59:             break;
  1724  0034  289A               	goto	l139
  1725  0035                     l129:	
  1726                           ;ADC.c: 61:         case 5:
  1727                           
  1728                           
  1729                           ;ADC.c: 62:             ADCON0bits.CHS3 = 0;
  1730  0035  129F               	bcf	31,5	;volatile
  1731                           
  1732                           ;ADC.c: 63:             ADCON0bits.CHS2 = 1;
  1733  0036  161F               	bsf	31,4	;volatile
  1734                           
  1735                           ;ADC.c: 64:             ADCON0bits.CHS1 = 0;
  1736  0037  119F               	bcf	31,3	;volatile
  1737                           
  1738                           ;ADC.c: 65:             ADCON0bits.CHS0 = 1;
  1739  0038  151F               	bsf	31,2	;volatile
  1740                           
  1741                           ;ADC.c: 66:             break;
  1742  0039  289A               	goto	l139
  1743  003A                     l130:	
  1744                           ;ADC.c: 68:         case 6:
  1745                           
  1746                           
  1747                           ;ADC.c: 69:             ADCON0bits.CHS3 = 0;
  1748  003A  129F               	bcf	31,5	;volatile
  1749                           
  1750                           ;ADC.c: 70:             ADCON0bits.CHS2 = 1;
  1751  003B  161F               	bsf	31,4	;volatile
  1752                           
  1753                           ;ADC.c: 71:             ADCON0bits.CHS1 = 1;
  1754  003C  159F               	bsf	31,3	;volatile
  1755                           
  1756                           ;ADC.c: 72:             ADCON0bits.CHS0 = 0;
  1757  003D  111F               	bcf	31,2	;volatile
  1758                           
  1759                           ;ADC.c: 73:             break;
  1760  003E  289A               	goto	l139
  1761  003F                     l131:	
  1762                           ;ADC.c: 75:         case 7:
  1763                           
  1764                           
  1765                           ;ADC.c: 76:             ADCON0bits.CHS3 = 0;
  1766  003F  129F               	bcf	31,5	;volatile
  1767                           
  1768                           ;ADC.c: 77:             ADCON0bits.CHS2 = 1;
  1769  0040  161F               	bsf	31,4	;volatile
  1770                           
  1771                           ;ADC.c: 78:             ADCON0bits.CHS1 = 1;
  1772  0041  159F               	bsf	31,3	;volatile
  1773                           
  1774                           ;ADC.c: 79:             ADCON0bits.CHS0 = 1;
  1775  0042  151F               	bsf	31,2	;volatile
  1776                           
  1777                           ;ADC.c: 80:             break;
  1778  0043  289A               	goto	l139
  1779  0044                     l132:	
  1780                           ;ADC.c: 82:         case 8:
  1781                           
  1782                           
  1783                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  1784  0044  169F               	bsf	31,5	;volatile
  1785                           
  1786                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  1787  0045  121F               	bcf	31,4	;volatile
  1788                           
  1789                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  1790  0046  119F               	bcf	31,3	;volatile
  1791                           
  1792                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  1793  0047  111F               	bcf	31,2	;volatile
  1794                           
  1795                           ;ADC.c: 87:             break;
  1796  0048  289A               	goto	l139
  1797  0049                     l133:	
  1798                           ;ADC.c: 89:         case 9:
  1799                           
  1800                           
  1801                           ;ADC.c: 90:             ADCON0bits.CHS3 = 1;
  1802  0049  169F               	bsf	31,5	;volatile
  1803                           
  1804                           ;ADC.c: 91:             ADCON0bits.CHS2 = 0;
  1805  004A  121F               	bcf	31,4	;volatile
  1806                           
  1807                           ;ADC.c: 92:             ADCON0bits.CHS1 = 0;
  1808  004B  119F               	bcf	31,3	;volatile
  1809                           
  1810                           ;ADC.c: 93:             ADCON0bits.CHS0 = 1;
  1811  004C  151F               	bsf	31,2	;volatile
  1812                           
  1813                           ;ADC.c: 94:             break;
  1814  004D  289A               	goto	l139
  1815  004E                     l134:	
  1816                           ;ADC.c: 96:         case 10:
  1817                           
  1818                           
  1819                           ;ADC.c: 97:             ADCON0bits.CHS3 = 1;
  1820  004E  169F               	bsf	31,5	;volatile
  1821                           
  1822                           ;ADC.c: 98:             ADCON0bits.CHS2 = 0;
  1823  004F  121F               	bcf	31,4	;volatile
  1824                           
  1825                           ;ADC.c: 99:             ADCON0bits.CHS1 = 1;
  1826  0050  159F               	bsf	31,3	;volatile
  1827                           
  1828                           ;ADC.c: 100:             ADCON0bits.CHS0 = 0;
  1829  0051  111F               	bcf	31,2	;volatile
  1830                           
  1831                           ;ADC.c: 101:             break;
  1832  0052  289A               	goto	l139
  1833  0053                     l135:	
  1834                           ;ADC.c: 103:         case 11:
  1835                           
  1836                           
  1837                           ;ADC.c: 104:             ADCON0bits.CHS3 = 1;
  1838  0053  169F               	bsf	31,5	;volatile
  1839                           
  1840                           ;ADC.c: 105:             ADCON0bits.CHS2 = 0;
  1841  0054  121F               	bcf	31,4	;volatile
  1842                           
  1843                           ;ADC.c: 106:             ADCON0bits.CHS1 = 1;
  1844  0055  159F               	bsf	31,3	;volatile
  1845                           
  1846                           ;ADC.c: 107:             ADCON0bits.CHS0 = 1;
  1847  0056  151F               	bsf	31,2	;volatile
  1848                           
  1849                           ;ADC.c: 108:             break;
  1850  0057  289A               	goto	l139
  1851  0058                     l136:	
  1852                           ;ADC.c: 110:         case 12:
  1853                           
  1854                           
  1855                           ;ADC.c: 111:             ADCON0bits.CHS3 = 1;
  1856  0058  169F               	bsf	31,5	;volatile
  1857                           
  1858                           ;ADC.c: 112:             ADCON0bits.CHS2 = 1;
  1859  0059  161F               	bsf	31,4	;volatile
  1860                           
  1861                           ;ADC.c: 113:             ADCON0bits.CHS1 = 0;
  1862  005A  119F               	bcf	31,3	;volatile
  1863                           
  1864                           ;ADC.c: 114:             ADCON0bits.CHS0 = 0;
  1865  005B  111F               	bcf	31,2	;volatile
  1866                           
  1867                           ;ADC.c: 115:             break;
  1868  005C  289A               	goto	l139
  1869  005D                     l137:	
  1870                           ;ADC.c: 117:         case 13:
  1871                           
  1872                           
  1873                           ;ADC.c: 118:             ADCON0bits.CHS3 = 1;
  1874  005D  169F               	bsf	31,5	;volatile
  1875                           
  1876                           ;ADC.c: 119:             ADCON0bits.CHS2 = 1;
  1877  005E  161F               	bsf	31,4	;volatile
  1878                           
  1879                           ;ADC.c: 120:             ADCON0bits.CHS1 = 0;
  1880  005F  119F               	bcf	31,3	;volatile
  1881                           
  1882                           ;ADC.c: 121:             ADCON0bits.CHS0 = 1;
  1883  0060  151F               	bsf	31,2	;volatile
  1884                           
  1885                           ;ADC.c: 122:             break;
  1886  0061  289A               	goto	l139
  1887  0062                     l138:	
  1888                           ;ADC.c: 124:         default:
  1889                           
  1890                           
  1891                           ;ADC.c: 125:             ADCON0bits.CHS3 = 0;
  1892  0062  129F               	bcf	31,5	;volatile
  1893                           
  1894                           ;ADC.c: 126:             ADCON0bits.CHS2 = 0;
  1895  0063  121F               	bcf	31,4	;volatile
  1896                           
  1897                           ;ADC.c: 127:             ADCON0bits.CHS1 = 0;
  1898  0064  119F               	bcf	31,3	;volatile
  1899                           
  1900                           ;ADC.c: 128:             ADCON0bits.CHS0 = 0;
  1901  0065  111F               	bcf	31,2	;volatile
  1902                           
  1903                           ;ADC.c: 129:             break;
  1904  0066  289A               	goto	l139
  1905  0067                     l1349:
  1906                           
  1907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1908                           ; Switch size 1, requested type "simple"
  1909                           ; Number of cases is 1, Range of values is 0 to 0
  1910                           ; switch strategies available:
  1911                           ; Name         Instructions Cycles
  1912                           ; simple_byte            4     3 (average)
  1913                           ; direct_byte           11     8 (fixed)
  1914                           ; jumptable            260     6 (fixed)
  1915                           ;	Chosen strategy is simple_byte
  1916  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0069  0821               	movf	ADC_INIT@c+1,w
  1919  006A  3A00               	xorlw	0	; case 0
  1920  006B  1903               	skipnz
  1921  006C  286E               	goto	l1557
  1922  006D  2862               	goto	l138
  1923  006E                     l1557:
  1924                           
  1925                           ; Switch size 1, requested type "simple"
  1926                           ; Number of cases is 14, Range of values is 0 to 13
  1927                           ; switch strategies available:
  1928                           ; Name         Instructions Cycles
  1929                           ; simple_byte           43    22 (average)
  1930                           ; direct_byte           50     8 (fixed)
  1931                           ; jumptable            260     6 (fixed)
  1932                           ;	Chosen strategy is simple_byte
  1933  006E  0820               	movf	ADC_INIT@c,w
  1934  006F  3A00               	xorlw	0	; case 0
  1935  0070  1903               	skipnz
  1936  0071  281C               	goto	l123
  1937  0072  3A01               	xorlw	1	; case 1
  1938  0073  1903               	skipnz
  1939  0074  2821               	goto	l125
  1940  0075  3A03               	xorlw	3	; case 2
  1941  0076  1903               	skipnz
  1942  0077  2826               	goto	l126
  1943  0078  3A01               	xorlw	1	; case 3
  1944  0079  1903               	skipnz
  1945  007A  282B               	goto	l127
  1946  007B  3A07               	xorlw	7	; case 4
  1947  007C  1903               	skipnz
  1948  007D  2830               	goto	l128
  1949  007E  3A01               	xorlw	1	; case 5
  1950  007F  1903               	skipnz
  1951  0080  2835               	goto	l129
  1952  0081  3A03               	xorlw	3	; case 6
  1953  0082  1903               	skipnz
  1954  0083  283A               	goto	l130
  1955  0084  3A01               	xorlw	1	; case 7
  1956  0085  1903               	skipnz
  1957  0086  283F               	goto	l131
  1958  0087  3A0F               	xorlw	15	; case 8
  1959  0088  1903               	skipnz
  1960  0089  2844               	goto	l132
  1961  008A  3A01               	xorlw	1	; case 9
  1962  008B  1903               	skipnz
  1963  008C  2849               	goto	l133
  1964  008D  3A03               	xorlw	3	; case 10
  1965  008E  1903               	skipnz
  1966  008F  284E               	goto	l134
  1967  0090  3A01               	xorlw	1	; case 11
  1968  0091  1903               	skipnz
  1969  0092  2853               	goto	l135
  1970  0093  3A07               	xorlw	7	; case 12
  1971  0094  1903               	skipnz
  1972  0095  2858               	goto	l136
  1973  0096  3A01               	xorlw	1	; case 13
  1974  0097  1903               	skipnz
  1975  0098  285D               	goto	l137
  1976  0099  2862               	goto	l138
  1977  009A                     l139:
  1978  009A  0008               	return
  1979  009B                     __end_of_ADC_INIT:
  1980                           
  1981                           	psect	text6
  1982  02C3                     __ptext6:	
  1983 ;; *************** function _UNIDAD *****************
  1984 ;; Defined at:
  1985 ;;		line 19 in file "ADC.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  c               1    wreg     unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  c               1   12[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      unsigned char 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         0       1       0       0       0
  2001 ;;      Temps:          0       3       0       0       0
  2002 ;;      Totals:         0       4       0       0       0
  2003 ;;Total ram usage:        4 bytes
  2004 ;; Hardware stack levels used: 1
  2005 ;; Hardware stack levels required when called: 3
  2006 ;; This function calls:
  2007 ;;		___awdiv
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013  02C3                     _UNIDAD:	
  2014                           ;psect for function _UNIDAD
  2015                           
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _UNIDAD: [wreg+status,2+status,0+pclath+cstack]
  2019                           ;UNIDAD@c stored from wreg
  2020  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2021  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2022  02C5  00AC               	movwf	UNIDAD@c
  2023  02C6                     l1471:
  2024                           
  2025                           ;ADC.c: 20:     c = (uint8_t)((c/16) % 16);
  2026  02C6  3010               	movlw	16
  2027  02C7  00A0               	movwf	___awdiv@divisor
  2028  02C8  3000               	movlw	0
  2029  02C9  00A1               	movwf	___awdiv@divisor+1
  2030  02CA  082C               	movf	UNIDAD@c,w
  2031  02CB  00A9               	movwf	??_UNIDAD
  2032  02CC  01AA               	clrf	??_UNIDAD+1
  2033  02CD  0829               	movf	??_UNIDAD,w
  2034  02CE  00A2               	movwf	___awdiv@dividend
  2035  02CF  082A               	movf	??_UNIDAD+1,w
  2036  02D0  00A3               	movwf	___awdiv@dividend+1
  2037  02D1  120A  118A  209B  120A  118A  	fcall	___awdiv
  2038  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2039  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2040  02D8  0820               	movf	?___awdiv,w
  2041  02D9  390F               	andlw	15
  2042  02DA  00AB               	movwf	??_UNIDAD+2
  2043  02DB  082B               	movf	??_UNIDAD+2,w
  2044  02DC  00AC               	movwf	UNIDAD@c
  2045  02DD                     l1473:
  2046                           
  2047                           ;ADC.c: 21:     return c;
  2048  02DD  082C               	movf	UNIDAD@c,w
  2049  02DE                     l119:
  2050  02DE  0008               	return
  2051  02DF                     __end_of_UNIDAD:
  2052                           
  2053                           	psect	text7
  2054  009B                     __ptext7:	
  2055 ;; *************** function ___awdiv *****************
  2056 ;; Defined at:
  2057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  divisor         2    0[BANK0 ] int 
  2060 ;;  dividend        2    2[BANK0 ] int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  quotient        2    7[BANK0 ] int 
  2063 ;;  sign            1    6[BANK0 ] unsigned char 
  2064 ;;  counter         1    5[BANK0 ] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  2    0[BANK0 ] int 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       4       0       0       0
  2075 ;;      Locals:         0       4       0       0       0
  2076 ;;      Temps:          0       1       0       0       0
  2077 ;;      Totals:         0       9       0       0       0
  2078 ;;Total ram usage:        9 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 2
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_UNIDAD
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088  009B                     ___awdiv:	
  2089                           ;psect for function ___awdiv
  2090                           
  2091  009B                     l1355:	
  2092                           ;incstack = 0
  2093                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2094                           
  2095  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2096  009C  1303               	bcf	3,6	;RP1=0, select bank0
  2097  009D  01A6               	clrf	___awdiv@sign
  2098  009E                     l1357:
  2099  009E  1FA1               	btfss	___awdiv@divisor+1,7
  2100  009F  28A1               	goto	u491
  2101  00A0  28A2               	goto	u490
  2102  00A1                     u491:
  2103  00A1  28A9               	goto	l1363
  2104  00A2                     u490:
  2105  00A2                     l1359:
  2106  00A2  09A0               	comf	___awdiv@divisor,f
  2107  00A3  09A1               	comf	___awdiv@divisor+1,f
  2108  00A4  0AA0               	incf	___awdiv@divisor,f
  2109  00A5  1903               	skipnz
  2110  00A6  0AA1               	incf	___awdiv@divisor+1,f
  2111  00A7                     l1361:
  2112  00A7  01A6               	clrf	___awdiv@sign
  2113  00A8  0AA6               	incf	___awdiv@sign,f
  2114  00A9                     l1363:
  2115  00A9  1FA3               	btfss	___awdiv@dividend+1,7
  2116  00AA  28AC               	goto	u501
  2117  00AB  28AD               	goto	u500
  2118  00AC                     u501:
  2119  00AC  28B6               	goto	l1369
  2120  00AD                     u500:
  2121  00AD                     l1365:
  2122  00AD  09A2               	comf	___awdiv@dividend,f
  2123  00AE  09A3               	comf	___awdiv@dividend+1,f
  2124  00AF  0AA2               	incf	___awdiv@dividend,f
  2125  00B0  1903               	skipnz
  2126  00B1  0AA3               	incf	___awdiv@dividend+1,f
  2127  00B2                     l1367:
  2128  00B2  3001               	movlw	1
  2129  00B3  00A4               	movwf	??___awdiv
  2130  00B4  0824               	movf	??___awdiv,w
  2131  00B5  06A6               	xorwf	___awdiv@sign,f
  2132  00B6                     l1369:
  2133  00B6  01A7               	clrf	___awdiv@quotient
  2134  00B7  01A8               	clrf	___awdiv@quotient+1
  2135  00B8                     l1371:
  2136  00B8  0820               	movf	___awdiv@divisor,w
  2137  00B9  0421               	iorwf	___awdiv@divisor+1,w
  2138  00BA  1903               	btfsc	3,2
  2139  00BB  28BD               	goto	u511
  2140  00BC  28BE               	goto	u510
  2141  00BD                     u511:
  2142  00BD  28F5               	goto	l1391
  2143  00BE                     u510:
  2144  00BE                     l1373:
  2145  00BE  01A5               	clrf	___awdiv@counter
  2146  00BF  0AA5               	incf	___awdiv@counter,f
  2147  00C0  28CC               	goto	l1379
  2148  00C1                     l1375:
  2149  00C1  3001               	movlw	1
  2150  00C2                     u525:
  2151  00C2  1003               	clrc
  2152  00C3  0DA0               	rlf	___awdiv@divisor,f
  2153  00C4  0DA1               	rlf	___awdiv@divisor+1,f
  2154  00C5  3EFF               	addlw	-1
  2155  00C6  1D03               	skipz
  2156  00C7  28C2               	goto	u525
  2157  00C8                     l1377:
  2158  00C8  3001               	movlw	1
  2159  00C9  00A4               	movwf	??___awdiv
  2160  00CA  0824               	movf	??___awdiv,w
  2161  00CB  07A5               	addwf	___awdiv@counter,f
  2162  00CC                     l1379:
  2163  00CC  1FA1               	btfss	___awdiv@divisor+1,7
  2164  00CD  28CF               	goto	u531
  2165  00CE  28D0               	goto	u530
  2166  00CF                     u531:
  2167  00CF  28C1               	goto	l1375
  2168  00D0                     u530:
  2169  00D0                     l1381:
  2170  00D0  3001               	movlw	1
  2171  00D1                     u545:
  2172  00D1  1003               	clrc
  2173  00D2  0DA7               	rlf	___awdiv@quotient,f
  2174  00D3  0DA8               	rlf	___awdiv@quotient+1,f
  2175  00D4  3EFF               	addlw	-1
  2176  00D5  1D03               	skipz
  2177  00D6  28D1               	goto	u545
  2178  00D7  0821               	movf	___awdiv@divisor+1,w
  2179  00D8  0223               	subwf	___awdiv@dividend+1,w
  2180  00D9  1D03               	skipz
  2181  00DA  28DD               	goto	u555
  2182  00DB  0820               	movf	___awdiv@divisor,w
  2183  00DC  0222               	subwf	___awdiv@dividend,w
  2184  00DD                     u555:
  2185  00DD  1C03               	skipc
  2186  00DE  28E0               	goto	u551
  2187  00DF  28E1               	goto	u550
  2188  00E0                     u551:
  2189  00E0  28E8               	goto	l1387
  2190  00E1                     u550:
  2191  00E1                     l1383:
  2192  00E1  0820               	movf	___awdiv@divisor,w
  2193  00E2  02A2               	subwf	___awdiv@dividend,f
  2194  00E3  0821               	movf	___awdiv@divisor+1,w
  2195  00E4  1C03               	skipc
  2196  00E5  03A3               	decf	___awdiv@dividend+1,f
  2197  00E6  02A3               	subwf	___awdiv@dividend+1,f
  2198  00E7                     l1385:
  2199  00E7  1427               	bsf	___awdiv@quotient,0
  2200  00E8                     l1387:
  2201  00E8  3001               	movlw	1
  2202  00E9                     u565:
  2203  00E9  1003               	clrc
  2204  00EA  0CA1               	rrf	___awdiv@divisor+1,f
  2205  00EB  0CA0               	rrf	___awdiv@divisor,f
  2206  00EC  3EFF               	addlw	-1
  2207  00ED  1D03               	skipz
  2208  00EE  28E9               	goto	u565
  2209  00EF                     l1389:
  2210  00EF  3001               	movlw	1
  2211  00F0  02A5               	subwf	___awdiv@counter,f
  2212  00F1  1D03               	btfss	3,2
  2213  00F2  28F4               	goto	u571
  2214  00F3  28F5               	goto	u570
  2215  00F4                     u571:
  2216  00F4  28D0               	goto	l1381
  2217  00F5                     u570:
  2218  00F5                     l1391:
  2219  00F5  0826               	movf	___awdiv@sign,w
  2220  00F6  1903               	btfsc	3,2
  2221  00F7  28F9               	goto	u581
  2222  00F8  28FA               	goto	u580
  2223  00F9                     u581:
  2224  00F9  28FF               	goto	l1395
  2225  00FA                     u580:
  2226  00FA                     l1393:
  2227  00FA  09A7               	comf	___awdiv@quotient,f
  2228  00FB  09A8               	comf	___awdiv@quotient+1,f
  2229  00FC  0AA7               	incf	___awdiv@quotient,f
  2230  00FD  1903               	skipnz
  2231  00FE  0AA8               	incf	___awdiv@quotient+1,f
  2232  00FF                     l1395:
  2233  00FF  0828               	movf	___awdiv@quotient+1,w
  2234  0100  00A1               	movwf	?___awdiv+1
  2235  0101  0827               	movf	___awdiv@quotient,w
  2236  0102  00A0               	movwf	?___awdiv
  2237  0103                     l426:
  2238  0103  0008               	return
  2239  0104                     __end_of___awdiv:
  2240                           
  2241                           	psect	text8
  2242  0308                     __ptext8:	
  2243 ;; *************** function _DECENA *****************
  2244 ;; Defined at:
  2245 ;;		line 14 in file "ADC.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  c               1    wreg     unsigned char 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  c               1    1[BANK0 ] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      unsigned char 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       1       0       0       0
  2261 ;;      Temps:          0       1       0       0       0
  2262 ;;      Totals:         0       2       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 2
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273  0308                     _DECENA:	
  2274                           ;psect for function _DECENA
  2275                           
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _DECENA: [wreg+status,2]
  2279                           ;DECENA@c stored from wreg
  2280  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2282  030A  00A1               	movwf	DECENA@c
  2283  030B                     l1465:
  2284                           
  2285                           ;ADC.c: 15:     c = (uint8_t)(c % 16);
  2286  030B  0821               	movf	DECENA@c,w
  2287  030C  390F               	andlw	15
  2288  030D  00A0               	movwf	??_DECENA
  2289  030E  0820               	movf	??_DECENA,w
  2290  030F  00A1               	movwf	DECENA@c
  2291  0310                     l1467:
  2292                           
  2293                           ;ADC.c: 16:     return c;
  2294  0310  0821               	movf	DECENA@c,w
  2295  0311                     l116:
  2296  0311  0008               	return
  2297  0312                     __end_of_DECENA:
  2298                           
  2299                           	psect	text9
  2300  0312                     __ptext9:	
  2301 ;; *************** function _ADC_READ *****************
  2302 ;; Defined at:
  2303 ;;		line 133 in file "ADC.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2    0[BANK0 ] int 
  2310 ;; Registers used:
  2311 ;;		wreg
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       2       0       0       0
  2318 ;;      Locals:         0       0       0       0       0
  2319 ;;      Temps:          0       2       0       0       0
  2320 ;;      Totals:         0       4       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 2
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331  0312                     _ADC_READ:	
  2332                           ;psect for function _ADC_READ
  2333                           
  2334  0312                     l1461:	
  2335                           ;incstack = 0
  2336                           ; Regs used in _ADC_READ: [wreg]
  2337                           
  2338                           
  2339                           ;ADC.c: 137:             return ADRESH;
  2340  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0314  081E               	movf	30,w	;volatile
  2343  0315  00A2               	movwf	??_ADC_READ
  2344  0316  01A3               	clrf	??_ADC_READ+1
  2345  0317  0822               	movf	??_ADC_READ,w
  2346  0318  00A0               	movwf	?_ADC_READ
  2347  0319  0823               	movf	??_ADC_READ+1,w
  2348  031A  00A1               	movwf	?_ADC_READ+1
  2349  031B                     l142:
  2350  031B  0008               	return
  2351  031C                     __end_of_ADC_READ:
  2352                           
  2353                           	psect	text10
  2354  0166                     __ptext10:	
  2355 ;; *************** function _isr *****************
  2356 ;; Defined at:
  2357 ;;		line 58 in file "MAIN.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          5       0       0       0       0
  2374 ;;      Totals:         5       0       0       0       0
  2375 ;;Total ram usage:        5 bytes
  2376 ;; Hardware stack levels used: 2
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		Interrupt level 1
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  0166                     _isr:	
  2385                           ;psect for function _isr
  2386                           
  2387  0166                     i1l1205:
  2388                           
  2389                           ;MAIN.c: 60:     if (RBIF==1){
  2390  0166  1C0B               	btfss	11,0	;volatile
  2391  0167  2969               	goto	u37_21
  2392  0168  296A               	goto	u37_20
  2393  0169                     u37_21:
  2394  0169  2985               	goto	i1l75
  2395  016A                     u37_20:
  2396  016A                     i1l1207:
  2397                           
  2398                           ;MAIN.c: 61:         if (RB0==0){
  2399  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2400  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2401  016C  1806               	btfsc	6,0	;volatile
  2402  016D  296F               	goto	u38_21
  2403  016E  2970               	goto	u38_20
  2404  016F                     u38_21:
  2405  016F  2979               	goto	i1l76
  2406  0170                     u38_20:
  2407  0170                     i1l1209:
  2408                           
  2409                           ;MAIN.c: 62:             if (RB0==0){
  2410  0170  1806               	btfsc	6,0	;volatile
  2411  0171  2973               	goto	u39_21
  2412  0172  2974               	goto	u39_20
  2413  0173                     u39_21:
  2414  0173  2983               	goto	i1l1217
  2415  0174                     u39_20:
  2416  0174                     i1l1211:
  2417                           
  2418                           ;MAIN.c: 63:                 PORTA++;
  2419  0174  3001               	movlw	1
  2420  0175  00F0               	movwf	??_isr
  2421  0176  0870               	movf	??_isr,w
  2422  0177  0785               	addwf	5,f	;volatile
  2423  0178  2983               	goto	i1l1217
  2424  0179                     i1l76:
  2425  0179  1886               	btfsc	6,1	;volatile
  2426  017A  297C               	goto	u40_21
  2427  017B  297D               	goto	u40_20
  2428  017C                     u40_21:
  2429  017C  2983               	goto	i1l1217
  2430  017D                     u40_20:
  2431  017D                     i1l1213:
  2432                           
  2433                           ;MAIN.c: 66:             if (RB1==0){
  2434  017D  1886               	btfsc	6,1	;volatile
  2435  017E  2980               	goto	u41_21
  2436  017F  2981               	goto	u41_20
  2437  0180                     u41_21:
  2438  0180  2983               	goto	i1l1217
  2439  0181                     u41_20:
  2440  0181                     i1l1215:
  2441                           
  2442                           ;MAIN.c: 67:                 PORTA--;
  2443  0181  3001               	movlw	1
  2444  0182  0285               	subwf	5,f	;volatile
  2445  0183                     i1l1217:
  2446                           
  2447                           ;MAIN.c: 70:         INTCONbits.RBIF=0;
  2448  0183  100B               	bcf	11,0	;volatile
  2449                           
  2450                           ;MAIN.c: 71:     }
  2451  0184  29BB               	goto	i1l88
  2452  0185                     i1l75:	
  2453                           ;MAIN.c: 72:     else if(T0IF == 1){
  2454                           
  2455  0185  1D0B               	btfss	11,2	;volatile
  2456  0186  2988               	goto	u42_21
  2457  0187  2989               	goto	u42_20
  2458  0188                     u42_21:
  2459  0188  29BB               	goto	i1l88
  2460  0189                     u42_20:
  2461  0189                     i1l1219:
  2462                           
  2463                           ;MAIN.c: 73:         PORTD = 0x00;
  2464  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2465  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2466  018B  0188               	clrf	8	;volatile
  2467  018C                     i1l1221:
  2468                           
  2469                           ;MAIN.c: 76:         if(display == 1){
  2470  018C  0376               	decf	_display,w
  2471  018D  1D03               	btfss	3,2
  2472  018E  2990               	goto	u43_21
  2473  018F  2991               	goto	u43_20
  2474  0190                     u43_21:
  2475  0190  299C               	goto	i1l1227
  2476  0191                     u43_20:
  2477  0191                     i1l1223:
  2478                           
  2479                           ;MAIN.c: 77:             RD0 = 1;
  2480  0191  1408               	bsf	8,0	;volatile
  2481  0192                     i1l1225:
  2482                           
  2483                           ;MAIN.c: 78:             PORTC = tabla[unidad];
  2484  0192  0878               	movf	_unidad,w
  2485  0193  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  2486  0194  0084               	movwf	4
  2487  0195  120A  118A  22DF  120A  118A  	fcall	stringdir
  2488  019A  0087               	movwf	7	;volatile
  2489                           
  2490                           ;MAIN.c: 80:         }else if(display == 2){
  2491  019B  29B4               	goto	i1l1237
  2492  019C                     i1l1227:
  2493  019C  3002               	movlw	2
  2494  019D  0676               	xorwf	_display,w
  2495  019E  1D03               	btfss	3,2
  2496  019F  29A1               	goto	u44_21
  2497  01A0  29A2               	goto	u44_20
  2498  01A1                     u44_21:
  2499  01A1  29AD               	goto	i1l1233
  2500  01A2                     u44_20:
  2501  01A2                     i1l1229:
  2502                           
  2503                           ;MAIN.c: 81:             RD1 = 1;
  2504  01A2  1488               	bsf	8,1	;volatile
  2505  01A3                     i1l1231:
  2506                           
  2507                           ;MAIN.c: 82:             PORTC = tabla[decena];
  2508  01A3  0877               	movf	_decena,w
  2509  01A4  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  2510  01A5  0084               	movwf	4
  2511  01A6  120A  118A  22DF  120A  118A  	fcall	stringdir
  2512  01AB  0087               	movwf	7	;volatile
  2513                           
  2514                           ;MAIN.c: 84:         }else if(display == 3){
  2515  01AC  29B4               	goto	i1l1237
  2516  01AD                     i1l1233:
  2517  01AD  3003               	movlw	3
  2518  01AE  0676               	xorwf	_display,w
  2519  01AF  1D03               	btfss	3,2
  2520  01B0  29B2               	goto	u45_21
  2521  01B1  29B3               	goto	u45_20
  2522  01B2                     u45_21:
  2523  01B2  29B4               	goto	i1l1237
  2524  01B3                     u45_20:
  2525  01B3                     i1l1235:
  2526                           
  2527                           ;MAIN.c: 85:             display = 0;
  2528  01B3  01F6               	clrf	_display
  2529  01B4                     i1l1237:
  2530                           
  2531                           ;MAIN.c: 88:         ++display;
  2532  01B4  3001               	movlw	1
  2533  01B5  00F0               	movwf	??_isr
  2534  01B6  0870               	movf	??_isr,w
  2535  01B7  07F6               	addwf	_display,f
  2536  01B8                     i1l1239:
  2537                           
  2538                           ;MAIN.c: 89:         INTCONbits.T0IF = 0;
  2539  01B8  110B               	bcf	11,2	;volatile
  2540  01B9                     i1l1241:
  2541                           
  2542                           ;MAIN.c: 90:         TMR0 = 244;
  2543  01B9  30F4               	movlw	244
  2544  01BA  0081               	movwf	1	;volatile
  2545  01BB                     i1l88:
  2546  01BB  0874               	movf	??_isr+4,w
  2547  01BC  00FF               	movwf	btemp+1
  2548  01BD  0873               	movf	??_isr+3,w
  2549  01BE  008A               	movwf	10
  2550  01BF  0872               	movf	??_isr+2,w
  2551  01C0  0084               	movwf	4
  2552  01C1  0E71               	swapf	??_isr+1,w
  2553  01C2  0083               	movwf	3
  2554  01C3  0EFE               	swapf	btemp,f
  2555  01C4  0E7E               	swapf	btemp,w
  2556  01C5  0009               	retfie
  2557  01C6                     __end_of_isr:
  2558  007E                     btemp	set	126	;btemp
  2559  007E                     wtemp0	set	126
  2560                           
  2561                           	psect	intentry
  2562  0004                     __pintentry:	
  2563                           ;incstack = 0
  2564                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  2565                           
  2566  0004                     interrupt_function:
  2567  007E                     saved_w	set	btemp
  2568  0004  00FE               	movwf	btemp
  2569  0005  0E03               	swapf	3,w
  2570  0006  00F1               	movwf	??_isr+1
  2571  0007  0804               	movf	4,w
  2572  0008  00F2               	movwf	??_isr+2
  2573  0009  080A               	movf	10,w
  2574  000A  00F3               	movwf	??_isr+3
  2575  000B  087F               	movf	btemp+1,w
  2576  000C  00F4               	movwf	??_isr+4
  2577  000D  120A  118A  2966   	ljmp	_isr
  2578                           
  2579                           	psect	idloc
  2580                           
  2581                           ;Config register IDLOC0 @ 0x2000
  2582                           ;	unspecified, using default values
  2583  2000                     	org	8192
  2584  2000  3FFF               	dw	16383
  2585                           
  2586                           ;Config register IDLOC1 @ 0x2001
  2587                           ;	unspecified, using default values
  2588  2001                     	org	8193
  2589  2001  3FFF               	dw	16383
  2590                           
  2591                           ;Config register IDLOC2 @ 0x2002
  2592                           ;	unspecified, using default values
  2593  2002                     	org	8194
  2594  2002  3FFF               	dw	16383
  2595                           
  2596                           ;Config register IDLOC3 @ 0x2003
  2597                           ;	unspecified, using default values
  2598  2003                     	org	8195
  2599  2003  3FFF               	dw	16383
  2600                           
  2601                           	psect	config
  2602                           
  2603                           ;Config register CONFIG1 @ 0x2007
  2604                           ;	Oscillator Selection bits
  2605                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2606                           ;	Watchdog Timer Enable bit
  2607                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2608                           ;	Power-up Timer Enable bit
  2609                           ;	PWRTE = OFF, PWRT disabled
  2610                           ;	RE3/MCLR pin function select bit
  2611                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2612                           ;	Code Protection bit
  2613                           ;	CP = OFF, Program memory code protection is disabled
  2614                           ;	Data Code Protection bit
  2615                           ;	CPD = OFF, Data memory code protection is disabled
  2616                           ;	Brown Out Reset Selection bits
  2617                           ;	BOREN = OFF, BOR disabled
  2618                           ;	Internal External Switchover bit
  2619                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2620                           ;	Fail-Safe Clock Monitor Enabled bit
  2621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2622                           ;	Low Voltage Programming Enable bit
  2623                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2624                           ;	In-Circuit Debugger Mode bit
  2625                           ;	DEBUG = 0x1, unprogrammed default
  2626  2007                     	org	8199
  2627  2007  20D4               	dw	8404
  2628                           
  2629                           ;Config register CONFIG2 @ 0x2008
  2630                           ;	Brown-out Reset Selection bit
  2631                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2632                           ;	Flash Program Memory Self Write Enable bits
  2633                           ;	WRT = OFF, Write protection off
  2634  2008                     	org	8200
  2635  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     14      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UNIDAD
    _setup->_OSCILLATOR
    _UNIDAD->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1043
                                             13 BANK0      1     1      0
                           _ADC_READ
                             _DECENA
                             _UNIDAD
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     308
                                              3 BANK0      1     1      0
                           _ADC_INIT
                            _IOC_INT
                         _OSCILLATOR
                     _PRESCALER_TMR0
 ---------------------------------------------------------------------------------
 (2) _PRESCALER_TMR0                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _IOC_INT                                              1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UNIDAD                                               4     4      0     690
                                              9 BANK0      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DECENA                                               2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _DECENA
   _UNIDAD
     ___awdiv
   _setup
     _ADC_INIT
     _IOC_INT
     _OSCILLATOR
     _PRESCALER_TMR0

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Jul 16 17:29:20 2023

                      pc 0002             ___awdiv@sign 0026                       fsr 0004  
                    l100 027C                      l130 003A                      l131 003F  
                    l123 001C                      l116 0311                      l132 0044  
                    l133 0049                      l125 0021                      l109 0307  
                    l142 031B                      l134 004E                      l126 0026  
                    l119 02DE                      l135 0053                      l127 002B  
                    l136 0058                      l128 0030                      l137 005D  
                    l129 0035                      l138 0062                      l170 012F  
                    l139 009A                      l171 0135                      l163 010B  
                    l172 013B                      l180 01D7                      l165 0111  
                    l173 0165                      l181 01DD                      l166 0117  
                    l182 01E3                      l167 011D                      l183 01E9  
                    l168 0123                      l184 01EF                      l169 0129  
                    l185 01F5                      l177 01CB                      l426 0103  
                    l186 01FB                      l179 01D1                      l187 0222  
                    _RB0 0030                      _RB1 0031           _PRESCALER_TMR0 01C6  
                    _RD0 0040                      _RD1 0041                      _RB7 0037  
                    u500 00AD                      u501 00AC                      u510 00BE  
                    u511 00BD                      u600 02BC                      u601 02B8  
                    u530 00D0                      u531 00CF                      u525 00C2  
                    u550 00E1                      u614 02BF                      u551 00E0  
                    u545 00D1                      u570 00F5                      u490 00A2  
                    u571 00F4                      u555 00DD                      u491 00A1  
                    u627 0297                      u580 00FA                      u581 00F9  
                    u565 00E9                      u637 026D                      u590 0288  
                    u591 0287                      _POT 0075                      _isr 0166  
                    fsr0 0004          __end_of_IOC_INT 0308                     l1321 0107  
                   l1401 0227                     l1331 01C6                     l1411 0232  
                   l1403 0228                     l1341 02F8                     l1325 0141  
                   l1421 024A                     l1413 0233                     l1405 022D  
                   l1343 02FB                     l1335 0201                     l1431 0262  
                   l1423 0250                     l1415 0234                     l1407 022E  
                   l1361 00A7                     l1345 001B                     l1441 0273  
                   l1433 0263                     l1425 025B                     l1417 0235  
                   l1409 022F                     l1371 00B8                     l1363 00A9  
                   l1355 009B                     l1451 0278                     l1443 0274  
                   l1435 0266                     l1427 025E                     l1419 023B  
                   l1461 0312                     l1381 00D0                     l1373 00BE  
                   l1365 00AD                     l1357 009E                     l1349 0067  
                   l1453 0279                     l1445 0275                     l1437 0269  
                   l1429 025F                     l1383 00E1                     l1375 00C1  
                   l1391 00F5                     l1367 00B2                     l1359 00A2  
                   l1471 02C6                     l1455 027A                     l1447 0276  
                   l1439 0270                     l1465 030B                     l1393 00FA  
                   l1385 00E7                     l1377 00C8                     l1369 00B6  
                   l1473 02DD                     l1553 0208                     l1457 027B  
                   l1449 0277                     l1481 0288                     l1467 0310  
                   l1395 00FF                     l1387 00E8                     l1379 00CC  
                   l1555 014B                     l1491 02B3                     l1483 0293  
                   l1389 00EF                     l1557 006E                     l1485 029A  
                   l1477 027D                     l1399 0223                     l1487 029D  
                   l1479 0282                     l1489 02A8                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l75 0185  
                   i1l76 0179                     i1l88 01BB                     _TMR0 0001  
       __end_of_ADC_INIT 009B         __end_of_ADC_READ 031C                     _main 027D  
                   btemp 007E                     start 0010              ?_OSCILLATOR 0070  
                  ??_isr 0070   __end_of_PRESCALER_TMR0 0223                    ?_main 0070  
        __end_of___awdiv 0104                    _ANSEL 0188          ___awdiv@divisor 0020  
        ___awdiv@counter 0025                    u40_20 017D                    u40_21 017C  
                  u41_20 0181                    u41_21 0180                    u42_20 0189  
                  u42_21 0188                    u43_20 0191                    u43_21 0190  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u44_20 01A2                    u44_21 01A1  
                  u45_20 01B3                    u37_20 016A                    u45_21 01B2  
                  u37_21 0169                    u38_20 0170                    u38_21 016F  
                  u39_20 0174                    u39_21 0173                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _tabla 02E5                    _setup 0223                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 02C3          ?_PRESCALER_TMR0 0020                   ??_main 002D  
              ADC_INIT@c 0020                ??_IOC_INT 0075          PRESCALER_TMR0@c 0020  
                 _DECENA 0308                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1211 0174  
                 i1l1221 018C                   i1l1213 017D                   i1l1205 0166  
                 i1l1231 01A3                   i1l1223 0191                   i1l1215 0181  
                 i1l1207 016A                   i1l1241 01B9                   i1l1233 01AD  
                 i1l1225 0192                   i1l1217 0183                   i1l1209 0170  
                 i1l1235 01B3                   i1l1227 019C                   i1l1219 0189  
                 i1l1229 01A2                   i1l1237 01B4                   i1l1239 01B8  
                 _UNIDAD 02C3                ??___awdiv 0024                   _decena 0077  
       ___awdiv@quotient 0027                   _unidad 0078                ?_ADC_INIT 0020  
              ?_ADC_READ 0020                   saved_w 007E  __end_of__initialization 0017  
         __pcstackCOMMON 0070              OSCILLATOR@c 0022            __end_of_tabla 02F5  
          __end_of_setup 027D                  DECENA@c 0021               ??_ADC_INIT 0075  
             ??_ADC_READ 0022           _OPTION_REGbits 0081                  ?_DECENA 0070  
                ??_setup 0023                  ?_UNIDAD 0070             ??_OSCILLATOR 0020  
             __pmaintext 027D                  UNIDAD@c 002C               __pintentry 0004  
                _IOC_INT 02F5       __end_of_OSCILLATOR 0166               __stringtab 02DF  
       ??_PRESCALER_TMR0 0075                  ___awdiv 009B                  __ptext1 0223  
                __ptext2 01C6                  __ptext3 0104                  __ptext4 02F5  
                __ptext5 001B                  __ptext6 02C3                  __ptext7 009B  
                __ptext8 0308                  __ptext9 0312                  _display 0076  
   end_of_initialization 0017           __end_of_DECENA 0312           __end_of_UNIDAD 02DF  
    start_initialization 0013              __end_of_isr 01C6                 ??_DECENA 0020  
               ??_UNIDAD 0029                 ?_IOC_INT 0070              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020                 IOC_INT@a 0020  
               ?___awdiv 0020                __pstrings 02DF                 _ADC_INIT 001B  
               _ADC_READ 0312        interrupt_function 0004                 _IOCBbits 0096  
             _ADCON0bits 001F              __stringbase 02E4               _ADCON1bits 009F  
               _WPUBbits 0095       __end_of__stringtab 02E5                 __ptext10 0166  
             _INTCONbits 000B                 intlevel1 0000               _OSCILLATOR 0104  
              stringcode 02DF               _OSCCONbits 008F                 stringdir 02DF  
               stringtab 02DF  
