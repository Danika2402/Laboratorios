

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Jul 30 20:13:24 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  001E                     _ADRESH	set	30
   370  001F                     _ADCON0bits	set	31
   371  000B                     _INTCONbits	set	11
   372  000C                     _PIR1bits	set	12
   373  0094                     _SSPSTAT	set	148
   374  009F                     _ADCON1bits	set	159
   375  008F                     _OSCCONbits	set	143
   376  0085                     _TRISAbits	set	133
   377  008C                     _PIE1bits	set	140
   378  043B                     _TRISC3	set	1083
   379  043D                     _TRISC5	set	1085
   380  0189                     _ANSELH	set	393
   381  0188                     _ANSEL	set	392
   382                           
   383                           	psect	cinit
   384  000F                     start_initialization:	
   385                           ; #config settings
   386                           
   387  000F                     __initialization:
   388                           
   389                           ; Clear objects allocated to COMMON
   390  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   391  0010                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  0010                     __end_of__initialization:
   395  0010  0183               	clrf	3
   396  0011  120A  118A  2979   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  0078                     __pbssCOMMON:
   400  0078                     _POT:
   401  0078                     	ds	1
   402                           
   403                           	psect	cstackCOMMON
   404  0070                     __pcstackCOMMON:
   405  0070                     ?_spiWrite:
   406  0070                     ??_spiWrite:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_setup:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_ADC_READ:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_OSCILLATOR:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_ADC_INIT:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_isr:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     spiWrite@dat:	
   428                           ; 1 bytes @ 0x0
   429                           
   430                           
   431                           ; 1 bytes @ 0x0
   432  0070                     	ds	1
   433  0071                     ??_isr:
   434                           
   435                           ; 1 bytes @ 0x1
   436  0071                     	ds	2
   437  0073                     ??_ADC_READ:
   438  0073                     ??_OSCILLATOR:	
   439                           ; 1 bytes @ 0x3
   440                           
   441  0073                     ??_ADC_INIT:	
   442                           ; 1 bytes @ 0x3
   443                           
   444  0073                     ?_spiInit:	
   445                           ; 1 bytes @ 0x3
   446                           
   447  0073                     spiInit@sDataSample:	
   448                           ; 1 bytes @ 0x3
   449                           
   450                           
   451                           ; 1 bytes @ 0x3
   452  0073                     	ds	1
   453  0074                     spiInit@sClockIdle:
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	1
   457  0075                     OSCILLATOR@f:
   458  0075                     ADC_INIT@c:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0075                     spiInit@sTransmitEdge:	
   462                           ; 1 bytes @ 0x5
   463                           
   464                           
   465                           ; 1 bytes @ 0x5
   466  0075                     	ds	1
   467  0076                     ??_spiInit:
   468  0076                     spiInit@sType:	
   469                           ; 1 bytes @ 0x6
   470                           
   471                           
   472                           ; 1 bytes @ 0x6
   473  0076                     	ds	1
   474  0077                     ??_setup:
   475  0077                     ??_main:	
   476                           ; 1 bytes @ 0x7
   477                           
   478                           
   479                           ; 1 bytes @ 0x7
   480  0077                     	ds	1
   481                           
   482                           	psect	maintext
   483  0179                     __pmaintext:	
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 50 in file "MAIN_S2.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B00/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          1       0       0       0       0
   506 ;;      Totals:         1       0       0       0       0
   507 ;;Total ram usage:        1 bytes
   508 ;; Hardware stack levels required when called: 4
   509 ;; This function calls:
   510 ;;		_ADC_READ
   511 ;;		_setup
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517  0179                     _main:	
   518                           ;psect for function _main
   519                           
   520  0179                     l849:	
   521                           ;incstack = 0
   522                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   523                           
   524                           
   525                           ;MAIN_S2.c: 51:     setup();
   526  0179  120A  118A  2115  120A  118A  	fcall	_setup
   527  017E                     l851:
   528                           
   529                           ;MAIN_S2.c: 53:         POT = ADC_READ();
   530  017E  120A  118A  2165  120A  118A  	fcall	_ADC_READ
   531  0183  00F7               	movwf	??_main
   532  0184  0877               	movf	??_main,w
   533  0185  00F8               	movwf	_POT
   534  0186  297E               	goto	l851
   535  0187  120A  118A  280C   	ljmp	start
   536  018A                     __end_of_main:
   537                           
   538                           	psect	text1
   539  0115                     __ptext1:	
   540 ;; *************** function _setup *****************
   541 ;; Defined at:
   542 ;;		line 58 in file "MAIN_S2.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 3
   563 ;; This function calls:
   564 ;;		_ADC_INIT
   565 ;;		_OSCILLATOR
   566 ;;		_spiInit
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572  0115                     _setup:	
   573                           ;psect for function _setup
   574                           
   575  0115                     l829:	
   576                           ;incstack = 0
   577                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   578                           
   579                           
   580                           ;MAIN_S2.c: 60:     OSCILLATOR(1);
   581  0115  3001               	movlw	1
   582  0116  120A  118A  20C9  120A  118A  	fcall	_OSCILLATOR
   583  011B                     l831:
   584                           
   585                           ;MAIN_S2.c: 62:     ANSEL = 0b00100000;
   586  011B  3020               	movlw	32
   587  011C  1683               	bsf	3,5	;RP0=1, select bank3
   588  011D  1703               	bsf	3,6	;RP1=1, select bank3
   589  011E  0088               	movwf	8	;volatile
   590  011F                     l833:
   591                           
   592                           ;MAIN_S2.c: 63:     ANSELH = 0x00;
   593  011F  0189               	clrf	9	;volatile
   594  0120                     l835:
   595                           
   596                           ;MAIN_S2.c: 66:     ADC_INIT(5);
   597  0120  3005               	movlw	5
   598  0121  120A  118A  2014  120A  118A  	fcall	_ADC_INIT
   599  0126                     l837:
   600                           
   601                           ;MAIN_S2.c: 68:     INTCONbits.GIE = 1;
   602  0126  178B               	bsf	11,7	;volatile
   603  0127                     l839:
   604                           
   605                           ;MAIN_S2.c: 69:     INTCONbits.PEIE = 1;
   606  0127  170B               	bsf	11,6	;volatile
   607  0128                     l841:
   608                           
   609                           ;MAIN_S2.c: 70:     PIR1bits.SSPIF = 0;
   610  0128  1283               	bcf	3,5	;RP0=0, select bank0
   611  0129  1303               	bcf	3,6	;RP1=0, select bank0
   612  012A  118C               	bcf	12,3	;volatile
   613  012B                     l843:
   614                           
   615                           ;MAIN_S2.c: 71:     PIE1bits.SSPIE = 1;
   616  012B  1683               	bsf	3,5	;RP0=1, select bank1
   617  012C  1303               	bcf	3,6	;RP1=0, select bank1
   618  012D  158C               	bsf	12,3	;volatile
   619  012E                     l845:
   620                           
   621                           ;MAIN_S2.c: 73:     TRISAbits.TRISA5 = 1;
   622  012E  1685               	bsf	5,5	;volatile
   623  012F                     l847:
   624                           
   625                           ;MAIN_S2.c: 75:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   626  012F  01F3               	clrf	spiInit@sDataSample
   627  0130  01F4               	clrf	spiInit@sClockIdle
   628  0131  01F5               	clrf	spiInit@sTransmitEdge
   629  0132  3024               	movlw	36
   630  0133  120A  118A  2139  120A  118A  	fcall	_spiInit
   631  0138                     l43:
   632  0138  0008               	return
   633  0139                     __end_of_setup:
   634                           
   635                           	psect	text2
   636  0139                     __ptext2:	
   637 ;; *************** function _spiInit *****************
   638 ;; Defined at:
   639 ;;		line 13 in file "SPIS2.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  sType           1    wreg     enum E1292
   642 ;;  sDataSample     1    3[COMMON] enum E1300
   643 ;;  sClockIdle      1    4[COMMON] enum E1304
   644 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  sType           1    6[COMMON] enum E1292
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         3       0       0       0       0
   657 ;;      Locals:         1       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0
   659 ;;      Totals:         4       0       0       0       0
   660 ;;Total ram usage:        4 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 2
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_setup
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670  0139                     _spiInit:	
   671                           ;psect for function _spiInit
   672                           
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   676                           ;spiInit@sType stored from wreg
   677  0139  00F6               	movwf	spiInit@sType
   678  013A                     l819:
   679                           
   680                           ;SPIS2.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPIS2.c: 14: {;SPIS2.c: 15:     TRISC5 = 0;
   681  013A  1683               	bsf	3,5	;RP0=1, select bank1
   682  013B  1303               	bcf	3,6	;RP1=0, select bank1
   683  013C  1287               	bcf	7,5	;volatile
   684                           
   685                           ;SPIS2.c: 16:     if(sType & 0b00000100)
   686  013D  1D76               	btfss	spiInit@sType,2
   687  013E  2940               	goto	u41
   688  013F  2941               	goto	u40
   689  0140                     u41:
   690  0140  2945               	goto	l825
   691  0141                     u40:
   692  0141                     l821:
   693                           
   694                           ;SPIS2.c: 17:     {;SPIS2.c: 18:         SSPSTAT = sTransmitEdge;
   695  0141  0875               	movf	spiInit@sTransmitEdge,w
   696  0142  0094               	movwf	20	;volatile
   697  0143                     l823:
   698                           
   699                           ;SPIS2.c: 19:         TRISC3 = 1;
   700  0143  1587               	bsf	7,3	;volatile
   701                           
   702                           ;SPIS2.c: 20:     }
   703  0144  2949               	goto	l107
   704  0145                     l825:
   705                           
   706                           ;SPIS2.c: 22:     {;SPIS2.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   707  0145  0873               	movf	spiInit@sDataSample,w
   708  0146  0475               	iorwf	spiInit@sTransmitEdge,w
   709  0147  0094               	movwf	20	;volatile
   710  0148                     l827:
   711                           
   712                           ;SPIS2.c: 24:         TRISC3 = 0;
   713  0148  1187               	bcf	7,3	;volatile
   714  0149                     l107:	
   715                           ;SPIS2.c: 25:     }
   716                           
   717                           
   718                           ;SPIS2.c: 27:     SSPCON = sType | sClockIdle;
   719  0149  0876               	movf	spiInit@sType,w
   720  014A  0474               	iorwf	spiInit@sClockIdle,w
   721  014B  1283               	bcf	3,5	;RP0=0, select bank0
   722  014C  1303               	bcf	3,6	;RP1=0, select bank0
   723  014D  0094               	movwf	20	;volatile
   724  014E                     l108:
   725  014E  0008               	return
   726  014F                     __end_of_spiInit:
   727                           
   728                           	psect	text3
   729  00C9                     __ptext3:	
   730 ;; *************** function _OSCILLATOR *****************
   731 ;; Defined at:
   732 ;;		line 27 in file "ADC.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  f               1    wreg     unsigned char 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  f               1    5[COMMON] unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         1       0       0       0       0
   748 ;;      Temps:          2       0       0       0       0
   749 ;;      Totals:         3       0       0       0       0
   750 ;;Total ram usage:        3 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 2
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_setup
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760  00C9                     _OSCILLATOR:	
   761                           ;psect for function _OSCILLATOR
   762                           
   763                           
   764                           ;incstack = 0
   765                           ; Regs used in _OSCILLATOR: [wreg-fsr0h+status,2+status,0]
   766                           ;OSCILLATOR@f stored from wreg
   767  00C9  00F5               	movwf	OSCILLATOR@f
   768  00CA                     l703:
   769                           
   770                           ;ADC.c: 28:     OSCCONbits.SCS = 1;
   771  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   772  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   773  00CC  140F               	bsf	15,0	;volatile
   774                           
   775                           ;ADC.c: 30:     switch(f){
   776  00CD  28F2               	goto	l707
   777  00CE                     l57:	
   778                           ;ADC.c: 31:         case(1):
   779                           
   780                           
   781                           ;ADC.c: 32:             OSCCONbits.IRCF2 =1;
   782  00CE  170F               	bsf	15,6	;volatile
   783                           
   784                           ;ADC.c: 33:             OSCCONbits.IRCF1 =1;
   785  00CF  168F               	bsf	15,5	;volatile
   786                           
   787                           ;ADC.c: 34:             OSCCONbits.IRCF0 =1;
   788  00D0  160F               	bsf	15,4	;volatile
   789                           
   790                           ;ADC.c: 35:             break;
   791  00D1  2914               	goto	l67
   792  00D2                     l59:	
   793                           ;ADC.c: 37:         case(2):
   794                           
   795                           
   796                           ;ADC.c: 38:             OSCCONbits.IRCF2 =1;
   797  00D2  170F               	bsf	15,6	;volatile
   798                           
   799                           ;ADC.c: 39:             OSCCONbits.IRCF1 =1;
   800  00D3  168F               	bsf	15,5	;volatile
   801                           
   802                           ;ADC.c: 40:             OSCCONbits.IRCF0 =0;
   803  00D4  120F               	bcf	15,4	;volatile
   804                           
   805                           ;ADC.c: 41:             break;
   806  00D5  2914               	goto	l67
   807  00D6                     l60:	
   808                           ;ADC.c: 43:         case(3):
   809                           
   810                           
   811                           ;ADC.c: 44:             OSCCONbits.IRCF2 =1;
   812  00D6  170F               	bsf	15,6	;volatile
   813                           
   814                           ;ADC.c: 45:             OSCCONbits.IRCF1 =0;
   815  00D7  128F               	bcf	15,5	;volatile
   816                           
   817                           ;ADC.c: 46:             OSCCONbits.IRCF0 =1;
   818  00D8  160F               	bsf	15,4	;volatile
   819                           
   820                           ;ADC.c: 47:             break;
   821  00D9  2914               	goto	l67
   822  00DA                     l61:	
   823                           ;ADC.c: 49:         case(4):
   824                           
   825                           
   826                           ;ADC.c: 50:             OSCCONbits.IRCF2 =1;
   827  00DA  170F               	bsf	15,6	;volatile
   828                           
   829                           ;ADC.c: 51:             OSCCONbits.IRCF1 =0;
   830  00DB  128F               	bcf	15,5	;volatile
   831                           
   832                           ;ADC.c: 52:             OSCCONbits.IRCF0 =0;
   833  00DC  120F               	bcf	15,4	;volatile
   834                           
   835                           ;ADC.c: 53:             break;
   836  00DD  2914               	goto	l67
   837  00DE                     l62:	
   838                           ;ADC.c: 55:         case(5):
   839                           
   840                           
   841                           ;ADC.c: 56:             OSCCONbits.IRCF2 =0;
   842  00DE  130F               	bcf	15,6	;volatile
   843                           
   844                           ;ADC.c: 57:             OSCCONbits.IRCF1 =1;
   845  00DF  168F               	bsf	15,5	;volatile
   846                           
   847                           ;ADC.c: 58:             OSCCONbits.IRCF0 =1;
   848  00E0  160F               	bsf	15,4	;volatile
   849                           
   850                           ;ADC.c: 59:             break;
   851  00E1  2914               	goto	l67
   852  00E2                     l63:	
   853                           ;ADC.c: 61:         case(6):
   854                           
   855                           
   856                           ;ADC.c: 62:             OSCCONbits.IRCF2 =0;
   857  00E2  130F               	bcf	15,6	;volatile
   858                           
   859                           ;ADC.c: 63:             OSCCONbits.IRCF1 =1;
   860  00E3  168F               	bsf	15,5	;volatile
   861                           
   862                           ;ADC.c: 64:             OSCCONbits.IRCF0 =0;
   863  00E4  120F               	bcf	15,4	;volatile
   864                           
   865                           ;ADC.c: 65:             break;
   866  00E5  2914               	goto	l67
   867  00E6                     l64:	
   868                           ;ADC.c: 67:         case(7):
   869                           
   870                           
   871                           ;ADC.c: 68:             OSCCONbits.IRCF2 =0;
   872  00E6  130F               	bcf	15,6	;volatile
   873                           
   874                           ;ADC.c: 69:             OSCCONbits.IRCF1 =0;
   875  00E7  128F               	bcf	15,5	;volatile
   876                           
   877                           ;ADC.c: 70:             OSCCONbits.IRCF0 =1;
   878  00E8  160F               	bsf	15,4	;volatile
   879                           
   880                           ;ADC.c: 71:             break;
   881  00E9  2914               	goto	l67
   882  00EA                     l65:	
   883                           ;ADC.c: 73:         case(8):
   884                           
   885                           
   886                           ;ADC.c: 74:             OSCCONbits.IRCF2 =0;
   887  00EA  130F               	bcf	15,6	;volatile
   888                           
   889                           ;ADC.c: 75:             OSCCONbits.IRCF1 =0;
   890  00EB  128F               	bcf	15,5	;volatile
   891                           
   892                           ;ADC.c: 76:             OSCCONbits.IRCF0 =0;
   893  00EC  120F               	bcf	15,4	;volatile
   894                           
   895                           ;ADC.c: 77:             break;
   896  00ED  2914               	goto	l67
   897  00EE                     l66:	
   898                           ;ADC.c: 79:         default:
   899                           
   900                           
   901                           ;ADC.c: 80:             OSCCONbits.IRCF2 =1;
   902  00EE  170F               	bsf	15,6	;volatile
   903                           
   904                           ;ADC.c: 81:             OSCCONbits.IRCF1 =1;
   905  00EF  168F               	bsf	15,5	;volatile
   906                           
   907                           ;ADC.c: 82:             OSCCONbits.IRCF0 =0;
   908  00F0  120F               	bcf	15,4	;volatile
   909                           
   910                           ;ADC.c: 83:             break;
   911  00F1  2914               	goto	l67
   912  00F2                     l707:
   913  00F2  0875               	movf	OSCILLATOR@f,w
   914  00F3  00F3               	movwf	??_OSCILLATOR
   915  00F4  01F4               	clrf	??_OSCILLATOR+1
   916                           
   917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   918                           ; Switch size 1, requested type "simple"
   919                           ; Number of cases is 1, Range of values is 0 to 0
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte            4     3 (average)
   923                           ; direct_byte           11     8 (fixed)
   924                           ; jumptable            260     6 (fixed)
   925                           ;	Chosen strategy is simple_byte
   926  00F5  0874               	movf	??_OSCILLATOR+1,w
   927  00F6  3A00               	xorlw	0	; case 0
   928  00F7  1903               	skipnz
   929  00F8  28FA               	goto	l893
   930  00F9  28EE               	goto	l66
   931  00FA                     l893:
   932                           
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 8, Range of values is 1 to 8
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte           25    13 (average)
   938                           ; direct_byte           35    11 (fixed)
   939                           ; jumptable            263     9 (fixed)
   940                           ;	Chosen strategy is simple_byte
   941  00FA  0873               	movf	??_OSCILLATOR,w
   942  00FB  3A01               	xorlw	1	; case 1
   943  00FC  1903               	skipnz
   944  00FD  28CE               	goto	l57
   945  00FE  3A03               	xorlw	3	; case 2
   946  00FF  1903               	skipnz
   947  0100  28D2               	goto	l59
   948  0101  3A01               	xorlw	1	; case 3
   949  0102  1903               	skipnz
   950  0103  28D6               	goto	l60
   951  0104  3A07               	xorlw	7	; case 4
   952  0105  1903               	skipnz
   953  0106  28DA               	goto	l61
   954  0107  3A01               	xorlw	1	; case 5
   955  0108  1903               	skipnz
   956  0109  28DE               	goto	l62
   957  010A  3A03               	xorlw	3	; case 6
   958  010B  1903               	skipnz
   959  010C  28E2               	goto	l63
   960  010D  3A01               	xorlw	1	; case 7
   961  010E  1903               	skipnz
   962  010F  28E6               	goto	l64
   963  0110  3A0F               	xorlw	15	; case 8
   964  0111  1903               	skipnz
   965  0112  28EA               	goto	l65
   966  0113  28EE               	goto	l66
   967  0114                     l67:
   968  0114  0008               	return
   969  0115                     __end_of_OSCILLATOR:
   970                           
   971                           	psect	text4
   972  0014                     __ptext4:	
   973 ;; *************** function _ADC_INIT *****************
   974 ;; Defined at:
   975 ;;		line 89 in file "ADC.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  c               1    wreg     unsigned char 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  c               1    5[COMMON] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0
   991 ;;      Temps:          2       0       0       0       0
   992 ;;      Totals:         3       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 2
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_setup
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003  0014                     _ADC_INIT:	
  1004                           ;psect for function _ADC_INIT
  1005                           
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
  1009                           ;ADC_INIT@c stored from wreg
  1010  0014  00F5               	movwf	ADC_INIT@c
  1011  0015                     l713:
  1012                           
  1013                           ;ADC.c: 90:     switch(c){
  1014  0015  287F               	goto	l717
  1015  0016                     l71:	
  1016                           ;ADC.c: 91:         case 0:
  1017                           
  1018                           
  1019                           ;ADC.c: 92:             ADCON0bits.CHS3 = 0;
  1020  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0018  129F               	bcf	31,5	;volatile
  1023                           
  1024                           ;ADC.c: 93:             ADCON0bits.CHS2 = 0;
  1025  0019  121F               	bcf	31,4	;volatile
  1026                           
  1027                           ;ADC.c: 94:             ADCON0bits.CHS1 = 0;
  1028  001A  119F               	bcf	31,3	;volatile
  1029                           
  1030                           ;ADC.c: 95:             ADCON0bits.CHS0 = 0;
  1031  001B  111F               	bcf	31,2	;volatile
  1032                           
  1033                           ;ADC.c: 96:             break;
  1034  001C  28B3               	goto	l72
  1035  001D                     l73:	
  1036                           ;ADC.c: 98:         case 1:
  1037                           
  1038                           
  1039                           ;ADC.c: 99:             ADCON0bits.CHS3 = 0;
  1040  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1041  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1042  001F  129F               	bcf	31,5	;volatile
  1043                           
  1044                           ;ADC.c: 100:             ADCON0bits.CHS2 = 0;
  1045  0020  121F               	bcf	31,4	;volatile
  1046                           
  1047                           ;ADC.c: 101:             ADCON0bits.CHS1 = 0;
  1048  0021  119F               	bcf	31,3	;volatile
  1049                           
  1050                           ;ADC.c: 102:             ADCON0bits.CHS0 = 1;
  1051  0022  151F               	bsf	31,2	;volatile
  1052                           
  1053                           ;ADC.c: 103:             break;
  1054  0023  28B3               	goto	l72
  1055  0024                     l74:	
  1056                           ;ADC.c: 105:         case 2:
  1057                           
  1058                           
  1059                           ;ADC.c: 106:             ADCON0bits.CHS3 = 0;
  1060  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0026  129F               	bcf	31,5	;volatile
  1063                           
  1064                           ;ADC.c: 107:             ADCON0bits.CHS2 = 0;
  1065  0027  121F               	bcf	31,4	;volatile
  1066                           
  1067                           ;ADC.c: 108:             ADCON0bits.CHS1 = 1;
  1068  0028  159F               	bsf	31,3	;volatile
  1069                           
  1070                           ;ADC.c: 109:             ADCON0bits.CHS0 = 0;
  1071  0029  111F               	bcf	31,2	;volatile
  1072                           
  1073                           ;ADC.c: 110:             break;
  1074  002A  28B3               	goto	l72
  1075  002B                     l75:	
  1076                           ;ADC.c: 112:         case 3:
  1077                           
  1078                           
  1079                           ;ADC.c: 113:             ADCON0bits.CHS3 = 0;
  1080  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1081  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1082  002D  129F               	bcf	31,5	;volatile
  1083                           
  1084                           ;ADC.c: 114:             ADCON0bits.CHS2 = 0;
  1085  002E  121F               	bcf	31,4	;volatile
  1086                           
  1087                           ;ADC.c: 115:             ADCON0bits.CHS1 = 1;
  1088  002F  159F               	bsf	31,3	;volatile
  1089                           
  1090                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  1091  0030  151F               	bsf	31,2	;volatile
  1092                           
  1093                           ;ADC.c: 117:             break;
  1094  0031  28B3               	goto	l72
  1095  0032                     l76:	
  1096                           ;ADC.c: 119:         case 4:
  1097                           
  1098                           
  1099                           ;ADC.c: 120:             ADCON0bits.CHS3 = 0;
  1100  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0034  129F               	bcf	31,5	;volatile
  1103                           
  1104                           ;ADC.c: 121:             ADCON0bits.CHS2 = 1;
  1105  0035  161F               	bsf	31,4	;volatile
  1106                           
  1107                           ;ADC.c: 122:             ADCON0bits.CHS1 = 0;
  1108  0036  119F               	bcf	31,3	;volatile
  1109                           
  1110                           ;ADC.c: 123:             ADCON0bits.CHS0 = 0;
  1111  0037  111F               	bcf	31,2	;volatile
  1112                           
  1113                           ;ADC.c: 124:             break;
  1114  0038  28B3               	goto	l72
  1115  0039                     l77:	
  1116                           ;ADC.c: 126:         case 5:
  1117                           
  1118                           
  1119                           ;ADC.c: 127:             ADCON0bits.CHS3 = 0;
  1120  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1121  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1122  003B  129F               	bcf	31,5	;volatile
  1123                           
  1124                           ;ADC.c: 128:             ADCON0bits.CHS2 = 1;
  1125  003C  161F               	bsf	31,4	;volatile
  1126                           
  1127                           ;ADC.c: 129:             ADCON0bits.CHS1 = 0;
  1128  003D  119F               	bcf	31,3	;volatile
  1129                           
  1130                           ;ADC.c: 130:             ADCON0bits.CHS0 = 1;
  1131  003E  151F               	bsf	31,2	;volatile
  1132                           
  1133                           ;ADC.c: 131:             break;
  1134  003F  28B3               	goto	l72
  1135  0040                     l78:	
  1136                           ;ADC.c: 133:         case 6:
  1137                           
  1138                           
  1139                           ;ADC.c: 134:             ADCON0bits.CHS3 = 0;
  1140  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0042  129F               	bcf	31,5	;volatile
  1143                           
  1144                           ;ADC.c: 135:             ADCON0bits.CHS2 = 1;
  1145  0043  161F               	bsf	31,4	;volatile
  1146                           
  1147                           ;ADC.c: 136:             ADCON0bits.CHS1 = 1;
  1148  0044  159F               	bsf	31,3	;volatile
  1149                           
  1150                           ;ADC.c: 137:             ADCON0bits.CHS0 = 0;
  1151  0045  111F               	bcf	31,2	;volatile
  1152                           
  1153                           ;ADC.c: 138:             break;
  1154  0046  28B3               	goto	l72
  1155  0047                     l79:	
  1156                           ;ADC.c: 140:         case 7:
  1157                           
  1158                           
  1159                           ;ADC.c: 141:             ADCON0bits.CHS3 = 0;
  1160  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0049  129F               	bcf	31,5	;volatile
  1163                           
  1164                           ;ADC.c: 142:             ADCON0bits.CHS2 = 1;
  1165  004A  161F               	bsf	31,4	;volatile
  1166                           
  1167                           ;ADC.c: 143:             ADCON0bits.CHS1 = 1;
  1168  004B  159F               	bsf	31,3	;volatile
  1169                           
  1170                           ;ADC.c: 144:             ADCON0bits.CHS0 = 1;
  1171  004C  151F               	bsf	31,2	;volatile
  1172                           
  1173                           ;ADC.c: 145:             break;
  1174  004D  28B3               	goto	l72
  1175  004E                     l80:	
  1176                           ;ADC.c: 147:         case 8:
  1177                           
  1178                           
  1179                           ;ADC.c: 148:             ADCON0bits.CHS3 = 1;
  1180  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1181  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0050  169F               	bsf	31,5	;volatile
  1183                           
  1184                           ;ADC.c: 149:             ADCON0bits.CHS2 = 0;
  1185  0051  121F               	bcf	31,4	;volatile
  1186                           
  1187                           ;ADC.c: 150:             ADCON0bits.CHS1 = 0;
  1188  0052  119F               	bcf	31,3	;volatile
  1189                           
  1190                           ;ADC.c: 151:             ADCON0bits.CHS0 = 0;
  1191  0053  111F               	bcf	31,2	;volatile
  1192                           
  1193                           ;ADC.c: 152:             break;
  1194  0054  28B3               	goto	l72
  1195  0055                     l81:	
  1196                           ;ADC.c: 154:         case 9:
  1197                           
  1198                           
  1199                           ;ADC.c: 155:             ADCON0bits.CHS3 = 1;
  1200  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0057  169F               	bsf	31,5	;volatile
  1203                           
  1204                           ;ADC.c: 156:             ADCON0bits.CHS2 = 0;
  1205  0058  121F               	bcf	31,4	;volatile
  1206                           
  1207                           ;ADC.c: 157:             ADCON0bits.CHS1 = 0;
  1208  0059  119F               	bcf	31,3	;volatile
  1209                           
  1210                           ;ADC.c: 158:             ADCON0bits.CHS0 = 1;
  1211  005A  151F               	bsf	31,2	;volatile
  1212                           
  1213                           ;ADC.c: 159:             break;
  1214  005B  28B3               	goto	l72
  1215  005C                     l82:	
  1216                           ;ADC.c: 161:         case 10:
  1217                           
  1218                           
  1219                           ;ADC.c: 162:             ADCON0bits.CHS3 = 1;
  1220  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1221  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1222  005E  169F               	bsf	31,5	;volatile
  1223                           
  1224                           ;ADC.c: 163:             ADCON0bits.CHS2 = 0;
  1225  005F  121F               	bcf	31,4	;volatile
  1226                           
  1227                           ;ADC.c: 164:             ADCON0bits.CHS1 = 1;
  1228  0060  159F               	bsf	31,3	;volatile
  1229                           
  1230                           ;ADC.c: 165:             ADCON0bits.CHS0 = 0;
  1231  0061  111F               	bcf	31,2	;volatile
  1232                           
  1233                           ;ADC.c: 166:             break;
  1234  0062  28B3               	goto	l72
  1235  0063                     l83:	
  1236                           ;ADC.c: 168:         case 11:
  1237                           
  1238                           
  1239                           ;ADC.c: 169:             ADCON0bits.CHS3 = 1;
  1240  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0065  169F               	bsf	31,5	;volatile
  1243                           
  1244                           ;ADC.c: 170:             ADCON0bits.CHS2 = 0;
  1245  0066  121F               	bcf	31,4	;volatile
  1246                           
  1247                           ;ADC.c: 171:             ADCON0bits.CHS1 = 1;
  1248  0067  159F               	bsf	31,3	;volatile
  1249                           
  1250                           ;ADC.c: 172:             ADCON0bits.CHS0 = 1;
  1251  0068  151F               	bsf	31,2	;volatile
  1252                           
  1253                           ;ADC.c: 173:             break;
  1254  0069  28B3               	goto	l72
  1255  006A                     l84:	
  1256                           ;ADC.c: 175:         case 12:
  1257                           
  1258                           
  1259                           ;ADC.c: 176:             ADCON0bits.CHS3 = 1;
  1260  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1261  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1262  006C  169F               	bsf	31,5	;volatile
  1263                           
  1264                           ;ADC.c: 177:             ADCON0bits.CHS2 = 1;
  1265  006D  161F               	bsf	31,4	;volatile
  1266                           
  1267                           ;ADC.c: 178:             ADCON0bits.CHS1 = 0;
  1268  006E  119F               	bcf	31,3	;volatile
  1269                           
  1270                           ;ADC.c: 179:             ADCON0bits.CHS0 = 0;
  1271  006F  111F               	bcf	31,2	;volatile
  1272                           
  1273                           ;ADC.c: 180:             break;
  1274  0070  28B3               	goto	l72
  1275  0071                     l85:	
  1276                           ;ADC.c: 182:         case 13:
  1277                           
  1278                           
  1279                           ;ADC.c: 183:             ADCON0bits.CHS3 = 1;
  1280  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0073  169F               	bsf	31,5	;volatile
  1283                           
  1284                           ;ADC.c: 184:             ADCON0bits.CHS2 = 1;
  1285  0074  161F               	bsf	31,4	;volatile
  1286                           
  1287                           ;ADC.c: 185:             ADCON0bits.CHS1 = 0;
  1288  0075  119F               	bcf	31,3	;volatile
  1289                           
  1290                           ;ADC.c: 186:             ADCON0bits.CHS0 = 1;
  1291  0076  151F               	bsf	31,2	;volatile
  1292                           
  1293                           ;ADC.c: 187:             break;
  1294  0077  28B3               	goto	l72
  1295  0078                     l86:	
  1296                           ;ADC.c: 189:         default:
  1297                           
  1298                           
  1299                           ;ADC.c: 190:             ADCON0bits.CHS3 = 0;
  1300  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1302  007A  129F               	bcf	31,5	;volatile
  1303                           
  1304                           ;ADC.c: 191:             ADCON0bits.CHS2 = 0;
  1305  007B  121F               	bcf	31,4	;volatile
  1306                           
  1307                           ;ADC.c: 192:             ADCON0bits.CHS1 = 0;
  1308  007C  119F               	bcf	31,3	;volatile
  1309                           
  1310                           ;ADC.c: 193:             ADCON0bits.CHS0 = 0;
  1311  007D  111F               	bcf	31,2	;volatile
  1312                           
  1313                           ;ADC.c: 194:             break;
  1314  007E  28B3               	goto	l72
  1315  007F                     l717:
  1316  007F  0875               	movf	ADC_INIT@c,w
  1317  0080  00F3               	movwf	??_ADC_INIT
  1318  0081  01F4               	clrf	??_ADC_INIT+1
  1319                           
  1320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1321                           ; Switch size 1, requested type "simple"
  1322                           ; Number of cases is 1, Range of values is 0 to 0
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte            4     3 (average)
  1326                           ; direct_byte           11     8 (fixed)
  1327                           ; jumptable            260     6 (fixed)
  1328                           ;	Chosen strategy is simple_byte
  1329  0082  0874               	movf	??_ADC_INIT+1,w
  1330  0083  3A00               	xorlw	0	; case 0
  1331  0084  1903               	skipnz
  1332  0085  2887               	goto	l895
  1333  0086  2878               	goto	l86
  1334  0087                     l895:
  1335                           
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 14, Range of values is 0 to 13
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte           43    22 (average)
  1341                           ; direct_byte           50     8 (fixed)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ;	Chosen strategy is simple_byte
  1344  0087  0873               	movf	??_ADC_INIT,w
  1345  0088  3A00               	xorlw	0	; case 0
  1346  0089  1903               	skipnz
  1347  008A  2816               	goto	l71
  1348  008B  3A01               	xorlw	1	; case 1
  1349  008C  1903               	skipnz
  1350  008D  281D               	goto	l73
  1351  008E  3A03               	xorlw	3	; case 2
  1352  008F  1903               	skipnz
  1353  0090  2824               	goto	l74
  1354  0091  3A01               	xorlw	1	; case 3
  1355  0092  1903               	skipnz
  1356  0093  282B               	goto	l75
  1357  0094  3A07               	xorlw	7	; case 4
  1358  0095  1903               	skipnz
  1359  0096  2832               	goto	l76
  1360  0097  3A01               	xorlw	1	; case 5
  1361  0098  1903               	skipnz
  1362  0099  2839               	goto	l77
  1363  009A  3A03               	xorlw	3	; case 6
  1364  009B  1903               	skipnz
  1365  009C  2840               	goto	l78
  1366  009D  3A01               	xorlw	1	; case 7
  1367  009E  1903               	skipnz
  1368  009F  2847               	goto	l79
  1369  00A0  3A0F               	xorlw	15	; case 8
  1370  00A1  1903               	skipnz
  1371  00A2  284E               	goto	l80
  1372  00A3  3A01               	xorlw	1	; case 9
  1373  00A4  1903               	skipnz
  1374  00A5  2855               	goto	l81
  1375  00A6  3A03               	xorlw	3	; case 10
  1376  00A7  1903               	skipnz
  1377  00A8  285C               	goto	l82
  1378  00A9  3A01               	xorlw	1	; case 11
  1379  00AA  1903               	skipnz
  1380  00AB  2863               	goto	l83
  1381  00AC  3A07               	xorlw	7	; case 12
  1382  00AD  1903               	skipnz
  1383  00AE  286A               	goto	l84
  1384  00AF  3A01               	xorlw	1	; case 13
  1385  00B0  1903               	skipnz
  1386  00B1  2871               	goto	l85
  1387  00B2  2878               	goto	l86
  1388  00B3                     l72:
  1389                           
  1390                           ;ADC.c: 197:     ADCON1bits.VCFG0 = 0;
  1391  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1392  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1393  00B5  121F               	bcf	31,4	;volatile
  1394                           
  1395                           ;ADC.c: 198:     ADCON1bits.VCFG1 = 0;
  1396  00B6  129F               	bcf	31,5	;volatile
  1397                           
  1398                           ;ADC.c: 200:     ADCON0bits.ADCS0 = 0;
  1399  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1400  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1401  00B9  131F               	bcf	31,6	;volatile
  1402                           
  1403                           ;ADC.c: 201:     ADCON0bits.ADCS1 = 1;
  1404  00BA  179F               	bsf	31,7	;volatile
  1405                           
  1406                           ;ADC.c: 203:     ADCON1bits.ADFM =0;
  1407  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1408  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1409  00BD  139F               	bcf	31,7	;volatile
  1410                           
  1411                           ;ADC.c: 205:     ADCON0bits.ADON = 1;
  1412  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1413  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1414  00C0  141F               	bsf	31,0	;volatile
  1415  00C1                     l719:
  1416                           
  1417                           ;ADC.c: 206:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1418  00C1  3021               	movlw	33
  1419  00C2  00F3               	movwf	??_ADC_INIT
  1420  00C3                     u57:
  1421  00C3  0BF3               	decfsz	??_ADC_INIT,f
  1422  00C4  28C3               	goto	u57
  1423  00C5                     l721:
  1424                           
  1425                           ;ADC.c: 207:     ADCON0bits.GO_nDONE = 1;
  1426  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1427  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1428  00C7  149F               	bsf	31,1	;volatile
  1429  00C8                     l87:
  1430  00C8  0008               	return
  1431  00C9                     __end_of_ADC_INIT:
  1432                           
  1433                           	psect	text5
  1434  0165                     __ptext5:	
  1435 ;; *************** function _ADC_READ *****************
  1436 ;; Defined at:
  1437 ;;		line 210 in file "ADC.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          2       0       0       0       0
  1454 ;;      Totals:         2       0       0       0       0
  1455 ;;Total ram usage:        2 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 2
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465  0165                     _ADC_READ:	
  1466                           ;psect for function _ADC_READ
  1467                           
  1468  0165                     l761:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _ADC_READ: [wreg]
  1471                           
  1472                           
  1473                           ;ADC.c: 211:     ADCON0bits.GO_nDONE = 1;
  1474  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0167  149F               	bsf	31,1	;volatile
  1477  0168                     l763:
  1478                           
  1479                           ;ADC.c: 212:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1480  0168  3082               	movlw	130
  1481  0169  00F4               	movwf	??_ADC_READ+1
  1482  016A  30DD               	movlw	221
  1483  016B  00F3               	movwf	??_ADC_READ
  1484  016C                     u67:
  1485  016C  0BF3               	decfsz	??_ADC_READ,f
  1486  016D  296C               	goto	u67
  1487  016E  0BF4               	decfsz	??_ADC_READ+1,f
  1488  016F  296C               	goto	u67
  1489  0170  2971               	nop2
  1490  0171                     l90:	
  1491                           ;ADC.c: 213:     while( ADCON0bits.GO_nDONE == 1);
  1492                           
  1493  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0173  189F               	btfsc	31,1	;volatile
  1496  0174  2976               	goto	u21
  1497  0175  2977               	goto	u20
  1498  0176                     u21:
  1499  0176  2971               	goto	l90
  1500  0177                     u20:
  1501  0177                     l765:
  1502                           
  1503                           ;ADC.c: 214:     return ADRESH;
  1504  0177  081E               	movf	30,w	;volatile
  1505  0178                     l93:
  1506  0178  0008               	return
  1507  0179                     __end_of_ADC_READ:
  1508                           
  1509                           	psect	text6
  1510  014F                     __ptext6:	
  1511 ;; *************** function _isr *****************
  1512 ;; Defined at:
  1513 ;;		line 43 in file "MAIN_S2.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0
  1529 ;;      Temps:          2       0       0       0       0
  1530 ;;      Totals:         2       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 1
  1534 ;; This function calls:
  1535 ;;		_spiWrite
  1536 ;; This function is called by:
  1537 ;;		Interrupt level 1
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541  014F                     _isr:	
  1542                           ;psect for function _isr
  1543                           
  1544  014F                     i1l769:
  1545                           
  1546                           ;MAIN_S2.c: 44:     if(PIR1bits.SSPIF == 1){
  1547  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0151  1D8C               	btfss	12,3	;volatile
  1550  0152  2954               	goto	u3_21
  1551  0153  2955               	goto	u3_20
  1552  0154                     u3_21:
  1553  0154  295E               	goto	i1l32
  1554  0155                     u3_20:
  1555  0155                     i1l771:
  1556                           
  1557                           ;MAIN_S2.c: 45:         spiWrite(POT);
  1558  0155  0878               	movf	_POT,w
  1559  0156  120A  118A  218A  120A  118A  	fcall	_spiWrite
  1560  015B                     i1l773:
  1561                           
  1562                           ;MAIN_S2.c: 46:         PIR1bits.SSPIF = 0;
  1563  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1564  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1565  015D  118C               	bcf	12,3	;volatile
  1566  015E                     i1l32:
  1567  015E  0872               	movf	??_isr+1,w
  1568  015F  008A               	movwf	10
  1569  0160  0E71               	swapf	??_isr,w
  1570  0161  0083               	movwf	3
  1571  0162  0EFE               	swapf	btemp,f
  1572  0163  0E7E               	swapf	btemp,w
  1573  0164  0009               	retfie
  1574  0165                     __end_of_isr:
  1575                           
  1576                           	psect	intentry
  1577  0004                     __pintentry:	
  1578                           ;incstack = 0
  1579                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1580                           
  1581  0004                     interrupt_function:
  1582  007E                     saved_w	set	btemp
  1583  0004  00FE               	movwf	btemp
  1584  0005  0E03               	swapf	3,w
  1585  0006  00F1               	movwf	??_isr
  1586  0007  080A               	movf	10,w
  1587  0008  00F2               	movwf	??_isr+1
  1588  0009  120A  118A  294F   	ljmp	_isr
  1589                           
  1590                           	psect	text7
  1591  018A                     __ptext7:	
  1592 ;; *************** function _spiWrite *****************
  1593 ;; Defined at:
  1594 ;;		line 35 in file "SPIS2.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  dat             1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  dat             1    0[COMMON] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         1       0       0       0       0
  1612 ;;Total ram usage:        1 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_isr
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621  018A                     _spiWrite:	
  1622                           ;psect for function _spiWrite
  1623                           
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _spiWrite: [wreg]
  1627                           ;spiWrite@dat stored from wreg
  1628  018A  00F0               	movwf	spiWrite@dat
  1629  018B                     i1l739:
  1630                           
  1631                           ;SPIS2.c: 35: void spiWrite(char dat);SPIS2.c: 36: {;SPIS2.c: 37:     SSPBUF = dat;
  1632  018B  0870               	movf	spiWrite@dat,w
  1633  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1634  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1635  018E  0093               	movwf	19	;volatile
  1636  018F                     i1l111:
  1637  018F  0008               	return
  1638  0190                     __end_of_spiWrite:
  1639  007E                     btemp	set	126	;btemp
  1640  007E                     wtemp0	set	126
  1641                           
  1642                           	psect	idloc
  1643                           
  1644                           ;Config register IDLOC0 @ 0x2000
  1645                           ;	unspecified, using default values
  1646  2000                     	org	8192
  1647  2000  3FFF               	dw	16383
  1648                           
  1649                           ;Config register IDLOC1 @ 0x2001
  1650                           ;	unspecified, using default values
  1651  2001                     	org	8193
  1652  2001  3FFF               	dw	16383
  1653                           
  1654                           ;Config register IDLOC2 @ 0x2002
  1655                           ;	unspecified, using default values
  1656  2002                     	org	8194
  1657  2002  3FFF               	dw	16383
  1658                           
  1659                           ;Config register IDLOC3 @ 0x2003
  1660                           ;	unspecified, using default values
  1661  2003                     	org	8195
  1662  2003  3FFF               	dw	16383
  1663                           
  1664                           	psect	config
  1665                           
  1666                           ;Config register CONFIG1 @ 0x2007
  1667                           ;	Oscillator Selection bits
  1668                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1669                           ;	Watchdog Timer Enable bit
  1670                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1671                           ;	Power-up Timer Enable bit
  1672                           ;	PWRTE = OFF, PWRT disabled
  1673                           ;	RE3/MCLR pin function select bit
  1674                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1675                           ;	Code Protection bit
  1676                           ;	CP = OFF, Program memory code protection is disabled
  1677                           ;	Data Code Protection bit
  1678                           ;	CPD = OFF, Data memory code protection is disabled
  1679                           ;	Brown Out Reset Selection bits
  1680                           ;	BOREN = OFF, BOR disabled
  1681                           ;	Internal External Switchover bit
  1682                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1683                           ;	Fail-Safe Clock Monitor Enabled bit
  1684                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1685                           ;	Low Voltage Programming Enable bit
  1686                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1687                           ;	In-Circuit Debugger Mode bit
  1688                           ;	DEBUG = 0x1, unprogrammed default
  1689  2007                     	org	8199
  1690  2007  20D4               	dw	8404
  1691                           
  1692                           ;Config register CONFIG2 @ 0x2008
  1693                           ;	Brown-out Reset Selection bit
  1694                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1695                           ;	Flash Program Memory Self Write Enable bits
  1696                           ;	WRT = OFF, Write protection off
  1697  2008                     	org	8200
  1698  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     390
                                              7 COMMON     1     1      0
                           _ADC_READ
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     390
                           _ADC_INIT
                         _OSCILLATOR
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _setup
     _ADC_INIT
     _OSCILLATOR
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Jul 30 20:13:24 2023

                     l43 0138                       l60 00D6                       l61 00DA  
                     l62 00DE                       l71 0016                       l63 00E2  
                     l80 004E                       l72 00B3                       l64 00E6  
                     l81 0055                       l73 001D                       l65 00EA  
                     l57 00CE                       l90 0171                       l82 005C  
                     l74 0024                       l66 00EE                       l83 0063  
                     l75 002B                       l59 00D2                       l67 0114  
                     l84 006A                       l76 0032                       l93 0178  
                     l85 0071                       l77 0039                       l86 0078  
                     l78 0040                       l87 00C8                       l79 0047  
                     u20 0177                       u21 0176                       u40 0141  
                     u41 0140                       u57 00C3                       u67 016C  
                    l107 0149                      l108 014E                      l703 00CA  
                    l721 00C5                      l713 0015                      l707 00F2  
                    l717 007F                      l821 0141                      l719 00C1  
                    l823 0143                      l831 011B                      l761 0165  
                    l825 0145                      l841 0128                      l833 011F  
                    l763 0168                      l827 0148                      l819 013A  
                    l843 012B                      l835 0120                      l851 017E  
                    l765 0177                      l845 012E                      l837 0126  
                    l829 0115                      l847 012F                      l839 0127  
                    l849 0179                      l893 00FA                      l895 0087  
                    _POT 0078                      _isr 014F                     ?_isr 0070  
                   i1l32 015E                     u3_20 0155                     u3_21 0154  
       __end_of_ADC_INIT 00C9         __end_of_ADC_READ 0179                     _main 0179  
                   btemp 007E                     start 000C              ?_OSCILLATOR 0070  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l111 018F                    i1l739 018B                    i1l771 0155  
                  i1l773 015B                    i1l769 014F                    _setup 0115  
                  pclath 000A          __end_of_spiInit 014F                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 018A  
                 ??_main 0077                ADC_INIT@c 0075                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_INIT 0070                ?_ADC_READ 0070                   saved_w 007E  
       __end_of_spiWrite 0190                ??_spiInit 0076  __end_of__initialization 0010  
         __pcstackCOMMON 0070              OSCILLATOR@f 0075            __end_of_setup 0139  
             ??_ADC_INIT 0073               ??_ADC_READ 0073                  ??_setup 0077  
           ??_OSCILLATOR 0073               __pmaintext 0179               __pintentry 0004  
     __end_of_OSCILLATOR 0115                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0115                  __ptext2 0139                  __ptext3 00C9  
                __ptext4 0014                  __ptext5 0165                  __ptext6 014F  
                __ptext7 018A                  _spiInit 0139     end_of_initialization 0010  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 0165              __pbssCOMMON 0078  
              ___latbits 0002                 _ADC_INIT 0014                 _ADC_READ 0165  
               ?_spiInit 0073     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _spiWrite 018A  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000               _OSCILLATOR 00C9               _OSCCONbits 008F  
