

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Jul 26 20:56:57 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  0007                     _PORTCbits	set	7
   290  0094                     _SSPSTATbits	set	148
   291  0094                     _SSPSTAT	set	148
   292  0088                     _TRISD	set	136
   293  0086                     _TRISB	set	134
   294  043B                     _TRISC3	set	1083
   295  043D                     _TRISC5	set	1085
   296  043A                     _TRISC2	set	1082
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           	psect	cinit
   301  07FC                     start_initialization:	
   302                           ; #config settings
   303                           
   304  07FC                     __initialization:
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  2FCD   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	cstackCOMMON
   313  0070                     __pcstackCOMMON:
   314  0070                     ?_setup:
   315  0070                     ?_spiWrite:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_spiWrite:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_spiRead:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_spiRead:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_spiInit:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_spiReceiveWait:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_spiReceiveWait:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     spiInit@sDataSample:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     spiWrite@dat:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	1
   348  0071                     spiInit@sClockIdle:
   349                           
   350                           ; 1 bytes @ 0x1
   351  0071                     	ds	1
   352  0072                     spiInit@sTransmitEdge:
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	1
   356  0073                     ??_spiInit:
   357  0073                     spiInit@sType:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     ??_setup:
   364  0074                     ??_main:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 1 bytes @ 0x4
   369  0074                     	ds	2
   370                           
   371                           	psect	maintext
   372  07CD                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 36 in file "MAIN_M.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, pclath, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : B00/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          2       0       0       0       0
   395 ;;      Totals:         2       0       0       0       0
   396 ;;Total ram usage:        2 bytes
   397 ;; Hardware stack levels required when called: 2
   398 ;; This function calls:
   399 ;;		_setup
   400 ;;		_spiRead
   401 ;;		_spiWrite
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407  07CD                     _main:	
   408                           ;psect for function _main
   409                           
   410  07CD                     l729:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   413                           
   414                           
   415                           ;MAIN_M.c: 37:     setup();
   416  07CD  120A  118A  27B5  120A  118A  	fcall	_setup
   417  07D2                     l731:
   418                           
   419                           ;MAIN_M.c: 39:         PORTCbits.RC2 = 0;
   420  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   421  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   422  07D4  1107               	bcf	7,2	;volatile
   423  07D5                     l733:
   424                           
   425                           ;MAIN_M.c: 40:        _delay((unsigned long)((1)*(8000000/4000.0)));
   426  07D5  3003               	movlw	3
   427  07D6  00F5               	movwf	??_main+1
   428  07D7  3097               	movlw	151
   429  07D8  00F4               	movwf	??_main
   430  07D9                     u47:
   431  07D9  0BF4               	decfsz	??_main,f
   432  07DA  2FD9               	goto	u47
   433  07DB  0BF5               	decfsz	??_main+1,f
   434  07DC  2FD9               	goto	u47
   435  07DD  2FDE               	nop2
   436  07DE                     l735:
   437                           
   438                           ;MAIN_M.c: 42:        spiWrite(0xFF);
   439  07DE  30FF               	movlw	255
   440  07DF  120A  118A  2789  120A  118A  	fcall	_spiWrite
   441  07E4                     l737:
   442                           
   443                           ;MAIN_M.c: 43:        PORTD = spiRead();
   444  07E4  120A  118A  2796  120A  118A  	fcall	_spiRead
   445  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   446  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   447  07EB  0088               	movwf	8	;volatile
   448  07EC                     l739:
   449                           
   450                           ;MAIN_M.c: 45:        _delay((unsigned long)((1)*(8000000/4000.0)));
   451  07EC  3003               	movlw	3
   452  07ED  00F5               	movwf	??_main+1
   453  07EE  3097               	movlw	151
   454  07EF  00F4               	movwf	??_main
   455  07F0                     u57:
   456  07F0  0BF4               	decfsz	??_main,f
   457  07F1  2FF0               	goto	u57
   458  07F2  0BF5               	decfsz	??_main+1,f
   459  07F3  2FF0               	goto	u57
   460  07F4  2FF5               	nop2
   461  07F5                     l741:
   462                           
   463                           ;MAIN_M.c: 46:        PORTCbits.RC2 = 1;
   464  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   465  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   466  07F7  1507               	bsf	7,2	;volatile
   467  07F8  2FD2               	goto	l731
   468  07F9  120A  118A  2800   	ljmp	start
   469  07FC                     __end_of_main:
   470                           
   471                           	psect	text1
   472  0789                     __ptext1:	
   473 ;; *************** function _spiWrite *****************
   474 ;; Defined at:
   475 ;;		line 33 in file "SPIM.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  dat             1    wreg     unsigned char 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  dat             1    0[COMMON] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         1       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         1       0       0       0       0
   493 ;;Total ram usage:        1 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502  0789                     _spiWrite:	
   503                           ;psect for function _spiWrite
   504                           
   505                           
   506                           ;incstack = 0
   507                           ; Regs used in _spiWrite: [wreg]
   508                           ;spiWrite@dat stored from wreg
   509  0789  00F0               	movwf	spiWrite@dat
   510  078A                     l683:
   511                           
   512                           ;SPIM.c: 33: void spiWrite(char dat);SPIM.c: 34: {;SPIM.c: 35:     SSPBUF = dat;
   513  078A  0870               	movf	spiWrite@dat,w
   514  078B  1283               	bcf	3,5	;RP0=0, select bank0
   515  078C  1303               	bcf	3,6	;RP1=0, select bank0
   516  078D  0093               	movwf	19	;volatile
   517  078E                     l63:
   518  078E  0008               	return
   519  078F                     __end_of_spiWrite:
   520                           
   521                           	psect	text2
   522  0796                     __ptext2:	
   523 ;; *************** function _spiRead *****************
   524 ;; Defined at:
   525 ;;		line 46 in file "SPIM.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      unsigned char 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 1
   546 ;; This function calls:
   547 ;;		_spiReceiveWait
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553  0796                     _spiRead:	
   554                           ;psect for function _spiRead
   555                           
   556  0796                     l685:	
   557                           ;incstack = 0
   558                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   559                           
   560                           
   561                           ;SPIM.c: 48:     spiReceiveWait();
   562  0796  120A  118A  278F  120A  118A  	fcall	_spiReceiveWait
   563  079B                     l687:
   564                           
   565                           ;SPIM.c: 49:     return(SSPBUF);
   566  079B  1283               	bcf	3,5	;RP0=0, select bank0
   567  079C  1303               	bcf	3,6	;RP1=0, select bank0
   568  079D  0813               	movf	19,w	;volatile
   569  079E                     l71:
   570  079E  0008               	return
   571  079F                     __end_of_spiRead:
   572                           
   573                           	psect	text3
   574  078F                     __ptext3:	
   575 ;; *************** function _spiReceiveWait *****************
   576 ;; Defined at:
   577 ;;		line 28 in file "SPIM.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		None
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_spiRead
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604  078F                     _spiReceiveWait:	
   605                           ;psect for function _spiReceiveWait
   606                           
   607  078F                     l673:	
   608                           ;incstack = 0
   609                           ; Regs used in _spiReceiveWait: []
   610                           
   611  078F                     l57:	
   612                           ;SPIM.c: 30:     while ( !SSPSTATbits.BF );
   613                           
   614  078F  1683               	bsf	3,5	;RP0=1, select bank1
   615  0790  1303               	bcf	3,6	;RP1=0, select bank1
   616  0791  1C14               	btfss	20,0	;volatile
   617  0792  2F94               	goto	u21
   618  0793  2F95               	goto	u20
   619  0794                     u21:
   620  0794  2F8F               	goto	l57
   621  0795                     u20:
   622  0795                     l60:
   623  0795  0008               	return
   624  0796                     __end_of_spiReceiveWait:
   625                           
   626                           	psect	text4
   627  07B5                     __ptext4:	
   628 ;; *************** function _setup *****************
   629 ;; Defined at:
   630 ;;		line 54 in file "MAIN_M.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 1
   651 ;; This function calls:
   652 ;;		_spiInit
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658  07B5                     _setup:	
   659                           ;psect for function _setup
   660                           
   661  07B5                     l721:	
   662                           ;incstack = 0
   663                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   664                           
   665                           
   666                           ;MAIN_M.c: 56:     ANSEL = 0;
   667  07B5  1683               	bsf	3,5	;RP0=1, select bank3
   668  07B6  1703               	bsf	3,6	;RP1=1, select bank3
   669  07B7  0188               	clrf	8	;volatile
   670                           
   671                           ;MAIN_M.c: 57:     ANSELH = 0;
   672  07B8  0189               	clrf	9	;volatile
   673  07B9                     l723:
   674                           
   675                           ;MAIN_M.c: 58:     TRISC2 = 0;
   676  07B9  1683               	bsf	3,5	;RP0=1, select bank1
   677  07BA  1303               	bcf	3,6	;RP1=0, select bank1
   678  07BB  1107               	bcf	7,2	;volatile
   679                           
   680                           ;MAIN_M.c: 59:     TRISB = 0;
   681  07BC  0186               	clrf	6	;volatile
   682                           
   683                           ;MAIN_M.c: 60:     TRISD = 0;
   684  07BD  0188               	clrf	8	;volatile
   685                           
   686                           ;MAIN_M.c: 61:     PORTB = 0;
   687  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   688  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   689  07C0  0186               	clrf	6	;volatile
   690                           
   691                           ;MAIN_M.c: 62:     PORTD = 0;
   692  07C1  0188               	clrf	8	;volatile
   693  07C2                     l725:
   694                           
   695                           ;MAIN_M.c: 63:     PORTCbits.RC2 = 1;
   696  07C2  1507               	bsf	7,2	;volatile
   697  07C3                     l727:
   698                           
   699                           ;MAIN_M.c: 64:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   700  07C3  01F0               	clrf	spiInit@sDataSample
   701  07C4  01F1               	clrf	spiInit@sClockIdle
   702  07C5  01F2               	clrf	spiInit@sTransmitEdge
   703  07C6  3020               	movlw	32
   704  07C7  120A  118A  279F  120A  118A  	fcall	_spiInit
   705  07CC                     l37:
   706  07CC  0008               	return
   707  07CD                     __end_of_setup:
   708                           
   709                           	psect	text5
   710  079F                     __ptext5:	
   711 ;; *************** function _spiInit *****************
   712 ;; Defined at:
   713 ;;		line 11 in file "SPIM.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  sType           1    wreg     enum E1292
   716 ;;  sDataSample     1    0[COMMON] enum E1300
   717 ;;  sClockIdle      1    1[COMMON] enum E1304
   718 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  sType           1    3[COMMON] enum E1292
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         3       0       0       0       0
   731 ;;      Locals:         1       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0
   733 ;;      Totals:         4       0       0       0       0
   734 ;;Total ram usage:        4 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_setup
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743  079F                     _spiInit:	
   744                           ;psect for function _spiInit
   745                           
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   749                           ;spiInit@sType stored from wreg
   750  079F  00F3               	movwf	spiInit@sType
   751  07A0                     l711:
   752                           
   753                           ;SPIM.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIM.c: 12: {;SPIM.c: 13:     TRISC5 = 0;
   754  07A0  1683               	bsf	3,5	;RP0=1, select bank1
   755  07A1  1303               	bcf	3,6	;RP1=0, select bank1
   756  07A2  1287               	bcf	7,5	;volatile
   757                           
   758                           ;SPIM.c: 14:     if(sType & 0b00000100)
   759  07A3  1D73               	btfss	spiInit@sType,2
   760  07A4  2FA6               	goto	u31
   761  07A5  2FA7               	goto	u30
   762  07A6                     u31:
   763  07A6  2FAB               	goto	l717
   764  07A7                     u30:
   765  07A7                     l713:
   766                           
   767                           ;SPIM.c: 15:     {;SPIM.c: 16:         SSPSTAT = sTransmitEdge;
   768  07A7  0872               	movf	spiInit@sTransmitEdge,w
   769  07A8  0094               	movwf	20	;volatile
   770  07A9                     l715:
   771                           
   772                           ;SPIM.c: 17:         TRISC3 = 1;
   773  07A9  1587               	bsf	7,3	;volatile
   774                           
   775                           ;SPIM.c: 18:     }
   776  07AA  2FAF               	goto	l53
   777  07AB                     l717:
   778                           
   779                           ;SPIM.c: 20:     {;SPIM.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
   780  07AB  0870               	movf	spiInit@sDataSample,w
   781  07AC  0472               	iorwf	spiInit@sTransmitEdge,w
   782  07AD  0094               	movwf	20	;volatile
   783  07AE                     l719:
   784                           
   785                           ;SPIM.c: 22:         TRISC3 = 0;
   786  07AE  1187               	bcf	7,3	;volatile
   787  07AF                     l53:	
   788                           ;SPIM.c: 23:     }
   789                           
   790                           
   791                           ;SPIM.c: 25:     SSPCON = sType | sClockIdle;
   792  07AF  0873               	movf	spiInit@sType,w
   793  07B0  0471               	iorwf	spiInit@sClockIdle,w
   794  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   795  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   796  07B3  0094               	movwf	20	;volatile
   797  07B4                     l54:
   798  07B4  0008               	return
   799  07B5                     __end_of_spiInit:
   800  007E                     btemp	set	126	;btemp
   801  007E                     wtemp0	set	126
   802                           
   803                           	psect	idloc
   804                           
   805                           ;Config register IDLOC0 @ 0x2000
   806                           ;	unspecified, using default values
   807  2000                     	org	8192
   808  2000  3FFF               	dw	16383
   809                           
   810                           ;Config register IDLOC1 @ 0x2001
   811                           ;	unspecified, using default values
   812  2001                     	org	8193
   813  2001  3FFF               	dw	16383
   814                           
   815                           ;Config register IDLOC2 @ 0x2002
   816                           ;	unspecified, using default values
   817  2002                     	org	8194
   818  2002  3FFF               	dw	16383
   819                           
   820                           ;Config register IDLOC3 @ 0x2003
   821                           ;	unspecified, using default values
   822  2003                     	org	8195
   823  2003  3FFF               	dw	16383
   824                           
   825                           	psect	config
   826                           
   827                           ;Config register CONFIG1 @ 0x2007
   828                           ;	Oscillator Selection bits
   829                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   830                           ;	Watchdog Timer Enable bit
   831                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   832                           ;	Power-up Timer Enable bit
   833                           ;	PWRTE = OFF, PWRT disabled
   834                           ;	RE3/MCLR pin function select bit
   835                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   836                           ;	Code Protection bit
   837                           ;	CP = OFF, Program memory code protection is disabled
   838                           ;	Data Code Protection bit
   839                           ;	CPD = OFF, Data memory code protection is disabled
   840                           ;	Brown Out Reset Selection bits
   841                           ;	BOREN = OFF, BOR disabled
   842                           ;	Internal External Switchover bit
   843                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   844                           ;	Fail-Safe Clock Monitor Enabled bit
   845                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   846                           ;	Low Voltage Programming Enable bit
   847                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   848                           ;	In-Circuit Debugger Mode bit
   849                           ;	DEBUG = 0x1, unprogrammed default
   850  2007                     	org	8199
   851  2007  20D4               	dw	8404
   852                           
   853                           ;Config register CONFIG2 @ 0x2008
   854                           ;	Brown-out Reset Selection bit
   855                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   856                           ;	Flash Program Memory Self Write Enable bits
   857                           ;	WRT = OFF, Write protection off
   858  2008                     	org	8200
   859  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Jul 26 20:56:57 2023

            _SSPSTATbits 0094                       l60 0795                       l53 07AF  
                     l37 07CC                       l54 07B4                       l71 079E  
                     l63 078E                       l57 078F                       u20 0795  
                     u21 0794                       u30 07A7                       u31 07A6  
                     u47 07D9                       u57 07F0                      l711 07A0  
                    l713 07A7                      l721 07B5                      l715 07A9  
                    l723 07B9                      l731 07D2                      l717 07AB  
                    l725 07C2                      l741 07F5                      l733 07D5  
                    l719 07AE                      l727 07C3                      l735 07DE  
                    l673 078F                      l737 07E4                      l729 07CD  
                    l683 078A                      l739 07EC                      l685 0796  
                    l687 079B                     _main 07CD                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _setup 07B5          __end_of_spiInit 07B5  
        __end_of_spiRead 079F                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_spiWrite 078F                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07CD                  ??_setup 0074               __pmaintext 07CD  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0789  
                __ptext2 0796                  __ptext3 078F                  __ptext4 07B5  
                __ptext5 079F                  _spiInit 079F                  _spiRead 0796  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTCbits 0007  
            spiWrite@dat 0070           _spiReceiveWait 078F      start_initialization 07FC  
 __end_of_spiReceiveWait 0796                ___latbits 0002          ?_spiReceiveWait 0070  
               ?_spiInit 0070                 ?_spiRead 0070     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070                 _spiWrite 0789             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
