

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Jul 27 16:15:36 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  0008                     _PORTD	set	8
   288  0006                     _PORTB	set	6
   289  0007                     _PORTCbits	set	7
   290  0094                     _SSPSTATbits	set	148
   291  0094                     _SSPSTAT	set	148
   292  0088                     _TRISD	set	136
   293  0086                     _TRISB	set	134
   294  0087                     _TRISCbits	set	135
   295  043B                     _TRISC3	set	1083
   296  043D                     _TRISC5	set	1085
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           	psect	cinit
   301  07FC                     start_initialization:	
   302                           ; #config settings
   303                           
   304  07FC                     __initialization:
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  2FAB   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	cstackCOMMON
   313  0070                     __pcstackCOMMON:
   314  0070                     ?_setup:
   315  0070                     ?_spiWrite:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_spiWrite:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_spiRead:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_spiRead:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_spiInit:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_spiReceiveWait:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_spiReceiveWait:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     spiInit@sDataSample:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     spiWrite@dat:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	1
   348  0071                     spiInit@sClockIdle:
   349                           
   350                           ; 1 bytes @ 0x1
   351  0071                     	ds	1
   352  0072                     spiInit@sTransmitEdge:
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	1
   356  0073                     ??_spiInit:
   357  0073                     spiInit@sType:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     ??_setup:
   364  0074                     ??_main:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 1 bytes @ 0x4
   369  0074                     	ds	2
   370                           
   371                           	psect	maintext
   372  07AB                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 36 in file "MAIN_M.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, pclath, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : B00/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          2       0       0       0       0
   395 ;;      Totals:         2       0       0       0       0
   396 ;;Total ram usage:        2 bytes
   397 ;; Hardware stack levels required when called: 2
   398 ;; This function calls:
   399 ;;		_setup
   400 ;;		_spiRead
   401 ;;		_spiWrite
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407  07AB                     _main:	
   408                           ;psect for function _main
   409                           
   410  07AB                     l749:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   413                           
   414                           
   415                           ;MAIN_M.c: 37:     setup();
   416  07AB  120A  118A  2791  120A  118A  	fcall	_setup
   417  07B0                     l751:
   418                           
   419                           ;MAIN_M.c: 39:         PORTCbits.RC2 = 0;
   420  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   421  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   422  07B2  1107               	bcf	7,2	;volatile
   423  07B3                     l753:
   424                           
   425                           ;MAIN_M.c: 40:         PORTCbits.RC1 = 1;
   426  07B3  1487               	bsf	7,1	;volatile
   427  07B4                     l755:
   428                           
   429                           ;MAIN_M.c: 41:        _delay((unsigned long)((1)*(8000000/4000.0)));
   430  07B4  3003               	movlw	3
   431  07B5  00F5               	movwf	??_main+1
   432  07B6  3097               	movlw	151
   433  07B7  00F4               	movwf	??_main
   434  07B8                     u47:
   435  07B8  0BF4               	decfsz	??_main,f
   436  07B9  2FB8               	goto	u47
   437  07BA  0BF5               	decfsz	??_main+1,f
   438  07BB  2FB8               	goto	u47
   439  07BC  2FBD               	nop2
   440  07BD                     l757:
   441                           
   442                           ;MAIN_M.c: 43:        spiWrite(0xFF);
   443  07BD  30FF               	movlw	255
   444  07BE  120A  118A  2765  120A  118A  	fcall	_spiWrite
   445  07C3                     l759:
   446                           
   447                           ;MAIN_M.c: 44:        PORTB = spiRead();
   448  07C3  120A  118A  2772  120A  118A  	fcall	_spiRead
   449  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   450  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   451  07CA  0086               	movwf	6	;volatile
   452  07CB                     l761:
   453                           
   454                           ;MAIN_M.c: 46:        _delay((unsigned long)((1)*(8000000/4000.0)));
   455  07CB  3003               	movlw	3
   456  07CC  00F5               	movwf	??_main+1
   457  07CD  3097               	movlw	151
   458  07CE  00F4               	movwf	??_main
   459  07CF                     u57:
   460  07CF  0BF4               	decfsz	??_main,f
   461  07D0  2FCF               	goto	u57
   462  07D1  0BF5               	decfsz	??_main+1,f
   463  07D2  2FCF               	goto	u57
   464  07D3  2FD4               	nop2
   465  07D4                     l763:
   466                           
   467                           ;MAIN_M.c: 47:        PORTCbits.RC2 = 1;
   468  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   469  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   470  07D6  1507               	bsf	7,2	;volatile
   471  07D7                     l765:
   472                           
   473                           ;MAIN_M.c: 48:        PORTCbits.RC1 = 0;
   474  07D7  1087               	bcf	7,1	;volatile
   475  07D8                     l767:
   476                           
   477                           ;MAIN_M.c: 49:        _delay((unsigned long)((1)*(8000000/4000.0)));
   478  07D8  3003               	movlw	3
   479  07D9  00F5               	movwf	??_main+1
   480  07DA  3097               	movlw	151
   481  07DB  00F4               	movwf	??_main
   482  07DC                     u67:
   483  07DC  0BF4               	decfsz	??_main,f
   484  07DD  2FDC               	goto	u67
   485  07DE  0BF5               	decfsz	??_main+1,f
   486  07DF  2FDC               	goto	u67
   487  07E0  2FE1               	nop2
   488  07E1                     l769:
   489                           
   490                           ;MAIN_M.c: 51:        spiWrite(0xFF);
   491  07E1  30FF               	movlw	255
   492  07E2  120A  118A  2765  120A  118A  	fcall	_spiWrite
   493  07E7                     l771:
   494                           
   495                           ;MAIN_M.c: 52:        PORTD = spiRead();
   496  07E7  120A  118A  2772  120A  118A  	fcall	_spiRead
   497  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   498  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   499  07EE  0088               	movwf	8	;volatile
   500  07EF                     l773:
   501                           
   502                           ;MAIN_M.c: 54:        _delay((unsigned long)((1)*(8000000/4000.0)));
   503  07EF  3003               	movlw	3
   504  07F0  00F5               	movwf	??_main+1
   505  07F1  3097               	movlw	151
   506  07F2  00F4               	movwf	??_main
   507  07F3                     u77:
   508  07F3  0BF4               	decfsz	??_main,f
   509  07F4  2FF3               	goto	u77
   510  07F5  0BF5               	decfsz	??_main+1,f
   511  07F6  2FF3               	goto	u77
   512  07F7  2FF8               	nop2
   513  07F8  2FB0               	goto	l751
   514  07F9  120A  118A  2800   	ljmp	start
   515  07FC                     __end_of_main:
   516                           
   517                           	psect	text1
   518  0765                     __ptext1:	
   519 ;; *************** function _spiWrite *****************
   520 ;; Defined at:
   521 ;;		line 33 in file "SPIM.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  dat             1    wreg     unsigned char 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  dat             1    0[COMMON] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         1       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0
   538 ;;      Totals:         1       0       0       0       0
   539 ;;Total ram usage:        1 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548  0765                     _spiWrite:	
   549                           ;psect for function _spiWrite
   550                           
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _spiWrite: [wreg]
   554                           ;spiWrite@dat stored from wreg
   555  0765  00F0               	movwf	spiWrite@dat
   556  0766                     l687:
   557                           
   558                           ;SPIM.c: 33: void spiWrite(char dat);SPIM.c: 34: {;SPIM.c: 35:     SSPBUF = dat;
   559  0766  0870               	movf	spiWrite@dat,w
   560  0767  1283               	bcf	3,5	;RP0=0, select bank0
   561  0768  1303               	bcf	3,6	;RP1=0, select bank0
   562  0769  0093               	movwf	19	;volatile
   563  076A                     l63:
   564  076A  0008               	return
   565  076B                     __end_of_spiWrite:
   566                           
   567                           	psect	text2
   568  0772                     __ptext2:	
   569 ;; *************** function _spiRead *****************
   570 ;; Defined at:
   571 ;;		line 46 in file "SPIM.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      unsigned char 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 1
   592 ;; This function calls:
   593 ;;		_spiReceiveWait
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599  0772                     _spiRead:	
   600                           ;psect for function _spiRead
   601                           
   602  0772                     l689:	
   603                           ;incstack = 0
   604                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   605                           
   606                           
   607                           ;SPIM.c: 48:     spiReceiveWait();
   608  0772  120A  118A  276B  120A  118A  	fcall	_spiReceiveWait
   609  0777                     l691:
   610                           
   611                           ;SPIM.c: 49:     return(SSPBUF);
   612  0777  1283               	bcf	3,5	;RP0=0, select bank0
   613  0778  1303               	bcf	3,6	;RP1=0, select bank0
   614  0779  0813               	movf	19,w	;volatile
   615  077A                     l71:
   616  077A  0008               	return
   617  077B                     __end_of_spiRead:
   618                           
   619                           	psect	text3
   620  076B                     __ptext3:	
   621 ;; *************** function _spiReceiveWait *****************
   622 ;; Defined at:
   623 ;;		line 28 in file "SPIM.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		None
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_spiRead
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  076B                     _spiReceiveWait:	
   651                           ;psect for function _spiReceiveWait
   652                           
   653  076B                     l673:	
   654                           ;incstack = 0
   655                           ; Regs used in _spiReceiveWait: []
   656                           
   657  076B                     l57:	
   658                           ;SPIM.c: 30:     while ( !SSPSTATbits.BF );
   659                           
   660  076B  1683               	bsf	3,5	;RP0=1, select bank1
   661  076C  1303               	bcf	3,6	;RP1=0, select bank1
   662  076D  1C14               	btfss	20,0	;volatile
   663  076E  2F70               	goto	u21
   664  076F  2F71               	goto	u20
   665  0770                     u21:
   666  0770  2F6B               	goto	l57
   667  0771                     u20:
   668  0771                     l60:
   669  0771  0008               	return
   670  0772                     __end_of_spiReceiveWait:
   671                           
   672                           	psect	text4
   673  0791                     __ptext4:	
   674 ;; *************** function _setup *****************
   675 ;; Defined at:
   676 ;;		line 60 in file "MAIN_M.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 1
   697 ;; This function calls:
   698 ;;		_spiInit
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704  0791                     _setup:	
   705                           ;psect for function _setup
   706                           
   707  0791                     l737:	
   708                           ;incstack = 0
   709                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   710                           
   711                           
   712                           ;MAIN_M.c: 62:     ANSEL = 0x00;
   713  0791  1683               	bsf	3,5	;RP0=1, select bank3
   714  0792  1703               	bsf	3,6	;RP1=1, select bank3
   715  0793  0188               	clrf	8	;volatile
   716                           
   717                           ;MAIN_M.c: 63:     ANSELH = 0x00;
   718  0794  0189               	clrf	9	;volatile
   719  0795                     l739:
   720                           
   721                           ;MAIN_M.c: 65:     TRISCbits.TRISC2 = 0;
   722  0795  1683               	bsf	3,5	;RP0=1, select bank1
   723  0796  1303               	bcf	3,6	;RP1=0, select bank1
   724  0797  1107               	bcf	7,2	;volatile
   725  0798                     l741:
   726                           
   727                           ;MAIN_M.c: 66:     TRISCbits.TRISC1 = 0;
   728  0798  1087               	bcf	7,1	;volatile
   729                           
   730                           ;MAIN_M.c: 67:     TRISB = 0x00;
   731  0799  0186               	clrf	6	;volatile
   732                           
   733                           ;MAIN_M.c: 68:     TRISD = 0x00;
   734  079A  0188               	clrf	8	;volatile
   735                           
   736                           ;MAIN_M.c: 70:     PORTD = 0x00;
   737  079B  1283               	bcf	3,5	;RP0=0, select bank0
   738  079C  1303               	bcf	3,6	;RP1=0, select bank0
   739  079D  0188               	clrf	8	;volatile
   740                           
   741                           ;MAIN_M.c: 71:     PORTB = 0x00;
   742  079E  0186               	clrf	6	;volatile
   743  079F                     l743:
   744                           
   745                           ;MAIN_M.c: 72:     PORTCbits.RC2 = 1;
   746  079F  1507               	bsf	7,2	;volatile
   747  07A0                     l745:
   748                           
   749                           ;MAIN_M.c: 73:     PORTCbits.RC1 = 1;
   750  07A0  1487               	bsf	7,1	;volatile
   751  07A1                     l747:
   752                           
   753                           ;MAIN_M.c: 75:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   754  07A1  01F0               	clrf	spiInit@sDataSample
   755  07A2  01F1               	clrf	spiInit@sClockIdle
   756  07A3  01F2               	clrf	spiInit@sTransmitEdge
   757  07A4  3020               	movlw	32
   758  07A5  120A  118A  277B  120A  118A  	fcall	_spiInit
   759  07AA                     l37:
   760  07AA  0008               	return
   761  07AB                     __end_of_setup:
   762                           
   763                           	psect	text5
   764  077B                     __ptext5:	
   765 ;; *************** function _spiInit *****************
   766 ;; Defined at:
   767 ;;		line 11 in file "SPIM.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  sType           1    wreg     enum E1292
   770 ;;  sDataSample     1    0[COMMON] enum E1300
   771 ;;  sClockIdle      1    1[COMMON] enum E1304
   772 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  sType           1    3[COMMON] enum E1292
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         3       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         4       0       0       0       0
   788 ;;Total ram usage:        4 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_setup
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797  077B                     _spiInit:	
   798                           ;psect for function _spiInit
   799                           
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   803                           ;spiInit@sType stored from wreg
   804  077B  00F3               	movwf	spiInit@sType
   805  077C                     l727:
   806                           
   807                           ;SPIM.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIM.c: 12: {;SPIM.c: 13:     TRISC5 = 0;
   808  077C  1683               	bsf	3,5	;RP0=1, select bank1
   809  077D  1303               	bcf	3,6	;RP1=0, select bank1
   810  077E  1287               	bcf	7,5	;volatile
   811                           
   812                           ;SPIM.c: 14:     if(sType & 0b00000100)
   813  077F  1D73               	btfss	spiInit@sType,2
   814  0780  2F82               	goto	u31
   815  0781  2F83               	goto	u30
   816  0782                     u31:
   817  0782  2F87               	goto	l733
   818  0783                     u30:
   819  0783                     l729:
   820                           
   821                           ;SPIM.c: 15:     {;SPIM.c: 16:         SSPSTAT = sTransmitEdge;
   822  0783  0872               	movf	spiInit@sTransmitEdge,w
   823  0784  0094               	movwf	20	;volatile
   824  0785                     l731:
   825                           
   826                           ;SPIM.c: 17:         TRISC3 = 1;
   827  0785  1587               	bsf	7,3	;volatile
   828                           
   829                           ;SPIM.c: 18:     }
   830  0786  2F8B               	goto	l53
   831  0787                     l733:
   832                           
   833                           ;SPIM.c: 20:     {;SPIM.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
   834  0787  0870               	movf	spiInit@sDataSample,w
   835  0788  0472               	iorwf	spiInit@sTransmitEdge,w
   836  0789  0094               	movwf	20	;volatile
   837  078A                     l735:
   838                           
   839                           ;SPIM.c: 22:         TRISC3 = 0;
   840  078A  1187               	bcf	7,3	;volatile
   841  078B                     l53:	
   842                           ;SPIM.c: 23:     }
   843                           
   844                           
   845                           ;SPIM.c: 25:     SSPCON = sType | sClockIdle;
   846  078B  0873               	movf	spiInit@sType,w
   847  078C  0471               	iorwf	spiInit@sClockIdle,w
   848  078D  1283               	bcf	3,5	;RP0=0, select bank0
   849  078E  1303               	bcf	3,6	;RP1=0, select bank0
   850  078F  0094               	movwf	20	;volatile
   851  0790                     l54:
   852  0790  0008               	return
   853  0791                     __end_of_spiInit:
   854  007E                     btemp	set	126	;btemp
   855  007E                     wtemp0	set	126
   856                           
   857                           	psect	idloc
   858                           
   859                           ;Config register IDLOC0 @ 0x2000
   860                           ;	unspecified, using default values
   861  2000                     	org	8192
   862  2000  3FFF               	dw	16383
   863                           
   864                           ;Config register IDLOC1 @ 0x2001
   865                           ;	unspecified, using default values
   866  2001                     	org	8193
   867  2001  3FFF               	dw	16383
   868                           
   869                           ;Config register IDLOC2 @ 0x2002
   870                           ;	unspecified, using default values
   871  2002                     	org	8194
   872  2002  3FFF               	dw	16383
   873                           
   874                           ;Config register IDLOC3 @ 0x2003
   875                           ;	unspecified, using default values
   876  2003                     	org	8195
   877  2003  3FFF               	dw	16383
   878                           
   879                           	psect	config
   880                           
   881                           ;Config register CONFIG1 @ 0x2007
   882                           ;	Oscillator Selection bits
   883                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   884                           ;	Watchdog Timer Enable bit
   885                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   886                           ;	Power-up Timer Enable bit
   887                           ;	PWRTE = OFF, PWRT disabled
   888                           ;	RE3/MCLR pin function select bit
   889                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   890                           ;	Code Protection bit
   891                           ;	CP = OFF, Program memory code protection is disabled
   892                           ;	Data Code Protection bit
   893                           ;	CPD = OFF, Data memory code protection is disabled
   894                           ;	Brown Out Reset Selection bits
   895                           ;	BOREN = OFF, BOR disabled
   896                           ;	Internal External Switchover bit
   897                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   898                           ;	Fail-Safe Clock Monitor Enabled bit
   899                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   900                           ;	Low Voltage Programming Enable bit
   901                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   902                           ;	In-Circuit Debugger Mode bit
   903                           ;	DEBUG = 0x1, unprogrammed default
   904  2007                     	org	8199
   905  2007  20D4               	dw	8404
   906                           
   907                           ;Config register CONFIG2 @ 0x2008
   908                           ;	Brown-out Reset Selection bit
   909                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   910                           ;	Flash Program Memory Self Write Enable bits
   911                           ;	WRT = OFF, Write protection off
   912  2008                     	org	8200
   913  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Jul 27 16:15:36 2023

            _SSPSTATbits 0094                       l60 0771                       l53 078B  
                     l37 07AA                       l54 0790                       l71 077A  
                     l63 076A                       l57 076B                       u20 0771  
                     u21 0770                       u30 0783                       u31 0782  
                     u47 07B8                       u57 07CF                       u67 07DC  
                     u77 07F3                      l731 0785                      l733 0787  
                    l741 0798                      l735 078A                      l727 077C  
                    l743 079F                      l751 07B0                      l729 0783  
                    l745 07A0                      l737 0791                      l673 076B  
                    l761 07CB                      l753 07B3                      l747 07A1  
                    l739 0795                      l691 0777                      l771 07E7  
                    l763 07D4                      l755 07B4                      l773 07EF  
                    l765 07D7                      l757 07BD                      l749 07AB  
                    l687 0766                      l767 07D8                      l759 07C3  
                    l689 0772                      l769 07E1                     _main 07AB  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _setup 0791  
        __end_of_spiInit 0791          __end_of_spiRead 077B                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_spiWrite 076B                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07AB                  ??_setup 0074               __pmaintext 07AB  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0765  
                __ptext2 0772                  __ptext3 076B                  __ptext4 0791  
                __ptext5 077B                  _spiInit 077B                  _spiRead 0772  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTCbits 0007  
              _TRISCbits 0087              spiWrite@dat 0070           _spiReceiveWait 076B  
    start_initialization 07FC   __end_of_spiReceiveWait 0772                ___latbits 0002  
        ?_spiReceiveWait 0070                 ?_spiInit 0070                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070                 _spiWrite 0765  
           spiInit@sType 0073        spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
