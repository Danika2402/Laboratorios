

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Aug 01 21:35:40 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  001E                     _ADRESH	set	30
   372  001F                     _ADCON0bits	set	31
   373  0013                     _SSPBUF	set	19
   374  0014                     _SSPCON	set	20
   375  0006                     _PORTB	set	6
   376  000C                     _PIR1bits	set	12
   377  000B                     _INTCONbits	set	11
   378  0031                     _RB1	set	49
   379  0030                     _RB0	set	48
   380  009F                     _ADCON1bits	set	159
   381  008F                     _OSCCONbits	set	143
   382  0096                     _IOCBbits	set	150
   383  0095                     _WPUBbits	set	149
   384  0081                     _OPTION_REGbits	set	129
   385  0094                     _SSPSTATbits	set	148
   386  0094                     _SSPSTAT	set	148
   387  0085                     _TRISAbits	set	133
   388  008C                     _PIE1bits	set	140
   389  0086                     _TRISB	set	134
   390  043B                     _TRISC3	set	1083
   391  043D                     _TRISC5	set	1085
   392  0189                     _ANSELH	set	393
   393  0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399  000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   403  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   404  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   405  0012                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0012                     __end_of__initialization:
   409  0012  0183               	clrf	3
   410  0013  120A  118A  29C6   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0077                     __pbssCOMMON:
   414  0077                     _cont:
   415  0077                     	ds	1
   416  0078                     _check:
   417  0078                     	ds	1
   418  0079                     _POT:
   419  0079                     	ds	1
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:
   423  0070                     ?_spiRead:
   424  0070                     ??_spiRead:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiWrite:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_setup:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_ADC_READ:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_OSCILLATOR:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_IOC_INT:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_ADC_INIT:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_isr:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_spiReceiveWait:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_spiReceiveWait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     spiWrite@dat:	
   461                           ; 1 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0070                     	ds	1
   466  0071                     ??_isr:
   467                           
   468                           ; 1 bytes @ 0x1
   469  0071                     	ds	3
   470  0074                     ??_ADC_READ:
   471  0074                     ??_OSCILLATOR:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ??_IOC_INT:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ??_ADC_INIT:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ?_spiInit:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     spiInit@sDataSample:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     IOC_INT@a:	
   487                           ; 1 bytes @ 0x4
   488                           
   489                           
   490                           ; 1 bytes @ 0x4
   491  0074                     	ds	1
   492  0075                     spiInit@sClockIdle:
   493                           
   494                           ; 1 bytes @ 0x5
   495  0075                     	ds	1
   496  0076                     spiInit@sTransmitEdge:
   497  0076                     OSCILLATOR@f:	
   498                           ; 1 bytes @ 0x6
   499                           
   500  0076                     ADC_INIT@c:	
   501                           ; 1 bytes @ 0x6
   502                           
   503                           
   504                           ; 1 bytes @ 0x6
   505  0076                     	ds	1
   506  0077                     ??_setup:
   507  0077                     ??_spiInit:	
   508                           ; 1 bytes @ 0x7
   509                           
   510                           
   511                           	psect	cstackBANK0
   512  0020                     __pcstackBANK0:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0020                     spiInit@sType:
   516                           
   517                           ; 1 bytes @ 0x0
   518  0020                     	ds	1
   519  0021                     ??_main:
   520                           
   521                           ; 1 bytes @ 0x1
   522  0021                     	ds	1
   523                           
   524                           	psect	maintext
   525  01C6                     __pmaintext:	
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 67 in file "MAIN_S1.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : B00/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       1       0       0       0
   548 ;;      Totals:         0       1       0       0       0
   549 ;;Total ram usage:        1 bytes
   550 ;; Hardware stack levels required when called: 5
   551 ;; This function calls:
   552 ;;		_ADC_READ
   553 ;;		_setup
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559  01C6                     _main:	
   560                           ;psect for function _main
   561                           
   562  01C6                     l1022:	
   563                           ;incstack = 0
   564                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   565                           
   566                           
   567                           ;MAIN_S1.c: 68:     setup();
   568  01C6  120A  118A  2161  120A  118A  	fcall	_setup
   569  01CB                     l1024:
   570                           
   571                           ;MAIN_S1.c: 70:        POT = ADC_READ();
   572  01CB  120A  118A  21B2  120A  118A  	fcall	_ADC_READ
   573  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   574  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   575  01D2  00A1               	movwf	??_main
   576  01D3  0821               	movf	??_main,w
   577  01D4  00F9               	movwf	_POT
   578  01D5  29CB               	goto	l1024
   579  01D6  120A  118A  280C   	ljmp	start
   580  01D9                     __end_of_main:
   581                           
   582                           	psect	text1
   583  0161                     __ptext1:	
   584 ;; *************** function _setup *****************
   585 ;; Defined at:
   586 ;;		line 75 in file "MAIN_S1.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 4
   607 ;; This function calls:
   608 ;;		_ADC_INIT
   609 ;;		_IOC_INT
   610 ;;		_OSCILLATOR
   611 ;;		_spiInit
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617  0161                     _setup:	
   618                           ;psect for function _setup
   619                           
   620  0161                     l994:	
   621                           ;incstack = 0
   622                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   623                           
   624                           
   625                           ;MAIN_S1.c: 77:     OSCILLATOR(1);
   626  0161  3001               	movlw	1
   627  0162  120A  118A  20CB  120A  118A  	fcall	_OSCILLATOR
   628  0167                     l996:
   629                           
   630                           ;MAIN_S1.c: 79:     ANSEL = 0b00100000;
   631  0167  3020               	movlw	32
   632  0168  1683               	bsf	3,5	;RP0=1, select bank3
   633  0169  1703               	bsf	3,6	;RP1=1, select bank3
   634  016A  0088               	movwf	8	;volatile
   635  016B                     l998:
   636                           
   637                           ;MAIN_S1.c: 80:     ANSELH = 0x00;
   638  016B  0189               	clrf	9	;volatile
   639  016C                     l1000:
   640                           
   641                           ;MAIN_S1.c: 82:     TRISB = 0b00000011;
   642  016C  3003               	movlw	3
   643  016D  1683               	bsf	3,5	;RP0=1, select bank1
   644  016E  1303               	bcf	3,6	;RP1=0, select bank1
   645  016F  0086               	movwf	6	;volatile
   646  0170                     l1002:
   647                           
   648                           ;MAIN_S1.c: 83:     PORTB = 0;
   649  0170  1283               	bcf	3,5	;RP0=0, select bank0
   650  0171  1303               	bcf	3,6	;RP1=0, select bank0
   651  0172  0186               	clrf	6	;volatile
   652  0173                     l1004:
   653                           
   654                           ;MAIN_S1.c: 86:     IOC_INT(0b00000011);
   655  0173  3003               	movlw	3
   656  0174  120A  118A  21D9  120A  118A  	fcall	_IOC_INT
   657  0179                     l1006:
   658                           
   659                           ;MAIN_S1.c: 89:     ADC_INIT(5);
   660  0179  3005               	movlw	5
   661  017A  120A  118A  2016  120A  118A  	fcall	_ADC_INIT
   662  017F                     l1008:
   663                           
   664                           ;MAIN_S1.c: 91:     INTCONbits.GIE = 1;
   665  017F  178B               	bsf	11,7	;volatile
   666  0180                     l1010:
   667                           
   668                           ;MAIN_S1.c: 92:     INTCONbits.PEIE = 1;
   669  0180  170B               	bsf	11,6	;volatile
   670  0181                     l1012:
   671                           
   672                           ;MAIN_S1.c: 93:     PIR1bits.SSPIF = 0;
   673  0181  1283               	bcf	3,5	;RP0=0, select bank0
   674  0182  1303               	bcf	3,6	;RP1=0, select bank0
   675  0183  118C               	bcf	12,3	;volatile
   676  0184                     l1014:
   677                           
   678                           ;MAIN_S1.c: 94:     PIE1bits.SSPIE = 1;
   679  0184  1683               	bsf	3,5	;RP0=1, select bank1
   680  0185  1303               	bcf	3,6	;RP1=0, select bank1
   681  0186  158C               	bsf	12,3	;volatile
   682  0187                     l1016:
   683                           
   684                           ;MAIN_S1.c: 95:     INTCONbits.RBIE = 1;
   685  0187  158B               	bsf	11,3	;volatile
   686  0188                     l1018:
   687                           
   688                           ;MAIN_S1.c: 96:     INTCONbits.RBIF = 0;
   689  0188  100B               	bcf	11,0	;volatile
   690  0189                     l1020:
   691                           
   692                           ;MAIN_S1.c: 98:     TRISAbits.TRISA5 = 1;
   693  0189  1685               	bsf	5,5	;volatile
   694                           
   695                           ;MAIN_S1.c: 100:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   696  018A  01F4               	clrf	spiInit@sDataSample
   697  018B  01F5               	clrf	spiInit@sClockIdle
   698  018C  01F6               	clrf	spiInit@sTransmitEdge
   699  018D  3024               	movlw	36
   700  018E  120A  118A  2194  120A  118A  	fcall	_spiInit
   701  0193                     l68:
   702  0193  0008               	return
   703  0194                     __end_of_setup:
   704                           
   705                           	psect	text2
   706  0194                     __ptext2:	
   707 ;; *************** function _spiInit *****************
   708 ;; Defined at:
   709 ;;		line 12 in file "SPIS1.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  sType           1    wreg     enum E1292
   712 ;;  sDataSample     1    4[COMMON] enum E1300
   713 ;;  sClockIdle      1    5[COMMON] enum E1304
   714 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  sType           1    0[BANK0 ] enum E1292
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         3       0       0       0       0
   727 ;;      Locals:         0       1       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         3       1       0       0       0
   730 ;;Total ram usage:        4 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 3
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_setup
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740  0194                     _spiInit:	
   741                           ;psect for function _spiInit
   742                           
   743                           
   744                           ;incstack = 0
   745                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   746                           ;spiInit@sType stored from wreg
   747  0194  1283               	bcf	3,5	;RP0=0, select bank0
   748  0195  1303               	bcf	3,6	;RP1=0, select bank0
   749  0196  00A0               	movwf	spiInit@sType
   750  0197                     l984:
   751                           
   752                           ;SPIS1.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPIS1.c: 13: {;SPIS1.c: 14:     TRISC5 = 0;
   753  0197  1683               	bsf	3,5	;RP0=1, select bank1
   754  0198  1303               	bcf	3,6	;RP1=0, select bank1
   755  0199  1287               	bcf	7,5	;volatile
   756                           
   757                           ;SPIS1.c: 15:     if(sType & 0b00000100)
   758  019A  1283               	bcf	3,5	;RP0=0, select bank0
   759  019B  1303               	bcf	3,6	;RP1=0, select bank0
   760  019C  1D20               	btfss	spiInit@sType,2
   761  019D  299F               	goto	u121
   762  019E  29A0               	goto	u120
   763  019F                     u121:
   764  019F  29A6               	goto	l990
   765  01A0                     u120:
   766  01A0                     l986:
   767                           
   768                           ;SPIS1.c: 16:     {;SPIS1.c: 17:         SSPSTAT = sTransmitEdge;
   769  01A0  0876               	movf	spiInit@sTransmitEdge,w
   770  01A1  1683               	bsf	3,5	;RP0=1, select bank1
   771  01A2  1303               	bcf	3,6	;RP1=0, select bank1
   772  01A3  0094               	movwf	20	;volatile
   773  01A4                     l988:
   774                           
   775                           ;SPIS1.c: 18:         TRISC3 = 1;
   776  01A4  1587               	bsf	7,3	;volatile
   777                           
   778                           ;SPIS1.c: 19:     }
   779  01A5  29AC               	goto	l84
   780  01A6                     l990:
   781                           
   782                           ;SPIS1.c: 21:     {;SPIS1.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   783  01A6  0874               	movf	spiInit@sDataSample,w
   784  01A7  0476               	iorwf	spiInit@sTransmitEdge,w
   785  01A8  1683               	bsf	3,5	;RP0=1, select bank1
   786  01A9  1303               	bcf	3,6	;RP1=0, select bank1
   787  01AA  0094               	movwf	20	;volatile
   788  01AB                     l992:
   789                           
   790                           ;SPIS1.c: 23:         TRISC3 = 0;
   791  01AB  1187               	bcf	7,3	;volatile
   792  01AC                     l84:	
   793                           ;SPIS1.c: 24:     }
   794                           
   795                           
   796                           ;SPIS1.c: 26:     SSPCON = sType | sClockIdle;
   797  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   798  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   799  01AE  0820               	movf	spiInit@sType,w
   800  01AF  0475               	iorwf	spiInit@sClockIdle,w
   801  01B0  0094               	movwf	20	;volatile
   802  01B1                     l85:
   803  01B1  0008               	return
   804  01B2                     __end_of_spiInit:
   805                           
   806                           	psect	text3
   807  00CB                     __ptext3:	
   808 ;; *************** function _OSCILLATOR *****************
   809 ;; Defined at:
   810 ;;		line 36 in file "ADC.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  f               1    wreg     unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  f               1    6[COMMON] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0
   826 ;;      Temps:          2       0       0       0       0
   827 ;;      Totals:         3       0       0       0       0
   828 ;;Total ram usage:        3 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 3
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_setup
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838  00CB                     _OSCILLATOR:	
   839                           ;psect for function _OSCILLATOR
   840                           
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in _OSCILLATOR: [wreg-fsr0h+status,2+status,0]
   844                           ;OSCILLATOR@f stored from wreg
   845  00CB  00F6               	movwf	OSCILLATOR@f
   846  00CC                     l748:
   847                           
   848                           ;ADC.c: 37:     OSCCONbits.SCS = 1;
   849  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   850  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   851  00CE  140F               	bsf	15,0	;volatile
   852                           
   853                           ;ADC.c: 39:     switch(f){
   854  00CF  28F4               	goto	l752
   855  00D0                     l120:	
   856                           ;ADC.c: 40:         case(1):
   857                           
   858                           
   859                           ;ADC.c: 41:             OSCCONbits.IRCF2 =1;
   860  00D0  170F               	bsf	15,6	;volatile
   861                           
   862                           ;ADC.c: 42:             OSCCONbits.IRCF1 =1;
   863  00D1  168F               	bsf	15,5	;volatile
   864                           
   865                           ;ADC.c: 43:             OSCCONbits.IRCF0 =1;
   866  00D2  160F               	bsf	15,4	;volatile
   867                           
   868                           ;ADC.c: 44:             break;
   869  00D3  2916               	goto	l130
   870  00D4                     l122:	
   871                           ;ADC.c: 46:         case(2):
   872                           
   873                           
   874                           ;ADC.c: 47:             OSCCONbits.IRCF2 =1;
   875  00D4  170F               	bsf	15,6	;volatile
   876                           
   877                           ;ADC.c: 48:             OSCCONbits.IRCF1 =1;
   878  00D5  168F               	bsf	15,5	;volatile
   879                           
   880                           ;ADC.c: 49:             OSCCONbits.IRCF0 =0;
   881  00D6  120F               	bcf	15,4	;volatile
   882                           
   883                           ;ADC.c: 50:             break;
   884  00D7  2916               	goto	l130
   885  00D8                     l123:	
   886                           ;ADC.c: 52:         case(3):
   887                           
   888                           
   889                           ;ADC.c: 53:             OSCCONbits.IRCF2 =1;
   890  00D8  170F               	bsf	15,6	;volatile
   891                           
   892                           ;ADC.c: 54:             OSCCONbits.IRCF1 =0;
   893  00D9  128F               	bcf	15,5	;volatile
   894                           
   895                           ;ADC.c: 55:             OSCCONbits.IRCF0 =1;
   896  00DA  160F               	bsf	15,4	;volatile
   897                           
   898                           ;ADC.c: 56:             break;
   899  00DB  2916               	goto	l130
   900  00DC                     l124:	
   901                           ;ADC.c: 58:         case(4):
   902                           
   903                           
   904                           ;ADC.c: 59:             OSCCONbits.IRCF2 =1;
   905  00DC  170F               	bsf	15,6	;volatile
   906                           
   907                           ;ADC.c: 60:             OSCCONbits.IRCF1 =0;
   908  00DD  128F               	bcf	15,5	;volatile
   909                           
   910                           ;ADC.c: 61:             OSCCONbits.IRCF0 =0;
   911  00DE  120F               	bcf	15,4	;volatile
   912                           
   913                           ;ADC.c: 62:             break;
   914  00DF  2916               	goto	l130
   915  00E0                     l125:	
   916                           ;ADC.c: 64:         case(5):
   917                           
   918                           
   919                           ;ADC.c: 65:             OSCCONbits.IRCF2 =0;
   920  00E0  130F               	bcf	15,6	;volatile
   921                           
   922                           ;ADC.c: 66:             OSCCONbits.IRCF1 =1;
   923  00E1  168F               	bsf	15,5	;volatile
   924                           
   925                           ;ADC.c: 67:             OSCCONbits.IRCF0 =1;
   926  00E2  160F               	bsf	15,4	;volatile
   927                           
   928                           ;ADC.c: 68:             break;
   929  00E3  2916               	goto	l130
   930  00E4                     l126:	
   931                           ;ADC.c: 70:         case(6):
   932                           
   933                           
   934                           ;ADC.c: 71:             OSCCONbits.IRCF2 =0;
   935  00E4  130F               	bcf	15,6	;volatile
   936                           
   937                           ;ADC.c: 72:             OSCCONbits.IRCF1 =1;
   938  00E5  168F               	bsf	15,5	;volatile
   939                           
   940                           ;ADC.c: 73:             OSCCONbits.IRCF0 =0;
   941  00E6  120F               	bcf	15,4	;volatile
   942                           
   943                           ;ADC.c: 74:             break;
   944  00E7  2916               	goto	l130
   945  00E8                     l127:	
   946                           ;ADC.c: 76:         case(7):
   947                           
   948                           
   949                           ;ADC.c: 77:             OSCCONbits.IRCF2 =0;
   950  00E8  130F               	bcf	15,6	;volatile
   951                           
   952                           ;ADC.c: 78:             OSCCONbits.IRCF1 =0;
   953  00E9  128F               	bcf	15,5	;volatile
   954                           
   955                           ;ADC.c: 79:             OSCCONbits.IRCF0 =1;
   956  00EA  160F               	bsf	15,4	;volatile
   957                           
   958                           ;ADC.c: 80:             break;
   959  00EB  2916               	goto	l130
   960  00EC                     l128:	
   961                           ;ADC.c: 82:         case(8):
   962                           
   963                           
   964                           ;ADC.c: 83:             OSCCONbits.IRCF2 =0;
   965  00EC  130F               	bcf	15,6	;volatile
   966                           
   967                           ;ADC.c: 84:             OSCCONbits.IRCF1 =0;
   968  00ED  128F               	bcf	15,5	;volatile
   969                           
   970                           ;ADC.c: 85:             OSCCONbits.IRCF0 =0;
   971  00EE  120F               	bcf	15,4	;volatile
   972                           
   973                           ;ADC.c: 86:             break;
   974  00EF  2916               	goto	l130
   975  00F0                     l129:	
   976                           ;ADC.c: 88:         default:
   977                           
   978                           
   979                           ;ADC.c: 89:             OSCCONbits.IRCF2 =1;
   980  00F0  170F               	bsf	15,6	;volatile
   981                           
   982                           ;ADC.c: 90:             OSCCONbits.IRCF1 =1;
   983  00F1  168F               	bsf	15,5	;volatile
   984                           
   985                           ;ADC.c: 91:             OSCCONbits.IRCF0 =0;
   986  00F2  120F               	bcf	15,4	;volatile
   987                           
   988                           ;ADC.c: 92:             break;
   989  00F3  2916               	goto	l130
   990  00F4                     l752:
   991  00F4  0876               	movf	OSCILLATOR@f,w
   992  00F5  00F4               	movwf	??_OSCILLATOR
   993  00F6  01F5               	clrf	??_OSCILLATOR+1
   994                           
   995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   996                           ; Switch size 1, requested type "simple"
   997                           ; Number of cases is 1, Range of values is 0 to 0
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte            4     3 (average)
  1001                           ; direct_byte           11     8 (fixed)
  1002                           ; jumptable            260     6 (fixed)
  1003                           ;	Chosen strategy is simple_byte
  1004  00F7  0875               	movf	??_OSCILLATOR+1,w
  1005  00F8  3A00               	xorlw	0	; case 0
  1006  00F9  1903               	skipnz
  1007  00FA  28FC               	goto	l1066
  1008  00FB  28F0               	goto	l129
  1009  00FC                     l1066:
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 8, Range of values is 1 to 8
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte           25    13 (average)
  1016                           ; direct_byte           35    11 (fixed)
  1017                           ; jumptable            263     9 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  00FC  0874               	movf	??_OSCILLATOR,w
  1020  00FD  3A01               	xorlw	1	; case 1
  1021  00FE  1903               	skipnz
  1022  00FF  28D0               	goto	l120
  1023  0100  3A03               	xorlw	3	; case 2
  1024  0101  1903               	skipnz
  1025  0102  28D4               	goto	l122
  1026  0103  3A01               	xorlw	1	; case 3
  1027  0104  1903               	skipnz
  1028  0105  28D8               	goto	l123
  1029  0106  3A07               	xorlw	7	; case 4
  1030  0107  1903               	skipnz
  1031  0108  28DC               	goto	l124
  1032  0109  3A01               	xorlw	1	; case 5
  1033  010A  1903               	skipnz
  1034  010B  28E0               	goto	l125
  1035  010C  3A03               	xorlw	3	; case 6
  1036  010D  1903               	skipnz
  1037  010E  28E4               	goto	l126
  1038  010F  3A01               	xorlw	1	; case 7
  1039  0110  1903               	skipnz
  1040  0111  28E8               	goto	l127
  1041  0112  3A0F               	xorlw	15	; case 8
  1042  0113  1903               	skipnz
  1043  0114  28EC               	goto	l128
  1044  0115  28F0               	goto	l129
  1045  0116                     l130:
  1046  0116  0008               	return
  1047  0117                     __end_of_OSCILLATOR:
  1048                           
  1049                           	psect	text4
  1050  01D9                     __ptext4:	
  1051 ;; *************** function _IOC_INT *****************
  1052 ;; Defined at:
  1053 ;;		line 27 in file "ADC.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  a               1    wreg     unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  a               1    4[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0
  1070 ;;      Totals:         1       0       0       0       0
  1071 ;;Total ram usage:        1 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 3
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_setup
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081  01D9                     _IOC_INT:	
  1082                           ;psect for function _IOC_INT
  1083                           
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _IOC_INT: [wreg]
  1087                           ;IOC_INT@a stored from wreg
  1088  01D9  00F4               	movwf	IOC_INT@a
  1089  01DA                     l758:
  1090                           
  1091                           ;ADC.c: 30:     OPTION_REGbits.nRBPU = 0;
  1092  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  1093  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  1094  01DC  1381               	bcf	1,7	;volatile
  1095  01DD                     l760:
  1096                           
  1097                           ;ADC.c: 31:     WPUBbits.WPUB = a;
  1098  01DD  0874               	movf	IOC_INT@a,w
  1099  01DE  0095               	movwf	21	;volatile
  1100                           
  1101                           ;ADC.c: 32:     IOCBbits.IOCB = a;
  1102  01DF  0874               	movf	IOC_INT@a,w
  1103  01E0  0096               	movwf	22	;volatile
  1104  01E1                     l116:
  1105  01E1  0008               	return
  1106  01E2                     __end_of_IOC_INT:
  1107                           
  1108                           	psect	text5
  1109  0016                     __ptext5:	
  1110 ;; *************** function _ADC_INIT *****************
  1111 ;; Defined at:
  1112 ;;		line 98 in file "ADC.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  c               1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  c               1    6[COMMON] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0
  1128 ;;      Temps:          2       0       0       0       0
  1129 ;;      Totals:         3       0       0       0       0
  1130 ;;Total ram usage:        3 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 3
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_setup
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140  0016                     _ADC_INIT:	
  1141                           ;psect for function _ADC_INIT
  1142                           
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
  1146                           ;ADC_INIT@c stored from wreg
  1147  0016  00F6               	movwf	ADC_INIT@c
  1148  0017                     l762:
  1149                           
  1150                           ;ADC.c: 99:     switch(c){
  1151  0017  2881               	goto	l766
  1152  0018                     l134:	
  1153                           ;ADC.c: 100:         case 0:
  1154                           
  1155                           
  1156                           ;ADC.c: 101:             ADCON0bits.CHS3 = 0;
  1157  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0019  1303               	bcf	3,6	;RP1=0, select bank0
  1159  001A  129F               	bcf	31,5	;volatile
  1160                           
  1161                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  1162  001B  121F               	bcf	31,4	;volatile
  1163                           
  1164                           ;ADC.c: 103:             ADCON0bits.CHS1 = 0;
  1165  001C  119F               	bcf	31,3	;volatile
  1166                           
  1167                           ;ADC.c: 104:             ADCON0bits.CHS0 = 0;
  1168  001D  111F               	bcf	31,2	;volatile
  1169                           
  1170                           ;ADC.c: 105:             break;
  1171  001E  28B5               	goto	l135
  1172  001F                     l136:	
  1173                           ;ADC.c: 107:         case 1:
  1174                           
  1175                           
  1176                           ;ADC.c: 108:             ADCON0bits.CHS3 = 0;
  1177  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0021  129F               	bcf	31,5	;volatile
  1180                           
  1181                           ;ADC.c: 109:             ADCON0bits.CHS2 = 0;
  1182  0022  121F               	bcf	31,4	;volatile
  1183                           
  1184                           ;ADC.c: 110:             ADCON0bits.CHS1 = 0;
  1185  0023  119F               	bcf	31,3	;volatile
  1186                           
  1187                           ;ADC.c: 111:             ADCON0bits.CHS0 = 1;
  1188  0024  151F               	bsf	31,2	;volatile
  1189                           
  1190                           ;ADC.c: 112:             break;
  1191  0025  28B5               	goto	l135
  1192  0026                     l137:	
  1193                           ;ADC.c: 114:         case 2:
  1194                           
  1195                           
  1196                           ;ADC.c: 115:             ADCON0bits.CHS3 = 0;
  1197  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0028  129F               	bcf	31,5	;volatile
  1200                           
  1201                           ;ADC.c: 116:             ADCON0bits.CHS2 = 0;
  1202  0029  121F               	bcf	31,4	;volatile
  1203                           
  1204                           ;ADC.c: 117:             ADCON0bits.CHS1 = 1;
  1205  002A  159F               	bsf	31,3	;volatile
  1206                           
  1207                           ;ADC.c: 118:             ADCON0bits.CHS0 = 0;
  1208  002B  111F               	bcf	31,2	;volatile
  1209                           
  1210                           ;ADC.c: 119:             break;
  1211  002C  28B5               	goto	l135
  1212  002D                     l138:	
  1213                           ;ADC.c: 121:         case 3:
  1214                           
  1215                           
  1216                           ;ADC.c: 122:             ADCON0bits.CHS3 = 0;
  1217  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1218  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1219  002F  129F               	bcf	31,5	;volatile
  1220                           
  1221                           ;ADC.c: 123:             ADCON0bits.CHS2 = 0;
  1222  0030  121F               	bcf	31,4	;volatile
  1223                           
  1224                           ;ADC.c: 124:             ADCON0bits.CHS1 = 1;
  1225  0031  159F               	bsf	31,3	;volatile
  1226                           
  1227                           ;ADC.c: 125:             ADCON0bits.CHS0 = 1;
  1228  0032  151F               	bsf	31,2	;volatile
  1229                           
  1230                           ;ADC.c: 126:             break;
  1231  0033  28B5               	goto	l135
  1232  0034                     l139:	
  1233                           ;ADC.c: 128:         case 4:
  1234                           
  1235                           
  1236                           ;ADC.c: 129:             ADCON0bits.CHS3 = 0;
  1237  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0036  129F               	bcf	31,5	;volatile
  1240                           
  1241                           ;ADC.c: 130:             ADCON0bits.CHS2 = 1;
  1242  0037  161F               	bsf	31,4	;volatile
  1243                           
  1244                           ;ADC.c: 131:             ADCON0bits.CHS1 = 0;
  1245  0038  119F               	bcf	31,3	;volatile
  1246                           
  1247                           ;ADC.c: 132:             ADCON0bits.CHS0 = 0;
  1248  0039  111F               	bcf	31,2	;volatile
  1249                           
  1250                           ;ADC.c: 133:             break;
  1251  003A  28B5               	goto	l135
  1252  003B                     l140:	
  1253                           ;ADC.c: 135:         case 5:
  1254                           
  1255                           
  1256                           ;ADC.c: 136:             ADCON0bits.CHS3 = 0;
  1257  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1258  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1259  003D  129F               	bcf	31,5	;volatile
  1260                           
  1261                           ;ADC.c: 137:             ADCON0bits.CHS2 = 1;
  1262  003E  161F               	bsf	31,4	;volatile
  1263                           
  1264                           ;ADC.c: 138:             ADCON0bits.CHS1 = 0;
  1265  003F  119F               	bcf	31,3	;volatile
  1266                           
  1267                           ;ADC.c: 139:             ADCON0bits.CHS0 = 1;
  1268  0040  151F               	bsf	31,2	;volatile
  1269                           
  1270                           ;ADC.c: 140:             break;
  1271  0041  28B5               	goto	l135
  1272  0042                     l141:	
  1273                           ;ADC.c: 142:         case 6:
  1274                           
  1275                           
  1276                           ;ADC.c: 143:             ADCON0bits.CHS3 = 0;
  1277  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0044  129F               	bcf	31,5	;volatile
  1280                           
  1281                           ;ADC.c: 144:             ADCON0bits.CHS2 = 1;
  1282  0045  161F               	bsf	31,4	;volatile
  1283                           
  1284                           ;ADC.c: 145:             ADCON0bits.CHS1 = 1;
  1285  0046  159F               	bsf	31,3	;volatile
  1286                           
  1287                           ;ADC.c: 146:             ADCON0bits.CHS0 = 0;
  1288  0047  111F               	bcf	31,2	;volatile
  1289                           
  1290                           ;ADC.c: 147:             break;
  1291  0048  28B5               	goto	l135
  1292  0049                     l142:	
  1293                           ;ADC.c: 149:         case 7:
  1294                           
  1295                           
  1296                           ;ADC.c: 150:             ADCON0bits.CHS3 = 0;
  1297  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1298  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1299  004B  129F               	bcf	31,5	;volatile
  1300                           
  1301                           ;ADC.c: 151:             ADCON0bits.CHS2 = 1;
  1302  004C  161F               	bsf	31,4	;volatile
  1303                           
  1304                           ;ADC.c: 152:             ADCON0bits.CHS1 = 1;
  1305  004D  159F               	bsf	31,3	;volatile
  1306                           
  1307                           ;ADC.c: 153:             ADCON0bits.CHS0 = 1;
  1308  004E  151F               	bsf	31,2	;volatile
  1309                           
  1310                           ;ADC.c: 154:             break;
  1311  004F  28B5               	goto	l135
  1312  0050                     l143:	
  1313                           ;ADC.c: 156:         case 8:
  1314                           
  1315                           
  1316                           ;ADC.c: 157:             ADCON0bits.CHS3 = 1;
  1317  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0052  169F               	bsf	31,5	;volatile
  1320                           
  1321                           ;ADC.c: 158:             ADCON0bits.CHS2 = 0;
  1322  0053  121F               	bcf	31,4	;volatile
  1323                           
  1324                           ;ADC.c: 159:             ADCON0bits.CHS1 = 0;
  1325  0054  119F               	bcf	31,3	;volatile
  1326                           
  1327                           ;ADC.c: 160:             ADCON0bits.CHS0 = 0;
  1328  0055  111F               	bcf	31,2	;volatile
  1329                           
  1330                           ;ADC.c: 161:             break;
  1331  0056  28B5               	goto	l135
  1332  0057                     l144:	
  1333                           ;ADC.c: 163:         case 9:
  1334                           
  1335                           
  1336                           ;ADC.c: 164:             ADCON0bits.CHS3 = 1;
  1337  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0059  169F               	bsf	31,5	;volatile
  1340                           
  1341                           ;ADC.c: 165:             ADCON0bits.CHS2 = 0;
  1342  005A  121F               	bcf	31,4	;volatile
  1343                           
  1344                           ;ADC.c: 166:             ADCON0bits.CHS1 = 0;
  1345  005B  119F               	bcf	31,3	;volatile
  1346                           
  1347                           ;ADC.c: 167:             ADCON0bits.CHS0 = 1;
  1348  005C  151F               	bsf	31,2	;volatile
  1349                           
  1350                           ;ADC.c: 168:             break;
  1351  005D  28B5               	goto	l135
  1352  005E                     l145:	
  1353                           ;ADC.c: 170:         case 10:
  1354                           
  1355                           
  1356                           ;ADC.c: 171:             ADCON0bits.CHS3 = 1;
  1357  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1358  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0060  169F               	bsf	31,5	;volatile
  1360                           
  1361                           ;ADC.c: 172:             ADCON0bits.CHS2 = 0;
  1362  0061  121F               	bcf	31,4	;volatile
  1363                           
  1364                           ;ADC.c: 173:             ADCON0bits.CHS1 = 1;
  1365  0062  159F               	bsf	31,3	;volatile
  1366                           
  1367                           ;ADC.c: 174:             ADCON0bits.CHS0 = 0;
  1368  0063  111F               	bcf	31,2	;volatile
  1369                           
  1370                           ;ADC.c: 175:             break;
  1371  0064  28B5               	goto	l135
  1372  0065                     l146:	
  1373                           ;ADC.c: 177:         case 11:
  1374                           
  1375                           
  1376                           ;ADC.c: 178:             ADCON0bits.CHS3 = 1;
  1377  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0067  169F               	bsf	31,5	;volatile
  1380                           
  1381                           ;ADC.c: 179:             ADCON0bits.CHS2 = 0;
  1382  0068  121F               	bcf	31,4	;volatile
  1383                           
  1384                           ;ADC.c: 180:             ADCON0bits.CHS1 = 1;
  1385  0069  159F               	bsf	31,3	;volatile
  1386                           
  1387                           ;ADC.c: 181:             ADCON0bits.CHS0 = 1;
  1388  006A  151F               	bsf	31,2	;volatile
  1389                           
  1390                           ;ADC.c: 182:             break;
  1391  006B  28B5               	goto	l135
  1392  006C                     l147:	
  1393                           ;ADC.c: 184:         case 12:
  1394                           
  1395                           
  1396                           ;ADC.c: 185:             ADCON0bits.CHS3 = 1;
  1397  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1398  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1399  006E  169F               	bsf	31,5	;volatile
  1400                           
  1401                           ;ADC.c: 186:             ADCON0bits.CHS2 = 1;
  1402  006F  161F               	bsf	31,4	;volatile
  1403                           
  1404                           ;ADC.c: 187:             ADCON0bits.CHS1 = 0;
  1405  0070  119F               	bcf	31,3	;volatile
  1406                           
  1407                           ;ADC.c: 188:             ADCON0bits.CHS0 = 0;
  1408  0071  111F               	bcf	31,2	;volatile
  1409                           
  1410                           ;ADC.c: 189:             break;
  1411  0072  28B5               	goto	l135
  1412  0073                     l148:	
  1413                           ;ADC.c: 191:         case 13:
  1414                           
  1415                           
  1416                           ;ADC.c: 192:             ADCON0bits.CHS3 = 1;
  1417  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0075  169F               	bsf	31,5	;volatile
  1420                           
  1421                           ;ADC.c: 193:             ADCON0bits.CHS2 = 1;
  1422  0076  161F               	bsf	31,4	;volatile
  1423                           
  1424                           ;ADC.c: 194:             ADCON0bits.CHS1 = 0;
  1425  0077  119F               	bcf	31,3	;volatile
  1426                           
  1427                           ;ADC.c: 195:             ADCON0bits.CHS0 = 1;
  1428  0078  151F               	bsf	31,2	;volatile
  1429                           
  1430                           ;ADC.c: 196:             break;
  1431  0079  28B5               	goto	l135
  1432  007A                     l149:	
  1433                           ;ADC.c: 198:         default:
  1434                           
  1435                           
  1436                           ;ADC.c: 199:             ADCON0bits.CHS3 = 0;
  1437  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1438  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1439  007C  129F               	bcf	31,5	;volatile
  1440                           
  1441                           ;ADC.c: 200:             ADCON0bits.CHS2 = 0;
  1442  007D  121F               	bcf	31,4	;volatile
  1443                           
  1444                           ;ADC.c: 201:             ADCON0bits.CHS1 = 0;
  1445  007E  119F               	bcf	31,3	;volatile
  1446                           
  1447                           ;ADC.c: 202:             ADCON0bits.CHS0 = 0;
  1448  007F  111F               	bcf	31,2	;volatile
  1449                           
  1450                           ;ADC.c: 203:             break;
  1451  0080  28B5               	goto	l135
  1452  0081                     l766:
  1453  0081  0876               	movf	ADC_INIT@c,w
  1454  0082  00F4               	movwf	??_ADC_INIT
  1455  0083  01F5               	clrf	??_ADC_INIT+1
  1456                           
  1457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 1, Range of values is 0 to 0
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            4     3 (average)
  1463                           ; direct_byte           11     8 (fixed)
  1464                           ; jumptable            260     6 (fixed)
  1465                           ;	Chosen strategy is simple_byte
  1466  0084  0875               	movf	??_ADC_INIT+1,w
  1467  0085  3A00               	xorlw	0	; case 0
  1468  0086  1903               	skipnz
  1469  0087  2889               	goto	l1068
  1470  0088  287A               	goto	l149
  1471  0089                     l1068:
  1472                           
  1473                           ; Switch size 1, requested type "simple"
  1474                           ; Number of cases is 14, Range of values is 0 to 13
  1475                           ; switch strategies available:
  1476                           ; Name         Instructions Cycles
  1477                           ; simple_byte           43    22 (average)
  1478                           ; direct_byte           50     8 (fixed)
  1479                           ; jumptable            260     6 (fixed)
  1480                           ;	Chosen strategy is simple_byte
  1481  0089  0874               	movf	??_ADC_INIT,w
  1482  008A  3A00               	xorlw	0	; case 0
  1483  008B  1903               	skipnz
  1484  008C  2818               	goto	l134
  1485  008D  3A01               	xorlw	1	; case 1
  1486  008E  1903               	skipnz
  1487  008F  281F               	goto	l136
  1488  0090  3A03               	xorlw	3	; case 2
  1489  0091  1903               	skipnz
  1490  0092  2826               	goto	l137
  1491  0093  3A01               	xorlw	1	; case 3
  1492  0094  1903               	skipnz
  1493  0095  282D               	goto	l138
  1494  0096  3A07               	xorlw	7	; case 4
  1495  0097  1903               	skipnz
  1496  0098  2834               	goto	l139
  1497  0099  3A01               	xorlw	1	; case 5
  1498  009A  1903               	skipnz
  1499  009B  283B               	goto	l140
  1500  009C  3A03               	xorlw	3	; case 6
  1501  009D  1903               	skipnz
  1502  009E  2842               	goto	l141
  1503  009F  3A01               	xorlw	1	; case 7
  1504  00A0  1903               	skipnz
  1505  00A1  2849               	goto	l142
  1506  00A2  3A0F               	xorlw	15	; case 8
  1507  00A3  1903               	skipnz
  1508  00A4  2850               	goto	l143
  1509  00A5  3A01               	xorlw	1	; case 9
  1510  00A6  1903               	skipnz
  1511  00A7  2857               	goto	l144
  1512  00A8  3A03               	xorlw	3	; case 10
  1513  00A9  1903               	skipnz
  1514  00AA  285E               	goto	l145
  1515  00AB  3A01               	xorlw	1	; case 11
  1516  00AC  1903               	skipnz
  1517  00AD  2865               	goto	l146
  1518  00AE  3A07               	xorlw	7	; case 12
  1519  00AF  1903               	skipnz
  1520  00B0  286C               	goto	l147
  1521  00B1  3A01               	xorlw	1	; case 13
  1522  00B2  1903               	skipnz
  1523  00B3  2873               	goto	l148
  1524  00B4  287A               	goto	l149
  1525  00B5                     l135:
  1526                           
  1527                           ;ADC.c: 206:     ADCON1bits.VCFG0 = 0;
  1528  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1529  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1530  00B7  121F               	bcf	31,4	;volatile
  1531                           
  1532                           ;ADC.c: 207:     ADCON1bits.VCFG1 = 0;
  1533  00B8  129F               	bcf	31,5	;volatile
  1534                           
  1535                           ;ADC.c: 209:     ADCON0bits.ADCS0 = 0;
  1536  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1537  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1538  00BB  131F               	bcf	31,6	;volatile
  1539                           
  1540                           ;ADC.c: 210:     ADCON0bits.ADCS1 = 1;
  1541  00BC  179F               	bsf	31,7	;volatile
  1542                           
  1543                           ;ADC.c: 212:     ADCON1bits.ADFM =0;
  1544  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1545  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1546  00BF  139F               	bcf	31,7	;volatile
  1547                           
  1548                           ;ADC.c: 214:     ADCON0bits.ADON = 1;
  1549  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1550  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1551  00C2  141F               	bsf	31,0	;volatile
  1552  00C3                     l768:
  1553                           
  1554                           ;ADC.c: 215:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1555  00C3  3021               	movlw	33
  1556  00C4  00F4               	movwf	??_ADC_INIT
  1557  00C5                     u137:
  1558  00C5  0BF4               	decfsz	??_ADC_INIT,f
  1559  00C6  28C5               	goto	u137
  1560  00C7                     l770:
  1561                           
  1562                           ;ADC.c: 216:     ADCON0bits.GO_nDONE = 1;
  1563  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1564  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1565  00C9  149F               	bsf	31,1	;volatile
  1566  00CA                     l150:
  1567  00CA  0008               	return
  1568  00CB                     __end_of_ADC_INIT:
  1569                           
  1570                           	psect	text6
  1571  01B2                     __ptext6:	
  1572 ;; *************** function _ADC_READ *****************
  1573 ;; Defined at:
  1574 ;;		line 219 in file "ADC.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      unsigned char 
  1581 ;; Registers used:
  1582 ;;		wreg
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0
  1590 ;;      Temps:          2       0       0       0       0
  1591 ;;      Totals:         2       0       0       0       0
  1592 ;;Total ram usage:        2 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 3
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602  01B2                     _ADC_READ:	
  1603                           ;psect for function _ADC_READ
  1604                           
  1605  01B2                     l826:	
  1606                           ;incstack = 0
  1607                           ; Regs used in _ADC_READ: [wreg]
  1608                           
  1609                           
  1610                           ;ADC.c: 220:     ADCON0bits.GO_nDONE = 1;
  1611  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1612  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1613  01B4  149F               	bsf	31,1	;volatile
  1614  01B5                     l828:
  1615                           
  1616                           ;ADC.c: 221:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1617  01B5  3082               	movlw	130
  1618  01B6  00F5               	movwf	??_ADC_READ+1
  1619  01B7  30DD               	movlw	221
  1620  01B8  00F4               	movwf	??_ADC_READ
  1621  01B9                     u147:
  1622  01B9  0BF4               	decfsz	??_ADC_READ,f
  1623  01BA  29B9               	goto	u147
  1624  01BB  0BF5               	decfsz	??_ADC_READ+1,f
  1625  01BC  29B9               	goto	u147
  1626  01BD  29BE               	nop2
  1627  01BE                     l153:	
  1628                           ;ADC.c: 222:     while( ADCON0bits.GO_nDONE == 1);
  1629                           
  1630  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1631  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1632  01C0  189F               	btfsc	31,1	;volatile
  1633  01C1  29C3               	goto	u31
  1634  01C2  29C4               	goto	u30
  1635  01C3                     u31:
  1636  01C3  29BE               	goto	l153
  1637  01C4                     u30:
  1638  01C4                     l830:
  1639                           
  1640                           ;ADC.c: 223:     return ADRESH;
  1641  01C4  081E               	movf	30,w	;volatile
  1642  01C5                     l156:
  1643  01C5  0008               	return
  1644  01C6                     __end_of_ADC_READ:
  1645                           
  1646                           	psect	text7
  1647  0117                     __ptext7:	
  1648 ;; *************** function _isr *****************
  1649 ;; Defined at:
  1650 ;;		line 45 in file "MAIN_S1.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0
  1666 ;;      Temps:          3       0       0       0       0
  1667 ;;      Totals:         3       0       0       0       0
  1668 ;;Total ram usage:        3 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 2
  1671 ;; This function calls:
  1672 ;;		_spiRead
  1673 ;;		_spiWrite
  1674 ;; This function is called by:
  1675 ;;		Interrupt level 1
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679  0117                     _isr:	
  1680                           ;psect for function _isr
  1681                           
  1682  0117                     i1l834:
  1683                           
  1684                           ;MAIN_S1.c: 46:     if (INTCONbits.RBIF==1){
  1685  0117  1C0B               	btfss	11,0	;volatile
  1686  0118  291A               	goto	u4_21
  1687  0119  291B               	goto	u4_20
  1688  011A                     u4_21:
  1689  011A  2936               	goto	i1l47
  1690  011B                     u4_20:
  1691  011B                     i1l836:
  1692                           
  1693                           ;MAIN_S1.c: 47:         if (RB0==0){
  1694  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1695  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1696  011D  1806               	btfsc	6,0	;volatile
  1697  011E  2920               	goto	u5_21
  1698  011F  2921               	goto	u5_20
  1699  0120                     u5_21:
  1700  0120  292A               	goto	i1l48
  1701  0121                     u5_20:
  1702  0121                     i1l838:
  1703                           
  1704                           ;MAIN_S1.c: 48:             if (RB0==0)
  1705  0121  1806               	btfsc	6,0	;volatile
  1706  0122  2924               	goto	u6_21
  1707  0123  2925               	goto	u6_20
  1708  0124                     u6_21:
  1709  0124  2934               	goto	i1l846
  1710  0125                     u6_20:
  1711  0125                     i1l840:
  1712                           
  1713                           ;MAIN_S1.c: 49:                 cont++;
  1714  0125  3001               	movlw	1
  1715  0126  00F1               	movwf	??_isr
  1716  0127  0871               	movf	??_isr,w
  1717  0128  07F7               	addwf	_cont,f
  1718  0129  2934               	goto	i1l846
  1719  012A                     i1l48:
  1720  012A  1886               	btfsc	6,1	;volatile
  1721  012B  292D               	goto	u7_21
  1722  012C  292E               	goto	u7_20
  1723  012D                     u7_21:
  1724  012D  2934               	goto	i1l846
  1725  012E                     u7_20:
  1726  012E                     i1l842:
  1727                           
  1728                           ;MAIN_S1.c: 51:             if (RB1==0)
  1729  012E  1886               	btfsc	6,1	;volatile
  1730  012F  2931               	goto	u8_21
  1731  0130  2932               	goto	u8_20
  1732  0131                     u8_21:
  1733  0131  2934               	goto	i1l846
  1734  0132                     u8_20:
  1735  0132                     i1l844:
  1736                           
  1737                           ;MAIN_S1.c: 52:                 cont--;
  1738  0132  3001               	movlw	1
  1739  0133  02F7               	subwf	_cont,f
  1740  0134                     i1l846:
  1741                           
  1742                           ;MAIN_S1.c: 54:         INTCONbits.RBIF=0;
  1743  0134  100B               	bcf	11,0	;volatile
  1744                           
  1745                           ;MAIN_S1.c: 55:     }
  1746  0135  295A               	goto	i1l57
  1747  0136                     i1l47:	
  1748                           ;MAIN_S1.c: 56:     else if(PIR1bits.SSPIF == 1){
  1749                           
  1750  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0138  1D8C               	btfss	12,3	;volatile
  1753  0139  293B               	goto	u9_21
  1754  013A  293C               	goto	u9_20
  1755  013B                     u9_21:
  1756  013B  295A               	goto	i1l57
  1757  013C                     u9_20:
  1758  013C                     i1l848:
  1759                           
  1760                           ;MAIN_S1.c: 57:         check = spiRead();
  1761  013C  120A  118A  21E2  120A  118A  	fcall	_spiRead
  1762  0141  00F1               	movwf	??_isr
  1763  0142  0871               	movf	??_isr,w
  1764  0143  00F8               	movwf	_check
  1765  0144                     i1l850:
  1766                           
  1767                           ;MAIN_S1.c: 58:         if(check==0xAA){
  1768  0144  30AA               	movlw	170
  1769  0145  0678               	xorwf	_check,w
  1770  0146  1D03               	btfss	3,2
  1771  0147  2949               	goto	u10_21
  1772  0148  294A               	goto	u10_20
  1773  0149                     u10_21:
  1774  0149  2951               	goto	i1l854
  1775  014A                     u10_20:
  1776  014A                     i1l852:
  1777                           
  1778                           ;MAIN_S1.c: 59:             spiWrite(POT);
  1779  014A  0879               	movf	_POT,w
  1780  014B  120A  118A  21F2  120A  118A  	fcall	_spiWrite
  1781                           
  1782                           ;MAIN_S1.c: 60:         }else{
  1783  0150  2957               	goto	i1l856
  1784  0151                     i1l854:
  1785                           
  1786                           ;MAIN_S1.c: 61:             spiWrite(cont);
  1787  0151  0877               	movf	_cont,w
  1788  0152  120A  118A  21F2  120A  118A  	fcall	_spiWrite
  1789  0157                     i1l856:
  1790                           
  1791                           ;MAIN_S1.c: 63:         PIR1bits.SSPIF = 0;
  1792  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0159  118C               	bcf	12,3	;volatile
  1795  015A                     i1l57:
  1796  015A  0873               	movf	??_isr+2,w
  1797  015B  008A               	movwf	10
  1798  015C  0E72               	swapf	??_isr+1,w
  1799  015D  0083               	movwf	3
  1800  015E  0EFE               	swapf	btemp,f
  1801  015F  0E7E               	swapf	btemp,w
  1802  0160  0009               	retfie
  1803  0161                     __end_of_isr:
  1804                           
  1805                           	psect	intentry
  1806  0004                     __pintentry:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1809                           
  1810  0004                     interrupt_function:
  1811  007E                     saved_w	set	btemp
  1812  0004  00FE               	movwf	btemp
  1813  0005  0E03               	swapf	3,w
  1814  0006  00F2               	movwf	??_isr+1
  1815  0007  080A               	movf	10,w
  1816  0008  00F3               	movwf	??_isr+2
  1817  0009  120A  118A  2917   	ljmp	_isr
  1818                           
  1819                           	psect	text8
  1820  01F2                     __ptext8:	
  1821 ;; *************** function _spiWrite *****************
  1822 ;; Defined at:
  1823 ;;		line 34 in file "SPIS1.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  dat             1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  dat             1    0[COMMON] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         1       0       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_isr
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850  01F2                     _spiWrite:	
  1851                           ;psect for function _spiWrite
  1852                           
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _spiWrite: [wreg]
  1856                           ;spiWrite@dat stored from wreg
  1857  01F2  00F0               	movwf	spiWrite@dat
  1858  01F3                     i1l796:
  1859                           
  1860                           ;SPIS1.c: 34: void spiWrite(char dat);SPIS1.c: 35: {;SPIS1.c: 36:     SSPBUF = dat;
  1861  01F3  0870               	movf	spiWrite@dat,w
  1862  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1863  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1864  01F6  0093               	movwf	19	;volatile
  1865  01F7                     i1l94:
  1866  01F7  0008               	return
  1867  01F8                     __end_of_spiWrite:
  1868                           
  1869                           	psect	text9
  1870  01E2                     __ptext9:	
  1871 ;; *************** function _spiRead *****************
  1872 ;; Defined at:
  1873 ;;		line 47 in file "SPIS1.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0
  1890 ;;      Totals:         0       0       0       0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 1
  1894 ;; This function calls:
  1895 ;;		_spiReceiveWait
  1896 ;; This function is called by:
  1897 ;;		_isr
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901  01E2                     _spiRead:	
  1902                           ;psect for function _spiRead
  1903                           
  1904  01E2                     i1l790:	
  1905                           ;incstack = 0
  1906                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1907                           
  1908                           
  1909                           ;SPIS1.c: 49:     spiReceiveWait();
  1910  01E2  120A  118A  21EB  120A  118A  	fcall	_spiReceiveWait
  1911  01E7                     i1l792:
  1912                           
  1913                           ;SPIS1.c: 50:     return(SSPBUF);
  1914  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1915  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1916  01E9  0813               	movf	19,w	;volatile
  1917  01EA                     i1l97:
  1918  01EA  0008               	return
  1919  01EB                     __end_of_spiRead:
  1920                           
  1921                           	psect	text10
  1922  01EB                     __ptext10:	
  1923 ;; *************** function _spiReceiveWait *****************
  1924 ;; Defined at:
  1925 ;;		line 29 in file "SPIS1.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		None
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_spiRead
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952  01EB                     _spiReceiveWait:	
  1953                           ;psect for function _spiReceiveWait
  1954                           
  1955  01EB                     i1l788:	
  1956                           ;incstack = 0
  1957                           ; Regs used in _spiReceiveWait: []
  1958                           
  1959  01EB                     i1l88:	
  1960                           ;SPIS1.c: 31:     while ( !SSPSTATbits.BF );
  1961                           
  1962  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1963  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1964  01ED  1C14               	btfss	20,0	;volatile
  1965  01EE  29F0               	goto	u2_21
  1966  01EF  29F1               	goto	u2_20
  1967  01F0                     u2_21:
  1968  01F0  29EB               	goto	i1l88
  1969  01F1                     u2_20:
  1970  01F1                     i1l91:
  1971  01F1  0008               	return
  1972  01F2                     __end_of_spiReceiveWait:
  1973  007E                     btemp	set	126	;btemp
  1974  007E                     wtemp0	set	126
  1975                           
  1976                           	psect	idloc
  1977                           
  1978                           ;Config register IDLOC0 @ 0x2000
  1979                           ;	unspecified, using default values
  1980  2000                     	org	8192
  1981  2000  3FFF               	dw	16383
  1982                           
  1983                           ;Config register IDLOC1 @ 0x2001
  1984                           ;	unspecified, using default values
  1985  2001                     	org	8193
  1986  2001  3FFF               	dw	16383
  1987                           
  1988                           ;Config register IDLOC2 @ 0x2002
  1989                           ;	unspecified, using default values
  1990  2002                     	org	8194
  1991  2002  3FFF               	dw	16383
  1992                           
  1993                           ;Config register IDLOC3 @ 0x2003
  1994                           ;	unspecified, using default values
  1995  2003                     	org	8195
  1996  2003  3FFF               	dw	16383
  1997                           
  1998                           	psect	config
  1999                           
  2000                           ;Config register CONFIG1 @ 0x2007
  2001                           ;	Oscillator Selection bits
  2002                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2003                           ;	Watchdog Timer Enable bit
  2004                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2005                           ;	Power-up Timer Enable bit
  2006                           ;	PWRTE = OFF, PWRT disabled
  2007                           ;	RE3/MCLR pin function select bit
  2008                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2009                           ;	Code Protection bit
  2010                           ;	CP = OFF, Program memory code protection is disabled
  2011                           ;	Data Code Protection bit
  2012                           ;	CPD = OFF, Data memory code protection is disabled
  2013                           ;	Brown Out Reset Selection bits
  2014                           ;	BOREN = OFF, BOR disabled
  2015                           ;	Internal External Switchover bit
  2016                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2017                           ;	Fail-Safe Clock Monitor Enabled bit
  2018                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2019                           ;	Low Voltage Programming Enable bit
  2020                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2021                           ;	In-Circuit Debugger Mode bit
  2022                           ;	DEBUG = 0x1, unprogrammed default
  2023  2007                     	org	8199
  2024  2007  20D4               	dw	8404
  2025                           
  2026                           ;Config register CONFIG2 @ 0x2008
  2027                           ;	Brown-out Reset Selection bit
  2028                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2029                           ;	Flash Program Memory Self Write Enable bits
  2030                           ;	WRT = OFF, Write protection off
  2031  2008                     	org	8200
  2032  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC_INIT
    _setup->_OSCILLATOR
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     516
                                              1 BANK0      1     1      0
                           _ADC_READ
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     516
                           _ADC_INIT
                            _IOC_INT
                         _OSCILLATOR
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _IOC_INT                                              1     1      0      30
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _setup
     _ADC_INIT
     _IOC_INT
     _OSCILLATOR
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Aug 01 21:35:40 2023

            _SSPSTATbits 0094                       l84 01AC                       l68 0193  
                     l85 01B1                       u30 01C4                       u31 01C3  
                    l120 00D0                      l122 00D4                      l130 0116  
                    l123 00D8                      l140 003B                      l116 01E1  
                    l124 00DC                      l141 0042                      l125 00E0  
                    l150 00CA                      l142 0049                      l134 0018  
                    l126 00E4                      l143 0050                      l135 00B5  
                    l127 00E8                      l144 0057                      l136 001F  
                    l128 00EC                      l153 01BE                      l145 005E  
                    l137 0026                      l129 00F0                      l146 0065  
                    l138 002D                      l147 006C                      l139 0034  
                    l156 01C5                      l148 0073                      l149 007A  
                    l830 01C4                      l760 01DD                      l752 00F4  
                    l826 01B2                      l770 00C7                      l762 0017  
                    l828 01B5                      l748 00CC                      l766 0081  
                    l758 01DA                      l768 00C3                      l990 01A6  
                    l992 01AB                      l984 0197                      l986 01A0  
                    l994 0161                      l988 01A4                      l996 0167  
                    l998 016B                      _RB0 0030                      _RB1 0031  
                    u120 01A0                      u121 019F                      u137 00C5  
                    u147 01B9                      _POT 0079                      _isr 0117  
        __end_of_IOC_INT 01E2                     l1000 016C                     l1010 0180  
                   l1002 0170                     l1020 0189                     l1012 0181  
                   l1004 0173                     l1014 0184                     l1006 0179  
                   l1022 01C6                     l1016 0187                     l1008 017F  
                   l1024 01CB                     l1018 0188                     l1066 00FC  
                   l1068 0089                     ?_isr 0070                     i1l47 0136  
                   i1l48 012A                     i1l57 015A                     i1l91 01F1  
                   i1l94 01F7                     i1l88 01EB                     i1l97 01EA  
                   u2_20 01F1                     u2_21 01F0                     u4_20 011B  
                   u4_21 011A                     u5_20 0121                     u5_21 0120  
                   u6_20 0125                     u6_21 0124                     u7_20 012E  
                   u7_21 012D                     u8_20 0132                     u8_21 0131  
                   u9_20 013C                     u9_21 013B         __end_of_ADC_INIT 00CB  
       __end_of_ADC_READ 01C6                     _cont 0077                     _main 01C6  
                   btemp 007E                     start 000C              ?_OSCILLATOR 0070  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l840 0125                    i1l850 0144                    i1l842 012E  
                  i1l834 0117                    i1l852 014A                    i1l844 0132  
                  i1l836 011B                    i1l790 01E2                    i1l854 0151  
                  i1l846 0134                    i1l838 0121                    i1l792 01E7  
                  i1l856 0157                    i1l848 013C                    i1l788 01EB  
                  i1l796 01F3                    u10_20 014A                    u10_21 0149  
                  _PORTB 0006                    _TRISB 0086                    _check 0078  
                  _setup 0161                    pclath 000A          __end_of_spiInit 01B2  
        __end_of_spiRead 01EB                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01D9                   ??_main 0021  
              ADC_INIT@c 0076                ??_IOC_INT 0074                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_INIT 0070                ?_ADC_READ 0070                   saved_w 007E  
       __end_of_spiWrite 01F8                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0012           __pcstackCOMMON 0070              OSCILLATOR@f 0076  
          __end_of_setup 0194               ??_ADC_INIT 0074               ??_ADC_READ 0074  
         _OPTION_REGbits 0081                  ??_setup 0077             ??_OSCILLATOR 0074  
             __pmaintext 01C6               __pintentry 0004                  _IOC_INT 01D9  
     __end_of_OSCILLATOR 0117                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0161                  __ptext2 0194                  __ptext3 00CB  
                __ptext4 01D9                  __ptext5 0016                  __ptext6 01B2  
                __ptext7 0117                  __ptext8 01F2                  __ptext9 01E2  
                _spiInit 0194                  _spiRead 01E2     end_of_initialization 0012  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 01EB      start_initialization 000F              __end_of_isr 0161  
 __end_of_spiReceiveWait 01F2                 ?_IOC_INT 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                 IOC_INT@a 0074  
        ?_spiReceiveWait 0070                 _ADC_INIT 0016                 _ADC_READ 01B2  
               ?_spiInit 0074                 ?_spiRead 0070     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _WPUBbits 0095                 __ptext10 01EB  
               _spiWrite 01F2             spiInit@sType 0020        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCILLATOR 00CB               _OSCCONbits 008F  
