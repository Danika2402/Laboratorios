

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Jul 28 21:05:59 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  001E                     _ADRESH	set	30
   372  001F                     _ADCON0bits	set	31
   373  0013                     _SSPBUF	set	19
   374  0014                     _SSPCON	set	20
   375  0006                     _PORTB	set	6
   376  000B                     _INTCONbits	set	11
   377  0008                     _PORTD	set	8
   378  000C                     _PIR1bits	set	12
   379  0031                     _RB1	set	49
   380  0030                     _RB0	set	48
   381  009F                     _ADCON1bits	set	159
   382  008F                     _OSCCONbits	set	143
   383  0096                     _IOCBbits	set	150
   384  0095                     _WPUBbits	set	149
   385  0081                     _OPTION_REGbits	set	129
   386  0094                     _SSPSTATbits	set	148
   387  0094                     _SSPSTAT	set	148
   388  0085                     _TRISAbits	set	133
   389  008C                     _PIE1bits	set	140
   390  0088                     _TRISD	set	136
   391  0086                     _TRISB	set	134
   392  043B                     _TRISC3	set	1083
   393  043D                     _TRISC5	set	1085
   394  0189                     _ANSELH	set	393
   395  0188                     _ANSEL	set	392
   396                           
   397                           	psect	cinit
   398  000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401  000F                     __initialization:
   402                           
   403                           ; Clear objects allocated to COMMON
   404  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   405  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   406  0011                     end_of_initialization:	
   407                           ;End of C runtime variable initialization code
   408                           
   409  0011                     __end_of__initialization:
   410  0011  0183               	clrf	3
   411  0012  120A  118A  29C4   	ljmp	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMMON
   414  0078                     __pbssCOMMON:
   415  0078                     _check:
   416  0078                     	ds	1
   417  0079                     _POT:
   418  0079                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_spiRead:
   423  0070                     ??_spiRead:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_spiWrite:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_setup:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_ADC_READ:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_OSCILLATOR:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_IOC_INT:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_ADC_INIT:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_isr:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_spiReceiveWait:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??_spiReceiveWait:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     spiWrite@dat:	
   460                           ; 1 bytes @ 0x0
   461                           
   462                           
   463                           ; 1 bytes @ 0x0
   464  0070                     	ds	1
   465  0071                     ??_isr:
   466                           
   467                           ; 1 bytes @ 0x1
   468  0071                     	ds	3
   469  0074                     ??_ADC_READ:
   470  0074                     ??_OSCILLATOR:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0074                     ??_IOC_INT:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0074                     ??_ADC_INIT:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     ?_spiInit:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     spiInit@sDataSample:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0074                     IOC_INT@a:	
   486                           ; 1 bytes @ 0x4
   487                           
   488                           
   489                           ; 1 bytes @ 0x4
   490  0074                     	ds	1
   491  0075                     spiInit@sClockIdle:
   492                           
   493                           ; 1 bytes @ 0x5
   494  0075                     	ds	1
   495  0076                     spiInit@sTransmitEdge:
   496  0076                     OSCILLATOR@f:	
   497                           ; 1 bytes @ 0x6
   498                           
   499  0076                     ADC_INIT@c:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 1 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     ??_spiInit:
   506  0077                     spiInit@sType:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 1 bytes @ 0x7
   511  0077                     	ds	1
   512  0078                     ??_setup:
   513                           
   514                           	psect	cstackBANK0
   515  0020                     __pcstackBANK0:	
   516                           ; 1 bytes @ 0x8
   517                           
   518  0020                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x0
   521  0020                     	ds	1
   522                           
   523                           	psect	maintext
   524  01C4                     __pmaintext:	
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 59 in file "MAIN_S1.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : B00/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       1       0       0       0
   547 ;;      Totals:         0       1       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels required when called: 5
   550 ;; This function calls:
   551 ;;		_ADC_READ
   552 ;;		_setup
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558  01C4                     _main:	
   559                           ;psect for function _main
   560                           
   561  01C4                     l1008:	
   562                           ;incstack = 0
   563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;MAIN_S1.c: 60:     setup();
   567  01C4  120A  118A  2165  120A  118A  	fcall	_setup
   568  01C9                     l1010:
   569                           
   570                           ;MAIN_S1.c: 66:        POT = ADC_READ();
   571  01C9  120A  118A  21B0  120A  118A  	fcall	_ADC_READ
   572  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   573  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   574  01D0  00A0               	movwf	??_main
   575  01D1  0820               	movf	??_main,w
   576  01D2  00F9               	movwf	_POT
   577  01D3  29C9               	goto	l1010
   578  01D4  120A  118A  280C   	ljmp	start
   579  01D7                     __end_of_main:
   580                           
   581                           	psect	text1
   582  0165                     __ptext1:	
   583 ;; *************** function _setup *****************
   584 ;; Defined at:
   585 ;;		line 73 in file "MAIN_S1.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 4
   606 ;; This function calls:
   607 ;;		_ADC_INIT
   608 ;;		_IOC_INT
   609 ;;		_OSCILLATOR
   610 ;;		_spiInit
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616  0165                     _setup:	
   617                           ;psect for function _setup
   618                           
   619  0165                     l932:	
   620                           ;incstack = 0
   621                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   622                           
   623                           
   624                           ;MAIN_S1.c: 75:     OSCILLATOR(1);
   625  0165  3001               	movlw	1
   626  0166  120A  118A  2119  120A  118A  	fcall	_OSCILLATOR
   627  016B                     l934:
   628                           
   629                           ;MAIN_S1.c: 77:     ANSEL = 0b00100000;
   630  016B  3020               	movlw	32
   631  016C  1683               	bsf	3,5	;RP0=1, select bank3
   632  016D  1703               	bsf	3,6	;RP1=1, select bank3
   633  016E  0088               	movwf	8	;volatile
   634  016F                     l936:
   635                           
   636                           ;MAIN_S1.c: 78:     ANSELH = 0x00;
   637  016F  0189               	clrf	9	;volatile
   638  0170                     l938:
   639                           
   640                           ;MAIN_S1.c: 80:     TRISB = 0b00000011;
   641  0170  3003               	movlw	3
   642  0171  1683               	bsf	3,5	;RP0=1, select bank1
   643  0172  1303               	bcf	3,6	;RP1=0, select bank1
   644  0173  0086               	movwf	6	;volatile
   645  0174                     l940:
   646                           
   647                           ;MAIN_S1.c: 81:     TRISD = 0;
   648  0174  0188               	clrf	8	;volatile
   649  0175                     l942:
   650                           
   651                           ;MAIN_S1.c: 83:     PORTB = 0;
   652  0175  1283               	bcf	3,5	;RP0=0, select bank0
   653  0176  1303               	bcf	3,6	;RP1=0, select bank0
   654  0177  0186               	clrf	6	;volatile
   655  0178                     l944:
   656                           
   657                           ;MAIN_S1.c: 84:     PORTD = 0;
   658  0178  0188               	clrf	8	;volatile
   659  0179                     l946:
   660                           
   661                           ;MAIN_S1.c: 87:     IOC_INT(0b00000011);
   662  0179  3003               	movlw	3
   663  017A  120A  118A  21D7  120A  118A  	fcall	_IOC_INT
   664  017F                     l948:
   665                           
   666                           ;MAIN_S1.c: 90:     ADC_INIT(5);
   667  017F  3005               	movlw	5
   668  0180  120A  118A  2015  120A  118A  	fcall	_ADC_INIT
   669  0185                     l950:
   670                           
   671                           ;MAIN_S1.c: 92:     INTCONbits.GIE = 1;
   672  0185  178B               	bsf	11,7	;volatile
   673  0186                     l952:
   674                           
   675                           ;MAIN_S1.c: 93:     INTCONbits.PEIE = 1;
   676  0186  170B               	bsf	11,6	;volatile
   677  0187                     l954:
   678                           
   679                           ;MAIN_S1.c: 94:     PIR1bits.SSPIF = 0;
   680  0187  1283               	bcf	3,5	;RP0=0, select bank0
   681  0188  1303               	bcf	3,6	;RP1=0, select bank0
   682  0189  118C               	bcf	12,3	;volatile
   683  018A                     l956:
   684                           
   685                           ;MAIN_S1.c: 95:     PIE1bits.SSPIE = 1;
   686  018A  1683               	bsf	3,5	;RP0=1, select bank1
   687  018B  1303               	bcf	3,6	;RP1=0, select bank1
   688  018C  158C               	bsf	12,3	;volatile
   689  018D                     l958:
   690                           
   691                           ;MAIN_S1.c: 96:     INTCONbits.RBIE = 1;
   692  018D  158B               	bsf	11,3	;volatile
   693  018E                     l960:
   694                           
   695                           ;MAIN_S1.c: 97:     INTCONbits.RBIF = 0;
   696  018E  100B               	bcf	11,0	;volatile
   697  018F                     l962:
   698                           
   699                           ;MAIN_S1.c: 99:     TRISAbits.TRISA5 = 1;
   700  018F  1685               	bsf	5,5	;volatile
   701                           
   702                           ;MAIN_S1.c: 101:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   703  0190  01F4               	clrf	spiInit@sDataSample
   704  0191  01F5               	clrf	spiInit@sClockIdle
   705  0192  01F6               	clrf	spiInit@sTransmitEdge
   706  0193  3024               	movlw	36
   707  0194  120A  118A  219A  120A  118A  	fcall	_spiInit
   708  0199                     l71:
   709  0199  0008               	return
   710  019A                     __end_of_setup:
   711                           
   712                           	psect	text2
   713  019A                     __ptext2:	
   714 ;; *************** function _spiInit *****************
   715 ;; Defined at:
   716 ;;		line 12 in file "SPIS1.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  sType           1    wreg     enum E1292
   719 ;;  sDataSample     1    4[COMMON] enum E1300
   720 ;;  sClockIdle      1    5[COMMON] enum E1304
   721 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  sType           1    7[COMMON] enum E1292
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         3       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         4       0       0       0       0
   737 ;;Total ram usage:        4 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 3
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_setup
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747  019A                     _spiInit:	
   748                           ;psect for function _spiInit
   749                           
   750                           
   751                           ;incstack = 0
   752                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   753                           ;spiInit@sType stored from wreg
   754  019A  00F7               	movwf	spiInit@sType
   755  019B                     l922:
   756                           
   757                           ;SPIS1.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPIS1.c: 13: {;SPIS1.c: 14:     TRISC5 = 0;
   758  019B  1683               	bsf	3,5	;RP0=1, select bank1
   759  019C  1303               	bcf	3,6	;RP1=0, select bank1
   760  019D  1287               	bcf	7,5	;volatile
   761                           
   762                           ;SPIS1.c: 15:     if(sType & 0b00000100)
   763  019E  1D77               	btfss	spiInit@sType,2
   764  019F  29A1               	goto	u121
   765  01A0  29A2               	goto	u120
   766  01A1                     u121:
   767  01A1  29A6               	goto	l928
   768  01A2                     u120:
   769  01A2                     l924:
   770                           
   771                           ;SPIS1.c: 16:     {;SPIS1.c: 17:         SSPSTAT = sTransmitEdge;
   772  01A2  0876               	movf	spiInit@sTransmitEdge,w
   773  01A3  0094               	movwf	20	;volatile
   774  01A4                     l926:
   775                           
   776                           ;SPIS1.c: 18:         TRISC3 = 1;
   777  01A4  1587               	bsf	7,3	;volatile
   778                           
   779                           ;SPIS1.c: 19:     }
   780  01A5  29AA               	goto	l87
   781  01A6                     l928:
   782                           
   783                           ;SPIS1.c: 21:     {;SPIS1.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   784  01A6  0874               	movf	spiInit@sDataSample,w
   785  01A7  0476               	iorwf	spiInit@sTransmitEdge,w
   786  01A8  0094               	movwf	20	;volatile
   787  01A9                     l930:
   788                           
   789                           ;SPIS1.c: 23:         TRISC3 = 0;
   790  01A9  1187               	bcf	7,3	;volatile
   791  01AA                     l87:	
   792                           ;SPIS1.c: 24:     }
   793                           
   794                           
   795                           ;SPIS1.c: 26:     SSPCON = sType | sClockIdle;
   796  01AA  0877               	movf	spiInit@sType,w
   797  01AB  0475               	iorwf	spiInit@sClockIdle,w
   798  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   799  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   800  01AE  0094               	movwf	20	;volatile
   801  01AF                     l88:
   802  01AF  0008               	return
   803  01B0                     __end_of_spiInit:
   804                           
   805                           	psect	text3
   806  0119                     __ptext3:	
   807 ;; *************** function _OSCILLATOR *****************
   808 ;; Defined at:
   809 ;;		line 36 in file "ADC.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  f               1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  f               1    6[COMMON] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         1       0       0       0       0
   825 ;;      Temps:          2       0       0       0       0
   826 ;;      Totals:         3       0       0       0       0
   827 ;;Total ram usage:        3 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 3
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_setup
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837  0119                     _OSCILLATOR:	
   838                           ;psect for function _OSCILLATOR
   839                           
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _OSCILLATOR: [wreg-fsr0h+status,2+status,0]
   843                           ;OSCILLATOR@f stored from wreg
   844  0119  00F6               	movwf	OSCILLATOR@f
   845  011A                     l756:
   846                           
   847                           ;ADC.c: 37:     OSCCONbits.SCS = 1;
   848  011A  1683               	bsf	3,5	;RP0=1, select bank1
   849  011B  1303               	bcf	3,6	;RP1=0, select bank1
   850  011C  140F               	bsf	15,0	;volatile
   851                           
   852                           ;ADC.c: 39:     switch(f){
   853  011D  2942               	goto	l760
   854  011E                     l128:	
   855                           ;ADC.c: 40:         case(1):
   856                           
   857                           
   858                           ;ADC.c: 41:             OSCCONbits.IRCF2 =1;
   859  011E  170F               	bsf	15,6	;volatile
   860                           
   861                           ;ADC.c: 42:             OSCCONbits.IRCF1 =1;
   862  011F  168F               	bsf	15,5	;volatile
   863                           
   864                           ;ADC.c: 43:             OSCCONbits.IRCF0 =1;
   865  0120  160F               	bsf	15,4	;volatile
   866                           
   867                           ;ADC.c: 44:             break;
   868  0121  2964               	goto	l138
   869  0122                     l130:	
   870                           ;ADC.c: 46:         case(2):
   871                           
   872                           
   873                           ;ADC.c: 47:             OSCCONbits.IRCF2 =1;
   874  0122  170F               	bsf	15,6	;volatile
   875                           
   876                           ;ADC.c: 48:             OSCCONbits.IRCF1 =1;
   877  0123  168F               	bsf	15,5	;volatile
   878                           
   879                           ;ADC.c: 49:             OSCCONbits.IRCF0 =0;
   880  0124  120F               	bcf	15,4	;volatile
   881                           
   882                           ;ADC.c: 50:             break;
   883  0125  2964               	goto	l138
   884  0126                     l131:	
   885                           ;ADC.c: 52:         case(3):
   886                           
   887                           
   888                           ;ADC.c: 53:             OSCCONbits.IRCF2 =1;
   889  0126  170F               	bsf	15,6	;volatile
   890                           
   891                           ;ADC.c: 54:             OSCCONbits.IRCF1 =0;
   892  0127  128F               	bcf	15,5	;volatile
   893                           
   894                           ;ADC.c: 55:             OSCCONbits.IRCF0 =1;
   895  0128  160F               	bsf	15,4	;volatile
   896                           
   897                           ;ADC.c: 56:             break;
   898  0129  2964               	goto	l138
   899  012A                     l132:	
   900                           ;ADC.c: 58:         case(4):
   901                           
   902                           
   903                           ;ADC.c: 59:             OSCCONbits.IRCF2 =1;
   904  012A  170F               	bsf	15,6	;volatile
   905                           
   906                           ;ADC.c: 60:             OSCCONbits.IRCF1 =0;
   907  012B  128F               	bcf	15,5	;volatile
   908                           
   909                           ;ADC.c: 61:             OSCCONbits.IRCF0 =0;
   910  012C  120F               	bcf	15,4	;volatile
   911                           
   912                           ;ADC.c: 62:             break;
   913  012D  2964               	goto	l138
   914  012E                     l133:	
   915                           ;ADC.c: 64:         case(5):
   916                           
   917                           
   918                           ;ADC.c: 65:             OSCCONbits.IRCF2 =0;
   919  012E  130F               	bcf	15,6	;volatile
   920                           
   921                           ;ADC.c: 66:             OSCCONbits.IRCF1 =1;
   922  012F  168F               	bsf	15,5	;volatile
   923                           
   924                           ;ADC.c: 67:             OSCCONbits.IRCF0 =1;
   925  0130  160F               	bsf	15,4	;volatile
   926                           
   927                           ;ADC.c: 68:             break;
   928  0131  2964               	goto	l138
   929  0132                     l134:	
   930                           ;ADC.c: 70:         case(6):
   931                           
   932                           
   933                           ;ADC.c: 71:             OSCCONbits.IRCF2 =0;
   934  0132  130F               	bcf	15,6	;volatile
   935                           
   936                           ;ADC.c: 72:             OSCCONbits.IRCF1 =1;
   937  0133  168F               	bsf	15,5	;volatile
   938                           
   939                           ;ADC.c: 73:             OSCCONbits.IRCF0 =0;
   940  0134  120F               	bcf	15,4	;volatile
   941                           
   942                           ;ADC.c: 74:             break;
   943  0135  2964               	goto	l138
   944  0136                     l135:	
   945                           ;ADC.c: 76:         case(7):
   946                           
   947                           
   948                           ;ADC.c: 77:             OSCCONbits.IRCF2 =0;
   949  0136  130F               	bcf	15,6	;volatile
   950                           
   951                           ;ADC.c: 78:             OSCCONbits.IRCF1 =0;
   952  0137  128F               	bcf	15,5	;volatile
   953                           
   954                           ;ADC.c: 79:             OSCCONbits.IRCF0 =1;
   955  0138  160F               	bsf	15,4	;volatile
   956                           
   957                           ;ADC.c: 80:             break;
   958  0139  2964               	goto	l138
   959  013A                     l136:	
   960                           ;ADC.c: 82:         case(8):
   961                           
   962                           
   963                           ;ADC.c: 83:             OSCCONbits.IRCF2 =0;
   964  013A  130F               	bcf	15,6	;volatile
   965                           
   966                           ;ADC.c: 84:             OSCCONbits.IRCF1 =0;
   967  013B  128F               	bcf	15,5	;volatile
   968                           
   969                           ;ADC.c: 85:             OSCCONbits.IRCF0 =0;
   970  013C  120F               	bcf	15,4	;volatile
   971                           
   972                           ;ADC.c: 86:             break;
   973  013D  2964               	goto	l138
   974  013E                     l137:	
   975                           ;ADC.c: 88:         default:
   976                           
   977                           
   978                           ;ADC.c: 89:             OSCCONbits.IRCF2 =1;
   979  013E  170F               	bsf	15,6	;volatile
   980                           
   981                           ;ADC.c: 90:             OSCCONbits.IRCF1 =1;
   982  013F  168F               	bsf	15,5	;volatile
   983                           
   984                           ;ADC.c: 91:             OSCCONbits.IRCF0 =0;
   985  0140  120F               	bcf	15,4	;volatile
   986                           
   987                           ;ADC.c: 92:             break;
   988  0141  2964               	goto	l138
   989  0142                     l760:
   990  0142  0876               	movf	OSCILLATOR@f,w
   991  0143  00F4               	movwf	??_OSCILLATOR
   992  0144  01F5               	clrf	??_OSCILLATOR+1
   993                           
   994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 1, Range of values is 0 to 0
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            4     3 (average)
  1000                           ; direct_byte           11     8 (fixed)
  1001                           ; jumptable            260     6 (fixed)
  1002                           ;	Chosen strategy is simple_byte
  1003  0145  0875               	movf	??_OSCILLATOR+1,w
  1004  0146  3A00               	xorlw	0	; case 0
  1005  0147  1903               	skipnz
  1006  0148  294A               	goto	l1052
  1007  0149  293E               	goto	l137
  1008  014A                     l1052:
  1009                           
  1010                           ; Switch size 1, requested type "simple"
  1011                           ; Number of cases is 8, Range of values is 1 to 8
  1012                           ; switch strategies available:
  1013                           ; Name         Instructions Cycles
  1014                           ; simple_byte           25    13 (average)
  1015                           ; direct_byte           35    11 (fixed)
  1016                           ; jumptable            263     9 (fixed)
  1017                           ;	Chosen strategy is simple_byte
  1018  014A  0874               	movf	??_OSCILLATOR,w
  1019  014B  3A01               	xorlw	1	; case 1
  1020  014C  1903               	skipnz
  1021  014D  291E               	goto	l128
  1022  014E  3A03               	xorlw	3	; case 2
  1023  014F  1903               	skipnz
  1024  0150  2922               	goto	l130
  1025  0151  3A01               	xorlw	1	; case 3
  1026  0152  1903               	skipnz
  1027  0153  2926               	goto	l131
  1028  0154  3A07               	xorlw	7	; case 4
  1029  0155  1903               	skipnz
  1030  0156  292A               	goto	l132
  1031  0157  3A01               	xorlw	1	; case 5
  1032  0158  1903               	skipnz
  1033  0159  292E               	goto	l133
  1034  015A  3A03               	xorlw	3	; case 6
  1035  015B  1903               	skipnz
  1036  015C  2932               	goto	l134
  1037  015D  3A01               	xorlw	1	; case 7
  1038  015E  1903               	skipnz
  1039  015F  2936               	goto	l135
  1040  0160  3A0F               	xorlw	15	; case 8
  1041  0161  1903               	skipnz
  1042  0162  293A               	goto	l136
  1043  0163  293E               	goto	l137
  1044  0164                     l138:
  1045  0164  0008               	return
  1046  0165                     __end_of_OSCILLATOR:
  1047                           
  1048                           	psect	text4
  1049  01D7                     __ptext4:	
  1050 ;; *************** function _IOC_INT *****************
  1051 ;; Defined at:
  1052 ;;		line 27 in file "ADC.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  a               1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  a               1    4[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         1       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         1       0       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 3
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_setup
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080  01D7                     _IOC_INT:	
  1081                           ;psect for function _IOC_INT
  1082                           
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _IOC_INT: [wreg]
  1086                           ;IOC_INT@a stored from wreg
  1087  01D7  00F4               	movwf	IOC_INT@a
  1088  01D8                     l766:
  1089                           
  1090                           ;ADC.c: 30:     OPTION_REGbits.nRBPU = 0;
  1091  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1092  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1093  01DA  1381               	bcf	1,7	;volatile
  1094  01DB                     l768:
  1095                           
  1096                           ;ADC.c: 31:     WPUBbits.WPUB = a;
  1097  01DB  0874               	movf	IOC_INT@a,w
  1098  01DC  0095               	movwf	21	;volatile
  1099                           
  1100                           ;ADC.c: 32:     IOCBbits.IOCB = a;
  1101  01DD  0874               	movf	IOC_INT@a,w
  1102  01DE  0096               	movwf	22	;volatile
  1103  01DF                     l124:
  1104  01DF  0008               	return
  1105  01E0                     __end_of_IOC_INT:
  1106                           
  1107                           	psect	text5
  1108  0015                     __ptext5:	
  1109 ;; *************** function _ADC_INIT *****************
  1110 ;; Defined at:
  1111 ;;		line 98 in file "ADC.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  c               1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  c               1    6[COMMON] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0
  1127 ;;      Temps:          2       0       0       0       0
  1128 ;;      Totals:         3       0       0       0       0
  1129 ;;Total ram usage:        3 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 3
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_setup
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139  0015                     _ADC_INIT:	
  1140                           ;psect for function _ADC_INIT
  1141                           
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
  1145                           ;ADC_INIT@c stored from wreg
  1146  0015  00F6               	movwf	ADC_INIT@c
  1147  0016                     l770:
  1148                           
  1149                           ;ADC.c: 99:     switch(c){
  1150  0016  2880               	goto	l774
  1151  0017                     l142:	
  1152                           ;ADC.c: 100:         case 0:
  1153                           
  1154                           
  1155                           ;ADC.c: 101:             ADCON0bits.CHS3 = 0;
  1156  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0019  129F               	bcf	31,5	;volatile
  1159                           
  1160                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  1161  001A  121F               	bcf	31,4	;volatile
  1162                           
  1163                           ;ADC.c: 103:             ADCON0bits.CHS1 = 0;
  1164  001B  119F               	bcf	31,3	;volatile
  1165                           
  1166                           ;ADC.c: 104:             ADCON0bits.CHS0 = 0;
  1167  001C  111F               	bcf	31,2	;volatile
  1168                           
  1169                           ;ADC.c: 105:             break;
  1170  001D  28B4               	goto	l143
  1171  001E                     l144:	
  1172                           ;ADC.c: 107:         case 1:
  1173                           
  1174                           
  1175                           ;ADC.c: 108:             ADCON0bits.CHS3 = 0;
  1176  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1177  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0020  129F               	bcf	31,5	;volatile
  1179                           
  1180                           ;ADC.c: 109:             ADCON0bits.CHS2 = 0;
  1181  0021  121F               	bcf	31,4	;volatile
  1182                           
  1183                           ;ADC.c: 110:             ADCON0bits.CHS1 = 0;
  1184  0022  119F               	bcf	31,3	;volatile
  1185                           
  1186                           ;ADC.c: 111:             ADCON0bits.CHS0 = 1;
  1187  0023  151F               	bsf	31,2	;volatile
  1188                           
  1189                           ;ADC.c: 112:             break;
  1190  0024  28B4               	goto	l143
  1191  0025                     l145:	
  1192                           ;ADC.c: 114:         case 2:
  1193                           
  1194                           
  1195                           ;ADC.c: 115:             ADCON0bits.CHS3 = 0;
  1196  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0027  129F               	bcf	31,5	;volatile
  1199                           
  1200                           ;ADC.c: 116:             ADCON0bits.CHS2 = 0;
  1201  0028  121F               	bcf	31,4	;volatile
  1202                           
  1203                           ;ADC.c: 117:             ADCON0bits.CHS1 = 1;
  1204  0029  159F               	bsf	31,3	;volatile
  1205                           
  1206                           ;ADC.c: 118:             ADCON0bits.CHS0 = 0;
  1207  002A  111F               	bcf	31,2	;volatile
  1208                           
  1209                           ;ADC.c: 119:             break;
  1210  002B  28B4               	goto	l143
  1211  002C                     l146:	
  1212                           ;ADC.c: 121:         case 3:
  1213                           
  1214                           
  1215                           ;ADC.c: 122:             ADCON0bits.CHS3 = 0;
  1216  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1217  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1218  002E  129F               	bcf	31,5	;volatile
  1219                           
  1220                           ;ADC.c: 123:             ADCON0bits.CHS2 = 0;
  1221  002F  121F               	bcf	31,4	;volatile
  1222                           
  1223                           ;ADC.c: 124:             ADCON0bits.CHS1 = 1;
  1224  0030  159F               	bsf	31,3	;volatile
  1225                           
  1226                           ;ADC.c: 125:             ADCON0bits.CHS0 = 1;
  1227  0031  151F               	bsf	31,2	;volatile
  1228                           
  1229                           ;ADC.c: 126:             break;
  1230  0032  28B4               	goto	l143
  1231  0033                     l147:	
  1232                           ;ADC.c: 128:         case 4:
  1233                           
  1234                           
  1235                           ;ADC.c: 129:             ADCON0bits.CHS3 = 0;
  1236  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0035  129F               	bcf	31,5	;volatile
  1239                           
  1240                           ;ADC.c: 130:             ADCON0bits.CHS2 = 1;
  1241  0036  161F               	bsf	31,4	;volatile
  1242                           
  1243                           ;ADC.c: 131:             ADCON0bits.CHS1 = 0;
  1244  0037  119F               	bcf	31,3	;volatile
  1245                           
  1246                           ;ADC.c: 132:             ADCON0bits.CHS0 = 0;
  1247  0038  111F               	bcf	31,2	;volatile
  1248                           
  1249                           ;ADC.c: 133:             break;
  1250  0039  28B4               	goto	l143
  1251  003A                     l148:	
  1252                           ;ADC.c: 135:         case 5:
  1253                           
  1254                           
  1255                           ;ADC.c: 136:             ADCON0bits.CHS3 = 0;
  1256  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1257  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1258  003C  129F               	bcf	31,5	;volatile
  1259                           
  1260                           ;ADC.c: 137:             ADCON0bits.CHS2 = 1;
  1261  003D  161F               	bsf	31,4	;volatile
  1262                           
  1263                           ;ADC.c: 138:             ADCON0bits.CHS1 = 0;
  1264  003E  119F               	bcf	31,3	;volatile
  1265                           
  1266                           ;ADC.c: 139:             ADCON0bits.CHS0 = 1;
  1267  003F  151F               	bsf	31,2	;volatile
  1268                           
  1269                           ;ADC.c: 140:             break;
  1270  0040  28B4               	goto	l143
  1271  0041                     l149:	
  1272                           ;ADC.c: 142:         case 6:
  1273                           
  1274                           
  1275                           ;ADC.c: 143:             ADCON0bits.CHS3 = 0;
  1276  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0043  129F               	bcf	31,5	;volatile
  1279                           
  1280                           ;ADC.c: 144:             ADCON0bits.CHS2 = 1;
  1281  0044  161F               	bsf	31,4	;volatile
  1282                           
  1283                           ;ADC.c: 145:             ADCON0bits.CHS1 = 1;
  1284  0045  159F               	bsf	31,3	;volatile
  1285                           
  1286                           ;ADC.c: 146:             ADCON0bits.CHS0 = 0;
  1287  0046  111F               	bcf	31,2	;volatile
  1288                           
  1289                           ;ADC.c: 147:             break;
  1290  0047  28B4               	goto	l143
  1291  0048                     l150:	
  1292                           ;ADC.c: 149:         case 7:
  1293                           
  1294                           
  1295                           ;ADC.c: 150:             ADCON0bits.CHS3 = 0;
  1296  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1298  004A  129F               	bcf	31,5	;volatile
  1299                           
  1300                           ;ADC.c: 151:             ADCON0bits.CHS2 = 1;
  1301  004B  161F               	bsf	31,4	;volatile
  1302                           
  1303                           ;ADC.c: 152:             ADCON0bits.CHS1 = 1;
  1304  004C  159F               	bsf	31,3	;volatile
  1305                           
  1306                           ;ADC.c: 153:             ADCON0bits.CHS0 = 1;
  1307  004D  151F               	bsf	31,2	;volatile
  1308                           
  1309                           ;ADC.c: 154:             break;
  1310  004E  28B4               	goto	l143
  1311  004F                     l151:	
  1312                           ;ADC.c: 156:         case 8:
  1313                           
  1314                           
  1315                           ;ADC.c: 157:             ADCON0bits.CHS3 = 1;
  1316  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0051  169F               	bsf	31,5	;volatile
  1319                           
  1320                           ;ADC.c: 158:             ADCON0bits.CHS2 = 0;
  1321  0052  121F               	bcf	31,4	;volatile
  1322                           
  1323                           ;ADC.c: 159:             ADCON0bits.CHS1 = 0;
  1324  0053  119F               	bcf	31,3	;volatile
  1325                           
  1326                           ;ADC.c: 160:             ADCON0bits.CHS0 = 0;
  1327  0054  111F               	bcf	31,2	;volatile
  1328                           
  1329                           ;ADC.c: 161:             break;
  1330  0055  28B4               	goto	l143
  1331  0056                     l152:	
  1332                           ;ADC.c: 163:         case 9:
  1333                           
  1334                           
  1335                           ;ADC.c: 164:             ADCON0bits.CHS3 = 1;
  1336  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0058  169F               	bsf	31,5	;volatile
  1339                           
  1340                           ;ADC.c: 165:             ADCON0bits.CHS2 = 0;
  1341  0059  121F               	bcf	31,4	;volatile
  1342                           
  1343                           ;ADC.c: 166:             ADCON0bits.CHS1 = 0;
  1344  005A  119F               	bcf	31,3	;volatile
  1345                           
  1346                           ;ADC.c: 167:             ADCON0bits.CHS0 = 1;
  1347  005B  151F               	bsf	31,2	;volatile
  1348                           
  1349                           ;ADC.c: 168:             break;
  1350  005C  28B4               	goto	l143
  1351  005D                     l153:	
  1352                           ;ADC.c: 170:         case 10:
  1353                           
  1354                           
  1355                           ;ADC.c: 171:             ADCON0bits.CHS3 = 1;
  1356  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1357  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1358  005F  169F               	bsf	31,5	;volatile
  1359                           
  1360                           ;ADC.c: 172:             ADCON0bits.CHS2 = 0;
  1361  0060  121F               	bcf	31,4	;volatile
  1362                           
  1363                           ;ADC.c: 173:             ADCON0bits.CHS1 = 1;
  1364  0061  159F               	bsf	31,3	;volatile
  1365                           
  1366                           ;ADC.c: 174:             ADCON0bits.CHS0 = 0;
  1367  0062  111F               	bcf	31,2	;volatile
  1368                           
  1369                           ;ADC.c: 175:             break;
  1370  0063  28B4               	goto	l143
  1371  0064                     l154:	
  1372                           ;ADC.c: 177:         case 11:
  1373                           
  1374                           
  1375                           ;ADC.c: 178:             ADCON0bits.CHS3 = 1;
  1376  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0066  169F               	bsf	31,5	;volatile
  1379                           
  1380                           ;ADC.c: 179:             ADCON0bits.CHS2 = 0;
  1381  0067  121F               	bcf	31,4	;volatile
  1382                           
  1383                           ;ADC.c: 180:             ADCON0bits.CHS1 = 1;
  1384  0068  159F               	bsf	31,3	;volatile
  1385                           
  1386                           ;ADC.c: 181:             ADCON0bits.CHS0 = 1;
  1387  0069  151F               	bsf	31,2	;volatile
  1388                           
  1389                           ;ADC.c: 182:             break;
  1390  006A  28B4               	goto	l143
  1391  006B                     l155:	
  1392                           ;ADC.c: 184:         case 12:
  1393                           
  1394                           
  1395                           ;ADC.c: 185:             ADCON0bits.CHS3 = 1;
  1396  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1397  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1398  006D  169F               	bsf	31,5	;volatile
  1399                           
  1400                           ;ADC.c: 186:             ADCON0bits.CHS2 = 1;
  1401  006E  161F               	bsf	31,4	;volatile
  1402                           
  1403                           ;ADC.c: 187:             ADCON0bits.CHS1 = 0;
  1404  006F  119F               	bcf	31,3	;volatile
  1405                           
  1406                           ;ADC.c: 188:             ADCON0bits.CHS0 = 0;
  1407  0070  111F               	bcf	31,2	;volatile
  1408                           
  1409                           ;ADC.c: 189:             break;
  1410  0071  28B4               	goto	l143
  1411  0072                     l156:	
  1412                           ;ADC.c: 191:         case 13:
  1413                           
  1414                           
  1415                           ;ADC.c: 192:             ADCON0bits.CHS3 = 1;
  1416  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0074  169F               	bsf	31,5	;volatile
  1419                           
  1420                           ;ADC.c: 193:             ADCON0bits.CHS2 = 1;
  1421  0075  161F               	bsf	31,4	;volatile
  1422                           
  1423                           ;ADC.c: 194:             ADCON0bits.CHS1 = 0;
  1424  0076  119F               	bcf	31,3	;volatile
  1425                           
  1426                           ;ADC.c: 195:             ADCON0bits.CHS0 = 1;
  1427  0077  151F               	bsf	31,2	;volatile
  1428                           
  1429                           ;ADC.c: 196:             break;
  1430  0078  28B4               	goto	l143
  1431  0079                     l157:	
  1432                           ;ADC.c: 198:         default:
  1433                           
  1434                           
  1435                           ;ADC.c: 199:             ADCON0bits.CHS3 = 0;
  1436  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1437  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1438  007B  129F               	bcf	31,5	;volatile
  1439                           
  1440                           ;ADC.c: 200:             ADCON0bits.CHS2 = 0;
  1441  007C  121F               	bcf	31,4	;volatile
  1442                           
  1443                           ;ADC.c: 201:             ADCON0bits.CHS1 = 0;
  1444  007D  119F               	bcf	31,3	;volatile
  1445                           
  1446                           ;ADC.c: 202:             ADCON0bits.CHS0 = 0;
  1447  007E  111F               	bcf	31,2	;volatile
  1448                           
  1449                           ;ADC.c: 203:             break;
  1450  007F  28B4               	goto	l143
  1451  0080                     l774:
  1452  0080  0876               	movf	ADC_INIT@c,w
  1453  0081  00F4               	movwf	??_ADC_INIT
  1454  0082  01F5               	clrf	??_ADC_INIT+1
  1455                           
  1456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1457                           ; Switch size 1, requested type "simple"
  1458                           ; Number of cases is 1, Range of values is 0 to 0
  1459                           ; switch strategies available:
  1460                           ; Name         Instructions Cycles
  1461                           ; simple_byte            4     3 (average)
  1462                           ; direct_byte           11     8 (fixed)
  1463                           ; jumptable            260     6 (fixed)
  1464                           ;	Chosen strategy is simple_byte
  1465  0083  0875               	movf	??_ADC_INIT+1,w
  1466  0084  3A00               	xorlw	0	; case 0
  1467  0085  1903               	skipnz
  1468  0086  2888               	goto	l1054
  1469  0087  2879               	goto	l157
  1470  0088                     l1054:
  1471                           
  1472                           ; Switch size 1, requested type "simple"
  1473                           ; Number of cases is 14, Range of values is 0 to 13
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte           43    22 (average)
  1477                           ; direct_byte           50     8 (fixed)
  1478                           ; jumptable            260     6 (fixed)
  1479                           ;	Chosen strategy is simple_byte
  1480  0088  0874               	movf	??_ADC_INIT,w
  1481  0089  3A00               	xorlw	0	; case 0
  1482  008A  1903               	skipnz
  1483  008B  2817               	goto	l142
  1484  008C  3A01               	xorlw	1	; case 1
  1485  008D  1903               	skipnz
  1486  008E  281E               	goto	l144
  1487  008F  3A03               	xorlw	3	; case 2
  1488  0090  1903               	skipnz
  1489  0091  2825               	goto	l145
  1490  0092  3A01               	xorlw	1	; case 3
  1491  0093  1903               	skipnz
  1492  0094  282C               	goto	l146
  1493  0095  3A07               	xorlw	7	; case 4
  1494  0096  1903               	skipnz
  1495  0097  2833               	goto	l147
  1496  0098  3A01               	xorlw	1	; case 5
  1497  0099  1903               	skipnz
  1498  009A  283A               	goto	l148
  1499  009B  3A03               	xorlw	3	; case 6
  1500  009C  1903               	skipnz
  1501  009D  2841               	goto	l149
  1502  009E  3A01               	xorlw	1	; case 7
  1503  009F  1903               	skipnz
  1504  00A0  2848               	goto	l150
  1505  00A1  3A0F               	xorlw	15	; case 8
  1506  00A2  1903               	skipnz
  1507  00A3  284F               	goto	l151
  1508  00A4  3A01               	xorlw	1	; case 9
  1509  00A5  1903               	skipnz
  1510  00A6  2856               	goto	l152
  1511  00A7  3A03               	xorlw	3	; case 10
  1512  00A8  1903               	skipnz
  1513  00A9  285D               	goto	l153
  1514  00AA  3A01               	xorlw	1	; case 11
  1515  00AB  1903               	skipnz
  1516  00AC  2864               	goto	l154
  1517  00AD  3A07               	xorlw	7	; case 12
  1518  00AE  1903               	skipnz
  1519  00AF  286B               	goto	l155
  1520  00B0  3A01               	xorlw	1	; case 13
  1521  00B1  1903               	skipnz
  1522  00B2  2872               	goto	l156
  1523  00B3  2879               	goto	l157
  1524  00B4                     l143:
  1525                           
  1526                           ;ADC.c: 206:     ADCON1bits.VCFG0 = 0;
  1527  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1528  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1529  00B6  121F               	bcf	31,4	;volatile
  1530                           
  1531                           ;ADC.c: 207:     ADCON1bits.VCFG1 = 0;
  1532  00B7  129F               	bcf	31,5	;volatile
  1533                           
  1534                           ;ADC.c: 209:     ADCON0bits.ADCS0 = 0;
  1535  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1536  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1537  00BA  131F               	bcf	31,6	;volatile
  1538                           
  1539                           ;ADC.c: 210:     ADCON0bits.ADCS1 = 1;
  1540  00BB  179F               	bsf	31,7	;volatile
  1541                           
  1542                           ;ADC.c: 212:     ADCON1bits.ADFM =0;
  1543  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1544  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1545  00BE  139F               	bcf	31,7	;volatile
  1546                           
  1547                           ;ADC.c: 214:     ADCON0bits.ADON = 1;
  1548  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1549  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1550  00C1  141F               	bsf	31,0	;volatile
  1551  00C2                     l776:
  1552                           
  1553                           ;ADC.c: 215:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1554  00C2  3021               	movlw	33
  1555  00C3  00F4               	movwf	??_ADC_INIT
  1556  00C4                     u137:
  1557  00C4  0BF4               	decfsz	??_ADC_INIT,f
  1558  00C5  28C4               	goto	u137
  1559  00C6                     l778:
  1560                           
  1561                           ;ADC.c: 216:     ADCON0bits.GO_nDONE = 1;
  1562  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1563  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1564  00C8  149F               	bsf	31,1	;volatile
  1565  00C9                     l158:
  1566  00C9  0008               	return
  1567  00CA                     __end_of_ADC_INIT:
  1568                           
  1569                           	psect	text6
  1570  01B0                     __ptext6:	
  1571 ;; *************** function _ADC_READ *****************
  1572 ;; Defined at:
  1573 ;;		line 219 in file "ADC.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      unsigned char 
  1580 ;; Registers used:
  1581 ;;		wreg
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0
  1589 ;;      Temps:          2       0       0       0       0
  1590 ;;      Totals:         2       0       0       0       0
  1591 ;;Total ram usage:        2 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 3
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601  01B0                     _ADC_READ:	
  1602                           ;psect for function _ADC_READ
  1603                           
  1604  01B0                     l838:	
  1605                           ;incstack = 0
  1606                           ; Regs used in _ADC_READ: [wreg]
  1607                           
  1608                           
  1609                           ;ADC.c: 220:     ADCON0bits.GO_nDONE = 1;
  1610  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1611  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1612  01B2  149F               	bsf	31,1	;volatile
  1613  01B3                     l840:
  1614                           
  1615                           ;ADC.c: 221:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1616  01B3  3082               	movlw	130
  1617  01B4  00F5               	movwf	??_ADC_READ+1
  1618  01B5  30DD               	movlw	221
  1619  01B6  00F4               	movwf	??_ADC_READ
  1620  01B7                     u147:
  1621  01B7  0BF4               	decfsz	??_ADC_READ,f
  1622  01B8  29B7               	goto	u147
  1623  01B9  0BF5               	decfsz	??_ADC_READ+1,f
  1624  01BA  29B7               	goto	u147
  1625  01BB  29BC               	nop2
  1626  01BC                     l161:	
  1627                           ;ADC.c: 222:     while( ADCON0bits.GO_nDONE == 1);
  1628                           
  1629  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1630  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1631  01BE  189F               	btfsc	31,1	;volatile
  1632  01BF  29C1               	goto	u31
  1633  01C0  29C2               	goto	u30
  1634  01C1                     u31:
  1635  01C1  29BC               	goto	l161
  1636  01C2                     u30:
  1637  01C2                     l842:
  1638                           
  1639                           ;ADC.c: 223:     return ADRESH;
  1640  01C2  081E               	movf	30,w	;volatile
  1641  01C3                     l164:
  1642  01C3  0008               	return
  1643  01C4                     __end_of_ADC_READ:
  1644                           
  1645                           	psect	text7
  1646  00CA                     __ptext7:	
  1647 ;; *************** function _isr *****************
  1648 ;; Defined at:
  1649 ;;		line 38 in file "MAIN_S1.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          3       0       0       0       0
  1666 ;;      Totals:         3       0       0       0       0
  1667 ;;Total ram usage:        3 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 2
  1670 ;; This function calls:
  1671 ;;		_spiRead
  1672 ;;		_spiWrite
  1673 ;; This function is called by:
  1674 ;;		Interrupt level 1
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678  00CA                     _isr:	
  1679                           ;psect for function _isr
  1680                           
  1681  00CA                     i1l846:
  1682                           
  1683                           ;MAIN_S1.c: 39:     if(PIR1bits.SSPIF == 1){
  1684  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1685  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1686  00CC  1D8C               	btfss	12,3	;volatile
  1687  00CD  28CF               	goto	u4_21
  1688  00CE  28D0               	goto	u4_20
  1689  00CF                     u4_21:
  1690  00CF  28F6               	goto	i1l49
  1691  00D0                     u4_20:
  1692  00D0                     i1l848:
  1693                           
  1694                           ;MAIN_S1.c: 40:         check = spiRead();
  1695  00D0  120A  118A  21E0  120A  118A  	fcall	_spiRead
  1696  00D5  00F1               	movwf	??_isr
  1697  00D6  0871               	movf	??_isr,w
  1698  00D7  00F8               	movwf	_check
  1699  00D8                     i1l850:
  1700                           
  1701                           ;MAIN_S1.c: 41:         if(check==0xFF){
  1702  00D8  0A78               	incf	_check,w
  1703  00D9  1D03               	btfss	3,2
  1704  00DA  28DC               	goto	u5_21
  1705  00DB  28DD               	goto	u5_20
  1706  00DC                     u5_21:
  1707  00DC  28E4               	goto	i1l854
  1708  00DD                     u5_20:
  1709  00DD                     i1l852:
  1710                           
  1711                           ;MAIN_S1.c: 42:             spiWrite(POT);
  1712  00DD  0879               	movf	_POT,w
  1713  00DE  120A  118A  21F0  120A  118A  	fcall	_spiWrite
  1714                           
  1715                           ;MAIN_S1.c: 43:         }else if(check==0xAA){
  1716  00E3  28F2               	goto	i1l858
  1717  00E4                     i1l854:
  1718  00E4  30AA               	movlw	170
  1719  00E5  0678               	xorwf	_check,w
  1720  00E6  1D03               	btfss	3,2
  1721  00E7  28E9               	goto	u6_21
  1722  00E8  28EA               	goto	u6_20
  1723  00E9                     u6_21:
  1724  00E9  28F2               	goto	i1l858
  1725  00EA                     u6_20:
  1726  00EA                     i1l856:
  1727                           
  1728                           ;MAIN_S1.c: 44:             spiWrite(PORTD);
  1729  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1730  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1731  00EC  0808               	movf	8,w	;volatile
  1732  00ED  120A  118A  21F0  120A  118A  	fcall	_spiWrite
  1733  00F2                     i1l858:
  1734                           
  1735                           ;MAIN_S1.c: 46:         PIR1bits.SSPIF = 0;
  1736  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1737  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1738  00F4  118C               	bcf	12,3	;volatile
  1739                           
  1740                           ;MAIN_S1.c: 47:     }else if (INTCONbits.RBIF==1){
  1741  00F5  2912               	goto	i1l60
  1742  00F6                     i1l49:
  1743  00F6  1C0B               	btfss	11,0	;volatile
  1744  00F7  28F9               	goto	u7_21
  1745  00F8  28FA               	goto	u7_20
  1746  00F9                     u7_21:
  1747  00F9  2912               	goto	i1l60
  1748  00FA                     u7_20:
  1749  00FA                     i1l860:
  1750                           
  1751                           ;MAIN_S1.c: 48:         if (RB0==0){
  1752  00FA  1806               	btfsc	6,0	;volatile
  1753  00FB  28FD               	goto	u8_21
  1754  00FC  28FE               	goto	u8_20
  1755  00FD                     u8_21:
  1756  00FD  2907               	goto	i1l55
  1757  00FE                     u8_20:
  1758  00FE                     i1l862:
  1759                           
  1760                           ;MAIN_S1.c: 49:             if (RB0==0)
  1761  00FE  1806               	btfsc	6,0	;volatile
  1762  00FF  2901               	goto	u9_21
  1763  0100  2902               	goto	u9_20
  1764  0101                     u9_21:
  1765  0101  2911               	goto	i1l870
  1766  0102                     u9_20:
  1767  0102                     i1l864:
  1768                           
  1769                           ;MAIN_S1.c: 50:                 PORTD++;
  1770  0102  3001               	movlw	1
  1771  0103  00F1               	movwf	??_isr
  1772  0104  0871               	movf	??_isr,w
  1773  0105  0788               	addwf	8,f	;volatile
  1774  0106  2911               	goto	i1l870
  1775  0107                     i1l55:
  1776  0107  1886               	btfsc	6,1	;volatile
  1777  0108  290A               	goto	u10_21
  1778  0109  290B               	goto	u10_20
  1779  010A                     u10_21:
  1780  010A  2911               	goto	i1l870
  1781  010B                     u10_20:
  1782  010B                     i1l866:
  1783                           
  1784                           ;MAIN_S1.c: 52:             if (RB1==0)
  1785  010B  1886               	btfsc	6,1	;volatile
  1786  010C  290E               	goto	u11_21
  1787  010D  290F               	goto	u11_20
  1788  010E                     u11_21:
  1789  010E  2911               	goto	i1l870
  1790  010F                     u11_20:
  1791  010F                     i1l868:
  1792                           
  1793                           ;MAIN_S1.c: 53:                 PORTD--;
  1794  010F  3001               	movlw	1
  1795  0110  0288               	subwf	8,f	;volatile
  1796  0111                     i1l870:
  1797                           
  1798                           ;MAIN_S1.c: 55:         INTCONbits.RBIF=0;
  1799  0111  100B               	bcf	11,0	;volatile
  1800  0112                     i1l60:
  1801  0112  0873               	movf	??_isr+2,w
  1802  0113  008A               	movwf	10
  1803  0114  0E72               	swapf	??_isr+1,w
  1804  0115  0083               	movwf	3
  1805  0116  0EFE               	swapf	btemp,f
  1806  0117  0E7E               	swapf	btemp,w
  1807  0118  0009               	retfie
  1808  0119                     __end_of_isr:
  1809                           
  1810                           	psect	intentry
  1811  0004                     __pintentry:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1814                           
  1815  0004                     interrupt_function:
  1816  007E                     saved_w	set	btemp
  1817  0004  00FE               	movwf	btemp
  1818  0005  0E03               	swapf	3,w
  1819  0006  00F2               	movwf	??_isr+1
  1820  0007  080A               	movf	10,w
  1821  0008  00F3               	movwf	??_isr+2
  1822  0009  120A  118A  28CA   	ljmp	_isr
  1823                           
  1824                           	psect	text8
  1825  01F0                     __ptext8:	
  1826 ;; *************** function _spiWrite *****************
  1827 ;; Defined at:
  1828 ;;		line 34 in file "SPIS1.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  dat             1    wreg     unsigned char 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  dat             1    0[COMMON] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       0       0       0       0
  1843 ;;      Locals:         1       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0
  1845 ;;      Totals:         1       0       0       0       0
  1846 ;;Total ram usage:        1 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_isr
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855  01F0                     _spiWrite:	
  1856                           ;psect for function _spiWrite
  1857                           
  1858                           
  1859                           ;incstack = 0
  1860                           ; Regs used in _spiWrite: [wreg]
  1861                           ;spiWrite@dat stored from wreg
  1862  01F0  00F0               	movwf	spiWrite@dat
  1863  01F1                     i1l804:
  1864                           
  1865                           ;SPIS1.c: 34: void spiWrite(char dat);SPIS1.c: 35: {;SPIS1.c: 36:     SSPBUF = dat;
  1866  01F1  0870               	movf	spiWrite@dat,w
  1867  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1868  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1869  01F4  0093               	movwf	19	;volatile
  1870  01F5                     i1l97:
  1871  01F5  0008               	return
  1872  01F6                     __end_of_spiWrite:
  1873                           
  1874                           	psect	text9
  1875  01E0                     __ptext9:	
  1876 ;; *************** function _spiRead *****************
  1877 ;; Defined at:
  1878 ;;		line 47 in file "SPIS1.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      unsigned char 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 1
  1899 ;; This function calls:
  1900 ;;		_spiReceiveWait
  1901 ;; This function is called by:
  1902 ;;		_isr
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906  01E0                     _spiRead:	
  1907                           ;psect for function _spiRead
  1908                           
  1909  01E0                     i1l798:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1912                           
  1913                           
  1914                           ;SPIS1.c: 49:     spiReceiveWait();
  1915  01E0  120A  118A  21E9  120A  118A  	fcall	_spiReceiveWait
  1916  01E5                     i1l800:
  1917                           
  1918                           ;SPIS1.c: 50:     return(SSPBUF);
  1919  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1920  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1921  01E7  0813               	movf	19,w	;volatile
  1922  01E8                     i1l105:
  1923  01E8  0008               	return
  1924  01E9                     __end_of_spiRead:
  1925                           
  1926                           	psect	text10
  1927  01E9                     __ptext10:	
  1928 ;; *************** function _spiReceiveWait *****************
  1929 ;; Defined at:
  1930 ;;		line 29 in file "SPIS1.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		None
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_spiRead
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957  01E9                     _spiReceiveWait:	
  1958                           ;psect for function _spiReceiveWait
  1959                           
  1960  01E9                     i1l796:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _spiReceiveWait: []
  1963                           
  1964  01E9                     i1l91:	
  1965                           ;SPIS1.c: 31:     while ( !SSPSTATbits.BF );
  1966                           
  1967  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1968  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1969  01EB  1C14               	btfss	20,0	;volatile
  1970  01EC  29EE               	goto	u2_21
  1971  01ED  29EF               	goto	u2_20
  1972  01EE                     u2_21:
  1973  01EE  29E9               	goto	i1l91
  1974  01EF                     u2_20:
  1975  01EF                     i1l94:
  1976  01EF  0008               	return
  1977  01F0                     __end_of_spiReceiveWait:
  1978  007E                     btemp	set	126	;btemp
  1979  007E                     wtemp0	set	126
  1980                           
  1981                           	psect	idloc
  1982                           
  1983                           ;Config register IDLOC0 @ 0x2000
  1984                           ;	unspecified, using default values
  1985  2000                     	org	8192
  1986  2000  3FFF               	dw	16383
  1987                           
  1988                           ;Config register IDLOC1 @ 0x2001
  1989                           ;	unspecified, using default values
  1990  2001                     	org	8193
  1991  2001  3FFF               	dw	16383
  1992                           
  1993                           ;Config register IDLOC2 @ 0x2002
  1994                           ;	unspecified, using default values
  1995  2002                     	org	8194
  1996  2002  3FFF               	dw	16383
  1997                           
  1998                           ;Config register IDLOC3 @ 0x2003
  1999                           ;	unspecified, using default values
  2000  2003                     	org	8195
  2001  2003  3FFF               	dw	16383
  2002                           
  2003                           	psect	config
  2004                           
  2005                           ;Config register CONFIG1 @ 0x2007
  2006                           ;	Oscillator Selection bits
  2007                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2008                           ;	Watchdog Timer Enable bit
  2009                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2010                           ;	Power-up Timer Enable bit
  2011                           ;	PWRTE = OFF, PWRT disabled
  2012                           ;	RE3/MCLR pin function select bit
  2013                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2014                           ;	Code Protection bit
  2015                           ;	CP = OFF, Program memory code protection is disabled
  2016                           ;	Data Code Protection bit
  2017                           ;	CPD = OFF, Data memory code protection is disabled
  2018                           ;	Brown Out Reset Selection bits
  2019                           ;	BOREN = OFF, BOR disabled
  2020                           ;	Internal External Switchover bit
  2021                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2022                           ;	Fail-Safe Clock Monitor Enabled bit
  2023                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2024                           ;	Low Voltage Programming Enable bit
  2025                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2026                           ;	In-Circuit Debugger Mode bit
  2027                           ;	DEBUG = 0x1, unprogrammed default
  2028  2007                     	org	8199
  2029  2007  20D4               	dw	8404
  2030                           
  2031                           ;Config register CONFIG2 @ 0x2008
  2032                           ;	Brown-out Reset Selection bit
  2033                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2034                           ;	Flash Program Memory Self Write Enable bits
  2035                           ;	WRT = OFF, Write protection off
  2036  2008                     	org	8200
  2037  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     420
                                              0 BANK0      1     1      0
                           _ADC_READ
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     420
                           _ADC_INIT
                            _IOC_INT
                         _OSCILLATOR
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _IOC_INT                                              1     1      0      30
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _setup
     _ADC_INIT
     _IOC_INT
     _OSCILLATOR
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Jul 28 21:05:59 2023

            _SSPSTATbits 0094                       l71 0199                       l87 01AA  
                     l88 01AF                       u30 01C2                       u31 01C1  
                    l130 0122                      l131 0126                      l124 01DF  
                    l132 012A                      l133 012E                      l150 0048  
                    l142 0017                      l134 0132                      l151 004F  
                    l143 00B4                      l135 0136                      l152 0056  
                    l144 001E                      l136 013A                      l128 011E  
                    l161 01BC                      l153 005D                      l145 0025  
                    l137 013E                      l154 0064                      l146 002C  
                    l138 0164                      l155 006B                      l147 0033  
                    l164 01C3                      l156 0072                      l148 003A  
                    l157 0079                      l149 0041                      l158 00C9  
                    l840 01B3                      l760 0142                      l842 01C2  
                    l770 0016                      l930 01A9                      l922 019B  
                    l756 011A                      l924 01A2                      l940 0174  
                    l932 0165                      l838 01B0                      l774 0080  
                    l766 01D8                      l926 01A4                      l950 0185  
                    l942 0175                      l934 016B                      l776 00C2  
                    l768 01DB                      l928 01A6                      l960 018E  
                    l952 0186                      l944 0178                      l936 016F  
                    l778 00C6                      l962 018F                      l954 0187  
                    l946 0179                      l938 0170                      l956 018A  
                    l948 017F                      l958 018D                      _RB0 0030  
                    _RB1 0031                      u120 01A2                      u121 01A1  
                    u137 00C4                      u147 01B7                      _POT 0079  
                    _isr 00CA          __end_of_IOC_INT 01E0                     l1010 01C9  
                   l1008 01C4                     l1052 014A                     l1054 0088  
                   ?_isr 0070                     i1l60 0112                     i1l55 0107  
                   i1l49 00F6                     i1l91 01E9                     i1l94 01EF  
                   i1l97 01F5                     u2_20 01EF                     u2_21 01EE  
                   u4_20 00D0                     u4_21 00CF                     u5_20 00DD  
                   u5_21 00DC                     u6_20 00EA                     u6_21 00E9  
                   u7_20 00FA                     u7_21 00F9                     u8_20 00FE  
                   u8_21 00FD                     u9_20 0102                     u9_21 0101  
       __end_of_ADC_INIT 00CA         __end_of_ADC_READ 01C4                     _main 01C4  
                   btemp 007E                     start 000C              ?_OSCILLATOR 0070  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l105 01E8                    i1l800 01E5                    i1l804 01F1  
                  i1l850 00D8                    i1l860 00FA                    i1l852 00DD  
                  i1l870 0111                    i1l862 00FE                    i1l854 00E4  
                  i1l846 00CA                    i1l864 0102                    i1l856 00EA  
                  i1l848 00D0                    i1l866 010B                    i1l858 00F2  
                  i1l796 01E9                    i1l868 010F                    i1l798 01E0  
                  u10_20 010B                    u10_21 010A                    u11_20 010F  
                  u11_21 010E                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _check 0078  
                  _setup 0165                    pclath 000A          __end_of_spiInit 01B0  
        __end_of_spiRead 01E9                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01D7                   ??_main 0020  
              ADC_INIT@c 0076                ??_IOC_INT 0074                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_INIT 0070                ?_ADC_READ 0070                   saved_w 007E  
       __end_of_spiWrite 01F6                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0011           __pcstackCOMMON 0070              OSCILLATOR@f 0076  
          __end_of_setup 019A               ??_ADC_INIT 0074               ??_ADC_READ 0074  
         _OPTION_REGbits 0081                  ??_setup 0078             ??_OSCILLATOR 0074  
             __pmaintext 01C4               __pintentry 0004                  _IOC_INT 01D7  
     __end_of_OSCILLATOR 0165                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0165                  __ptext2 019A                  __ptext3 0119  
                __ptext4 01D7                  __ptext5 0015                  __ptext6 01B0  
                __ptext7 00CA                  __ptext8 01F0                  __ptext9 01E0  
                _spiInit 019A                  _spiRead 01E0     end_of_initialization 0011  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 01E9      start_initialization 000F              __end_of_isr 0119  
 __end_of_spiReceiveWait 01F0                 ?_IOC_INT 0070              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020                 IOC_INT@a 0074  
        ?_spiReceiveWait 0070                 _ADC_INIT 0015                 _ADC_READ 01B0  
               ?_spiInit 0074                 ?_spiRead 0070     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _WPUBbits 0095                 __ptext10 01E9  
               _spiWrite 01F0             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCILLATOR 0119               _OSCCONbits 008F  
