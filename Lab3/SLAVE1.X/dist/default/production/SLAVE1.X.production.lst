

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Jul 26 20:56:08 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  001E                     _ADRESH	set	30
   367  001F                     _ADCON0bits	set	31
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  000C                     _PIR1bits	set	12
   371  000B                     _INTCONbits	set	11
   372  0006                     _PORTB	set	6
   373  0008                     _PORTD	set	8
   374  0063                     _SSPIF	set	99
   375  009F                     _ADCON1bits	set	159
   376  008F                     _OSCCONbits	set	143
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  0085                     _TRISAbits	set	133
   380  008C                     _PIE1bits	set	140
   381  0088                     _TRISD	set	136
   382  0086                     _TRISB	set	134
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  000F                     start_initialization:	
   390                           ; #config settings
   391                           
   392  000F                     __initialization:
   393  000F                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  000F                     __end_of__initialization:
   397  000F  0183               	clrf	3
   398  0010  120A  118A  2980   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	cstackCOMMON
   401  0070                     __pcstackCOMMON:
   402  0070                     ?_spiWrite:
   403  0070                     ??_spiWrite:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_setup:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_ADC_READ:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_OSCILLATOR:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_ADC_INIT:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_isr:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_main:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     spiWrite@dat:	
   425                           ; 1 bytes @ 0x0
   426                           
   427                           
   428                           ; 1 bytes @ 0x0
   429  0070                     	ds	1
   430  0071                     ??_isr:
   431                           
   432                           ; 1 bytes @ 0x1
   433  0071                     	ds	2
   434  0073                     ??_ADC_READ:
   435  0073                     ??_OSCILLATOR:	
   436                           ; 1 bytes @ 0x3
   437                           
   438  0073                     ??_ADC_INIT:	
   439                           ; 1 bytes @ 0x3
   440                           
   441  0073                     ?_spiInit:	
   442                           ; 1 bytes @ 0x3
   443                           
   444  0073                     spiInit@sDataSample:	
   445                           ; 1 bytes @ 0x3
   446                           
   447                           
   448                           ; 1 bytes @ 0x3
   449  0073                     	ds	1
   450  0074                     spiInit@sClockIdle:
   451                           
   452                           ; 1 bytes @ 0x4
   453  0074                     	ds	1
   454  0075                     spiInit@sTransmitEdge:
   455  0075                     OSCILLATOR@f:	
   456                           ; 1 bytes @ 0x5
   457                           
   458  0075                     ADC_INIT@c:	
   459                           ; 1 bytes @ 0x5
   460                           
   461                           
   462                           ; 1 bytes @ 0x5
   463  0075                     	ds	1
   464  0076                     ??_spiInit:
   465  0076                     spiInit@sType:	
   466                           ; 1 bytes @ 0x6
   467                           
   468                           
   469                           ; 1 bytes @ 0x6
   470  0076                     	ds	1
   471  0077                     ??_setup:
   472  0077                     ??_main:	
   473                           ; 1 bytes @ 0x7
   474                           
   475                           
   476                           	psect	maintext
   477  0180                     __pmaintext:	
   478                           ; 1 bytes @ 0x7
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 45 in file "MAIN_S1.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : B00/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels required when called: 4
   504 ;; This function calls:
   505 ;;		_ADC_READ
   506 ;;		_setup
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512  0180                     _main:	
   513                           ;psect for function _main
   514                           
   515  0180                     l959:	
   516                           ;incstack = 0
   517                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   518                           
   519                           
   520                           ;MAIN_S1.c: 46:     setup();
   521  0180  120A  118A  2114  120A  118A  	fcall	_setup
   522  0185                     l961:
   523                           
   524                           ;MAIN_S1.c: 52:        PORTD = ADC_READ();
   525  0185  120A  118A  216C  120A  118A  	fcall	_ADC_READ
   526  018A  1283               	bcf	3,5	;RP0=0, select bank0
   527  018B  1303               	bcf	3,6	;RP1=0, select bank0
   528  018C  0088               	movwf	8	;volatile
   529  018D  2985               	goto	l961
   530  018E  120A  118A  280C   	ljmp	start
   531  0191                     __end_of_main:
   532                           
   533                           	psect	text1
   534  0114                     __ptext1:	
   535 ;; *************** function _setup *****************
   536 ;; Defined at:
   537 ;;		line 59 in file "MAIN_S1.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0
   554 ;;      Totals:         0       0       0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 3
   558 ;; This function calls:
   559 ;;		_ADC_INIT
   560 ;;		_OSCILLATOR
   561 ;;		_spiInit
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567  0114                     _setup:	
   568                           ;psect for function _setup
   569                           
   570  0114                     l931:	
   571                           ;incstack = 0
   572                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   573                           
   574                           
   575                           ;MAIN_S1.c: 61:     OSCILLATOR(1);
   576  0114  3001               	movlw	1
   577  0115  120A  118A  20C8  120A  118A  	fcall	_OSCILLATOR
   578  011A                     l933:
   579                           
   580                           ;MAIN_S1.c: 63:     ANSEL = 0b00100000;
   581  011A  3020               	movlw	32
   582  011B  1683               	bsf	3,5	;RP0=1, select bank3
   583  011C  1703               	bsf	3,6	;RP1=1, select bank3
   584  011D  0088               	movwf	8	;volatile
   585  011E                     l935:
   586                           
   587                           ;MAIN_S1.c: 64:     ANSELH = 0;
   588  011E  0189               	clrf	9	;volatile
   589  011F                     l937:
   590                           
   591                           ;MAIN_S1.c: 66:     TRISB = 0;
   592  011F  1683               	bsf	3,5	;RP0=1, select bank1
   593  0120  1303               	bcf	3,6	;RP1=0, select bank1
   594  0121  0186               	clrf	6	;volatile
   595  0122                     l939:
   596                           
   597                           ;MAIN_S1.c: 67:     TRISD = 0;
   598  0122  0188               	clrf	8	;volatile
   599  0123                     l941:
   600                           
   601                           ;MAIN_S1.c: 69:     PORTB = 0;
   602  0123  1283               	bcf	3,5	;RP0=0, select bank0
   603  0124  1303               	bcf	3,6	;RP1=0, select bank0
   604  0125  0186               	clrf	6	;volatile
   605  0126                     l943:
   606                           
   607                           ;MAIN_S1.c: 70:     PORTD = 0;
   608  0126  0188               	clrf	8	;volatile
   609  0127                     l945:
   610                           
   611                           ;MAIN_S1.c: 73:     ADC_INIT(5);
   612  0127  3005               	movlw	5
   613  0128  120A  118A  2013  120A  118A  	fcall	_ADC_INIT
   614  012D                     l947:
   615                           
   616                           ;MAIN_S1.c: 75:     INTCONbits.GIE = 1;
   617  012D  178B               	bsf	11,7	;volatile
   618  012E                     l949:
   619                           
   620                           ;MAIN_S1.c: 76:     INTCONbits.PEIE = 1;
   621  012E  170B               	bsf	11,6	;volatile
   622  012F                     l951:
   623                           
   624                           ;MAIN_S1.c: 77:     PIR1bits.SSPIF = 0;
   625  012F  1283               	bcf	3,5	;RP0=0, select bank0
   626  0130  1303               	bcf	3,6	;RP1=0, select bank0
   627  0131  118C               	bcf	12,3	;volatile
   628  0132                     l953:
   629                           
   630                           ;MAIN_S1.c: 78:     PIE1bits.SSPIE = 1;
   631  0132  1683               	bsf	3,5	;RP0=1, select bank1
   632  0133  1303               	bcf	3,6	;RP1=0, select bank1
   633  0134  158C               	bsf	12,3	;volatile
   634  0135                     l955:
   635                           
   636                           ;MAIN_S1.c: 79:     TRISAbits.TRISA5 = 1;
   637  0135  1685               	bsf	5,5	;volatile
   638  0136                     l957:
   639                           
   640                           ;MAIN_S1.c: 80:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   641  0136  01F3               	clrf	spiInit@sDataSample
   642  0137  01F4               	clrf	spiInit@sClockIdle
   643  0138  01F5               	clrf	spiInit@sTransmitEdge
   644  0139  3024               	movlw	36
   645  013A  120A  118A  2140  120A  118A  	fcall	_spiInit
   646  013F                     l51:
   647  013F  0008               	return
   648  0140                     __end_of_setup:
   649                           
   650                           	psect	text2
   651  0140                     __ptext2:	
   652 ;; *************** function _spiInit *****************
   653 ;; Defined at:
   654 ;;		line 12 in file "SPIS1.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  sType           1    wreg     enum E1292
   657 ;;  sDataSample     1    3[COMMON] enum E1300
   658 ;;  sClockIdle      1    4[COMMON] enum E1304
   659 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  sType           1    6[COMMON] enum E1292
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         3       0       0       0       0
   672 ;;      Locals:         1       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         4       0       0       0       0
   675 ;;Total ram usage:        4 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 2
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_setup
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685  0140                     _spiInit:	
   686                           ;psect for function _spiInit
   687                           
   688                           
   689                           ;incstack = 0
   690                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   691                           ;spiInit@sType stored from wreg
   692  0140  00F6               	movwf	spiInit@sType
   693  0141                     l921:
   694                           
   695                           ;SPIS1.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPIS1.c: 13: {;SPIS1.c: 14:     TRISC5 = 0;
   696  0141  1683               	bsf	3,5	;RP0=1, select bank1
   697  0142  1303               	bcf	3,6	;RP1=0, select bank1
   698  0143  1287               	bcf	7,5	;volatile
   699                           
   700                           ;SPIS1.c: 15:     if(sType & 0b00000100)
   701  0144  1D76               	btfss	spiInit@sType,2
   702  0145  2947               	goto	u91
   703  0146  2948               	goto	u90
   704  0147                     u91:
   705  0147  294C               	goto	l927
   706  0148                     u90:
   707  0148                     l923:
   708                           
   709                           ;SPIS1.c: 16:     {;SPIS1.c: 17:         SSPSTAT = sTransmitEdge;
   710  0148  0875               	movf	spiInit@sTransmitEdge,w
   711  0149  0094               	movwf	20	;volatile
   712  014A                     l925:
   713                           
   714                           ;SPIS1.c: 18:         TRISC3 = 1;
   715  014A  1587               	bsf	7,3	;volatile
   716                           
   717                           ;SPIS1.c: 19:     }
   718  014B  2950               	goto	l67
   719  014C                     l927:
   720                           
   721                           ;SPIS1.c: 21:     {;SPIS1.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   722  014C  0873               	movf	spiInit@sDataSample,w
   723  014D  0475               	iorwf	spiInit@sTransmitEdge,w
   724  014E  0094               	movwf	20	;volatile
   725  014F                     l929:
   726                           
   727                           ;SPIS1.c: 23:         TRISC3 = 0;
   728  014F  1187               	bcf	7,3	;volatile
   729  0150                     l67:	
   730                           ;SPIS1.c: 24:     }
   731                           
   732                           
   733                           ;SPIS1.c: 26:     SSPCON = sType | sClockIdle;
   734  0150  0876               	movf	spiInit@sType,w
   735  0151  0474               	iorwf	spiInit@sClockIdle,w
   736  0152  1283               	bcf	3,5	;RP0=0, select bank0
   737  0153  1303               	bcf	3,6	;RP1=0, select bank0
   738  0154  0094               	movwf	20	;volatile
   739  0155                     l68:
   740  0155  0008               	return
   741  0156                     __end_of_spiInit:
   742                           
   743                           	psect	text3
   744  00C8                     __ptext3:	
   745 ;; *************** function _OSCILLATOR *****************
   746 ;; Defined at:
   747 ;;		line 28 in file "ADC.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  f               1    wreg     unsigned char 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  f               1    5[COMMON] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0
   763 ;;      Temps:          2       0       0       0       0
   764 ;;      Totals:         3       0       0       0       0
   765 ;;Total ram usage:        3 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 2
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_setup
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775  00C8                     _OSCILLATOR:	
   776                           ;psect for function _OSCILLATOR
   777                           
   778                           
   779                           ;incstack = 0
   780                           ; Regs used in _OSCILLATOR: [wreg-fsr0h+status,2+status,0]
   781                           ;OSCILLATOR@f stored from wreg
   782  00C8  00F5               	movwf	OSCILLATOR@f
   783  00C9                     l749:
   784                           
   785                           ;ADC.c: 29:     OSCCONbits.SCS = 1;
   786  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   787  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   788  00CB  140F               	bsf	15,0	;volatile
   789                           
   790                           ;ADC.c: 31:     switch(f){
   791  00CC  28F1               	goto	l753
   792  00CD                     l108:	
   793                           ;ADC.c: 32:         case(1):
   794                           
   795                           
   796                           ;ADC.c: 33:             OSCCONbits.IRCF2 =1;
   797  00CD  170F               	bsf	15,6	;volatile
   798                           
   799                           ;ADC.c: 34:             OSCCONbits.IRCF1 =1;
   800  00CE  168F               	bsf	15,5	;volatile
   801                           
   802                           ;ADC.c: 35:             OSCCONbits.IRCF0 =1;
   803  00CF  160F               	bsf	15,4	;volatile
   804                           
   805                           ;ADC.c: 36:             break;
   806  00D0  2913               	goto	l118
   807  00D1                     l110:	
   808                           ;ADC.c: 38:         case(2):
   809                           
   810                           
   811                           ;ADC.c: 39:             OSCCONbits.IRCF2 =1;
   812  00D1  170F               	bsf	15,6	;volatile
   813                           
   814                           ;ADC.c: 40:             OSCCONbits.IRCF1 =1;
   815  00D2  168F               	bsf	15,5	;volatile
   816                           
   817                           ;ADC.c: 41:             OSCCONbits.IRCF0 =0;
   818  00D3  120F               	bcf	15,4	;volatile
   819                           
   820                           ;ADC.c: 42:             break;
   821  00D4  2913               	goto	l118
   822  00D5                     l111:	
   823                           ;ADC.c: 44:         case(3):
   824                           
   825                           
   826                           ;ADC.c: 45:             OSCCONbits.IRCF2 =1;
   827  00D5  170F               	bsf	15,6	;volatile
   828                           
   829                           ;ADC.c: 46:             OSCCONbits.IRCF1 =0;
   830  00D6  128F               	bcf	15,5	;volatile
   831                           
   832                           ;ADC.c: 47:             OSCCONbits.IRCF0 =1;
   833  00D7  160F               	bsf	15,4	;volatile
   834                           
   835                           ;ADC.c: 48:             break;
   836  00D8  2913               	goto	l118
   837  00D9                     l112:	
   838                           ;ADC.c: 50:         case(4):
   839                           
   840                           
   841                           ;ADC.c: 51:             OSCCONbits.IRCF2 =1;
   842  00D9  170F               	bsf	15,6	;volatile
   843                           
   844                           ;ADC.c: 52:             OSCCONbits.IRCF1 =0;
   845  00DA  128F               	bcf	15,5	;volatile
   846                           
   847                           ;ADC.c: 53:             OSCCONbits.IRCF0 =0;
   848  00DB  120F               	bcf	15,4	;volatile
   849                           
   850                           ;ADC.c: 54:             break;
   851  00DC  2913               	goto	l118
   852  00DD                     l113:	
   853                           ;ADC.c: 56:         case(5):
   854                           
   855                           
   856                           ;ADC.c: 57:             OSCCONbits.IRCF2 =0;
   857  00DD  130F               	bcf	15,6	;volatile
   858                           
   859                           ;ADC.c: 58:             OSCCONbits.IRCF1 =1;
   860  00DE  168F               	bsf	15,5	;volatile
   861                           
   862                           ;ADC.c: 59:             OSCCONbits.IRCF0 =1;
   863  00DF  160F               	bsf	15,4	;volatile
   864                           
   865                           ;ADC.c: 60:             break;
   866  00E0  2913               	goto	l118
   867  00E1                     l114:	
   868                           ;ADC.c: 62:         case(6):
   869                           
   870                           
   871                           ;ADC.c: 63:             OSCCONbits.IRCF2 =0;
   872  00E1  130F               	bcf	15,6	;volatile
   873                           
   874                           ;ADC.c: 64:             OSCCONbits.IRCF1 =1;
   875  00E2  168F               	bsf	15,5	;volatile
   876                           
   877                           ;ADC.c: 65:             OSCCONbits.IRCF0 =0;
   878  00E3  120F               	bcf	15,4	;volatile
   879                           
   880                           ;ADC.c: 66:             break;
   881  00E4  2913               	goto	l118
   882  00E5                     l115:	
   883                           ;ADC.c: 68:         case(7):
   884                           
   885                           
   886                           ;ADC.c: 69:             OSCCONbits.IRCF2 =0;
   887  00E5  130F               	bcf	15,6	;volatile
   888                           
   889                           ;ADC.c: 70:             OSCCONbits.IRCF1 =0;
   890  00E6  128F               	bcf	15,5	;volatile
   891                           
   892                           ;ADC.c: 71:             OSCCONbits.IRCF0 =1;
   893  00E7  160F               	bsf	15,4	;volatile
   894                           
   895                           ;ADC.c: 72:             break;
   896  00E8  2913               	goto	l118
   897  00E9                     l116:	
   898                           ;ADC.c: 74:         case(8):
   899                           
   900                           
   901                           ;ADC.c: 75:             OSCCONbits.IRCF2 =0;
   902  00E9  130F               	bcf	15,6	;volatile
   903                           
   904                           ;ADC.c: 76:             OSCCONbits.IRCF1 =0;
   905  00EA  128F               	bcf	15,5	;volatile
   906                           
   907                           ;ADC.c: 77:             OSCCONbits.IRCF0 =0;
   908  00EB  120F               	bcf	15,4	;volatile
   909                           
   910                           ;ADC.c: 78:             break;
   911  00EC  2913               	goto	l118
   912  00ED                     l117:	
   913                           ;ADC.c: 80:         default:
   914                           
   915                           
   916                           ;ADC.c: 81:             OSCCONbits.IRCF2 =1;
   917  00ED  170F               	bsf	15,6	;volatile
   918                           
   919                           ;ADC.c: 82:             OSCCONbits.IRCF1 =1;
   920  00EE  168F               	bsf	15,5	;volatile
   921                           
   922                           ;ADC.c: 83:             OSCCONbits.IRCF0 =0;
   923  00EF  120F               	bcf	15,4	;volatile
   924                           
   925                           ;ADC.c: 84:             break;
   926  00F0  2913               	goto	l118
   927  00F1                     l753:
   928  00F1  0875               	movf	OSCILLATOR@f,w
   929  00F2  00F3               	movwf	??_OSCILLATOR
   930  00F3  01F4               	clrf	??_OSCILLATOR+1
   931                           
   932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 1, Range of values is 0 to 0
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte            4     3 (average)
   938                           ; direct_byte           11     8 (fixed)
   939                           ; jumptable            260     6 (fixed)
   940                           ;	Chosen strategy is simple_byte
   941  00F4  0874               	movf	??_OSCILLATOR+1,w
   942  00F5  3A00               	xorlw	0	; case 0
   943  00F6  1903               	skipnz
   944  00F7  28F9               	goto	l1003
   945  00F8  28ED               	goto	l117
   946  00F9                     l1003:
   947                           
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 8, Range of values is 1 to 8
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte           25    13 (average)
   953                           ; direct_byte           35    11 (fixed)
   954                           ; jumptable            263     9 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956  00F9  0873               	movf	??_OSCILLATOR,w
   957  00FA  3A01               	xorlw	1	; case 1
   958  00FB  1903               	skipnz
   959  00FC  28CD               	goto	l108
   960  00FD  3A03               	xorlw	3	; case 2
   961  00FE  1903               	skipnz
   962  00FF  28D1               	goto	l110
   963  0100  3A01               	xorlw	1	; case 3
   964  0101  1903               	skipnz
   965  0102  28D5               	goto	l111
   966  0103  3A07               	xorlw	7	; case 4
   967  0104  1903               	skipnz
   968  0105  28D9               	goto	l112
   969  0106  3A01               	xorlw	1	; case 5
   970  0107  1903               	skipnz
   971  0108  28DD               	goto	l113
   972  0109  3A03               	xorlw	3	; case 6
   973  010A  1903               	skipnz
   974  010B  28E1               	goto	l114
   975  010C  3A01               	xorlw	1	; case 7
   976  010D  1903               	skipnz
   977  010E  28E5               	goto	l115
   978  010F  3A0F               	xorlw	15	; case 8
   979  0110  1903               	skipnz
   980  0111  28E9               	goto	l116
   981  0112  28ED               	goto	l117
   982  0113                     l118:
   983  0113  0008               	return
   984  0114                     __end_of_OSCILLATOR:
   985                           
   986                           	psect	text4
   987  0013                     __ptext4:	
   988 ;; *************** function _ADC_INIT *****************
   989 ;; Defined at:
   990 ;;		line 90 in file "ADC.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  c               1    wreg     unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  c               1    5[COMMON] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0
  1006 ;;      Temps:          2       0       0       0       0
  1007 ;;      Totals:         3       0       0       0       0
  1008 ;;Total ram usage:        3 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 2
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_setup
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018  0013                     _ADC_INIT:	
  1019                           ;psect for function _ADC_INIT
  1020                           
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _ADC_INIT: [wreg-fsr0h+status,2+status,0]
  1024                           ;ADC_INIT@c stored from wreg
  1025  0013  00F5               	movwf	ADC_INIT@c
  1026  0014                     l759:
  1027                           
  1028                           ;ADC.c: 91:     switch(c){
  1029  0014  287E               	goto	l763
  1030  0015                     l122:	
  1031                           ;ADC.c: 92:         case 0:
  1032                           
  1033                           
  1034                           ;ADC.c: 93:             ADCON0bits.CHS3 = 0;
  1035  0015  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0016  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0017  129F               	bcf	31,5	;volatile
  1038                           
  1039                           ;ADC.c: 94:             ADCON0bits.CHS2 = 0;
  1040  0018  121F               	bcf	31,4	;volatile
  1041                           
  1042                           ;ADC.c: 95:             ADCON0bits.CHS1 = 0;
  1043  0019  119F               	bcf	31,3	;volatile
  1044                           
  1045                           ;ADC.c: 96:             ADCON0bits.CHS0 = 0;
  1046  001A  111F               	bcf	31,2	;volatile
  1047                           
  1048                           ;ADC.c: 97:             break;
  1049  001B  28B2               	goto	l123
  1050  001C                     l124:	
  1051                           ;ADC.c: 99:         case 1:
  1052                           
  1053                           
  1054                           ;ADC.c: 100:             ADCON0bits.CHS3 = 0;
  1055  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1056  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1057  001E  129F               	bcf	31,5	;volatile
  1058                           
  1059                           ;ADC.c: 101:             ADCON0bits.CHS2 = 0;
  1060  001F  121F               	bcf	31,4	;volatile
  1061                           
  1062                           ;ADC.c: 102:             ADCON0bits.CHS1 = 0;
  1063  0020  119F               	bcf	31,3	;volatile
  1064                           
  1065                           ;ADC.c: 103:             ADCON0bits.CHS0 = 1;
  1066  0021  151F               	bsf	31,2	;volatile
  1067                           
  1068                           ;ADC.c: 104:             break;
  1069  0022  28B2               	goto	l123
  1070  0023                     l125:	
  1071                           ;ADC.c: 106:         case 2:
  1072                           
  1073                           
  1074                           ;ADC.c: 107:             ADCON0bits.CHS3 = 0;
  1075  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0025  129F               	bcf	31,5	;volatile
  1078                           
  1079                           ;ADC.c: 108:             ADCON0bits.CHS2 = 0;
  1080  0026  121F               	bcf	31,4	;volatile
  1081                           
  1082                           ;ADC.c: 109:             ADCON0bits.CHS1 = 1;
  1083  0027  159F               	bsf	31,3	;volatile
  1084                           
  1085                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  1086  0028  111F               	bcf	31,2	;volatile
  1087                           
  1088                           ;ADC.c: 111:             break;
  1089  0029  28B2               	goto	l123
  1090  002A                     l126:	
  1091                           ;ADC.c: 113:         case 3:
  1092                           
  1093                           
  1094                           ;ADC.c: 114:             ADCON0bits.CHS3 = 0;
  1095  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1096  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1097  002C  129F               	bcf	31,5	;volatile
  1098                           
  1099                           ;ADC.c: 115:             ADCON0bits.CHS2 = 0;
  1100  002D  121F               	bcf	31,4	;volatile
  1101                           
  1102                           ;ADC.c: 116:             ADCON0bits.CHS1 = 1;
  1103  002E  159F               	bsf	31,3	;volatile
  1104                           
  1105                           ;ADC.c: 117:             ADCON0bits.CHS0 = 1;
  1106  002F  151F               	bsf	31,2	;volatile
  1107                           
  1108                           ;ADC.c: 118:             break;
  1109  0030  28B2               	goto	l123
  1110  0031                     l127:	
  1111                           ;ADC.c: 120:         case 4:
  1112                           
  1113                           
  1114                           ;ADC.c: 121:             ADCON0bits.CHS3 = 0;
  1115  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0033  129F               	bcf	31,5	;volatile
  1118                           
  1119                           ;ADC.c: 122:             ADCON0bits.CHS2 = 1;
  1120  0034  161F               	bsf	31,4	;volatile
  1121                           
  1122                           ;ADC.c: 123:             ADCON0bits.CHS1 = 0;
  1123  0035  119F               	bcf	31,3	;volatile
  1124                           
  1125                           ;ADC.c: 124:             ADCON0bits.CHS0 = 0;
  1126  0036  111F               	bcf	31,2	;volatile
  1127                           
  1128                           ;ADC.c: 125:             break;
  1129  0037  28B2               	goto	l123
  1130  0038                     l128:	
  1131                           ;ADC.c: 127:         case 5:
  1132                           
  1133                           
  1134                           ;ADC.c: 128:             ADCON0bits.CHS3 = 0;
  1135  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1137  003A  129F               	bcf	31,5	;volatile
  1138                           
  1139                           ;ADC.c: 129:             ADCON0bits.CHS2 = 1;
  1140  003B  161F               	bsf	31,4	;volatile
  1141                           
  1142                           ;ADC.c: 130:             ADCON0bits.CHS1 = 0;
  1143  003C  119F               	bcf	31,3	;volatile
  1144                           
  1145                           ;ADC.c: 131:             ADCON0bits.CHS0 = 1;
  1146  003D  151F               	bsf	31,2	;volatile
  1147                           
  1148                           ;ADC.c: 132:             break;
  1149  003E  28B2               	goto	l123
  1150  003F                     l129:	
  1151                           ;ADC.c: 134:         case 6:
  1152                           
  1153                           
  1154                           ;ADC.c: 135:             ADCON0bits.CHS3 = 0;
  1155  003F  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0040  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0041  129F               	bcf	31,5	;volatile
  1158                           
  1159                           ;ADC.c: 136:             ADCON0bits.CHS2 = 1;
  1160  0042  161F               	bsf	31,4	;volatile
  1161                           
  1162                           ;ADC.c: 137:             ADCON0bits.CHS1 = 1;
  1163  0043  159F               	bsf	31,3	;volatile
  1164                           
  1165                           ;ADC.c: 138:             ADCON0bits.CHS0 = 0;
  1166  0044  111F               	bcf	31,2	;volatile
  1167                           
  1168                           ;ADC.c: 139:             break;
  1169  0045  28B2               	goto	l123
  1170  0046                     l130:	
  1171                           ;ADC.c: 141:         case 7:
  1172                           
  1173                           
  1174                           ;ADC.c: 142:             ADCON0bits.CHS3 = 0;
  1175  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0048  129F               	bcf	31,5	;volatile
  1178                           
  1179                           ;ADC.c: 143:             ADCON0bits.CHS2 = 1;
  1180  0049  161F               	bsf	31,4	;volatile
  1181                           
  1182                           ;ADC.c: 144:             ADCON0bits.CHS1 = 1;
  1183  004A  159F               	bsf	31,3	;volatile
  1184                           
  1185                           ;ADC.c: 145:             ADCON0bits.CHS0 = 1;
  1186  004B  151F               	bsf	31,2	;volatile
  1187                           
  1188                           ;ADC.c: 146:             break;
  1189  004C  28B2               	goto	l123
  1190  004D                     l131:	
  1191                           ;ADC.c: 148:         case 8:
  1192                           
  1193                           
  1194                           ;ADC.c: 149:             ADCON0bits.CHS3 = 1;
  1195  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1196  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1197  004F  169F               	bsf	31,5	;volatile
  1198                           
  1199                           ;ADC.c: 150:             ADCON0bits.CHS2 = 0;
  1200  0050  121F               	bcf	31,4	;volatile
  1201                           
  1202                           ;ADC.c: 151:             ADCON0bits.CHS1 = 0;
  1203  0051  119F               	bcf	31,3	;volatile
  1204                           
  1205                           ;ADC.c: 152:             ADCON0bits.CHS0 = 0;
  1206  0052  111F               	bcf	31,2	;volatile
  1207                           
  1208                           ;ADC.c: 153:             break;
  1209  0053  28B2               	goto	l123
  1210  0054                     l132:	
  1211                           ;ADC.c: 155:         case 9:
  1212                           
  1213                           
  1214                           ;ADC.c: 156:             ADCON0bits.CHS3 = 1;
  1215  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0056  169F               	bsf	31,5	;volatile
  1218                           
  1219                           ;ADC.c: 157:             ADCON0bits.CHS2 = 0;
  1220  0057  121F               	bcf	31,4	;volatile
  1221                           
  1222                           ;ADC.c: 158:             ADCON0bits.CHS1 = 0;
  1223  0058  119F               	bcf	31,3	;volatile
  1224                           
  1225                           ;ADC.c: 159:             ADCON0bits.CHS0 = 1;
  1226  0059  151F               	bsf	31,2	;volatile
  1227                           
  1228                           ;ADC.c: 160:             break;
  1229  005A  28B2               	goto	l123
  1230  005B                     l133:	
  1231                           ;ADC.c: 162:         case 10:
  1232                           
  1233                           
  1234                           ;ADC.c: 163:             ADCON0bits.CHS3 = 1;
  1235  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1236  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1237  005D  169F               	bsf	31,5	;volatile
  1238                           
  1239                           ;ADC.c: 164:             ADCON0bits.CHS2 = 0;
  1240  005E  121F               	bcf	31,4	;volatile
  1241                           
  1242                           ;ADC.c: 165:             ADCON0bits.CHS1 = 1;
  1243  005F  159F               	bsf	31,3	;volatile
  1244                           
  1245                           ;ADC.c: 166:             ADCON0bits.CHS0 = 0;
  1246  0060  111F               	bcf	31,2	;volatile
  1247                           
  1248                           ;ADC.c: 167:             break;
  1249  0061  28B2               	goto	l123
  1250  0062                     l134:	
  1251                           ;ADC.c: 169:         case 11:
  1252                           
  1253                           
  1254                           ;ADC.c: 170:             ADCON0bits.CHS3 = 1;
  1255  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0064  169F               	bsf	31,5	;volatile
  1258                           
  1259                           ;ADC.c: 171:             ADCON0bits.CHS2 = 0;
  1260  0065  121F               	bcf	31,4	;volatile
  1261                           
  1262                           ;ADC.c: 172:             ADCON0bits.CHS1 = 1;
  1263  0066  159F               	bsf	31,3	;volatile
  1264                           
  1265                           ;ADC.c: 173:             ADCON0bits.CHS0 = 1;
  1266  0067  151F               	bsf	31,2	;volatile
  1267                           
  1268                           ;ADC.c: 174:             break;
  1269  0068  28B2               	goto	l123
  1270  0069                     l135:	
  1271                           ;ADC.c: 176:         case 12:
  1272                           
  1273                           
  1274                           ;ADC.c: 177:             ADCON0bits.CHS3 = 1;
  1275  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1276  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1277  006B  169F               	bsf	31,5	;volatile
  1278                           
  1279                           ;ADC.c: 178:             ADCON0bits.CHS2 = 1;
  1280  006C  161F               	bsf	31,4	;volatile
  1281                           
  1282                           ;ADC.c: 179:             ADCON0bits.CHS1 = 0;
  1283  006D  119F               	bcf	31,3	;volatile
  1284                           
  1285                           ;ADC.c: 180:             ADCON0bits.CHS0 = 0;
  1286  006E  111F               	bcf	31,2	;volatile
  1287                           
  1288                           ;ADC.c: 181:             break;
  1289  006F  28B2               	goto	l123
  1290  0070                     l136:	
  1291                           ;ADC.c: 183:         case 13:
  1292                           
  1293                           
  1294                           ;ADC.c: 184:             ADCON0bits.CHS3 = 1;
  1295  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0072  169F               	bsf	31,5	;volatile
  1298                           
  1299                           ;ADC.c: 185:             ADCON0bits.CHS2 = 1;
  1300  0073  161F               	bsf	31,4	;volatile
  1301                           
  1302                           ;ADC.c: 186:             ADCON0bits.CHS1 = 0;
  1303  0074  119F               	bcf	31,3	;volatile
  1304                           
  1305                           ;ADC.c: 187:             ADCON0bits.CHS0 = 1;
  1306  0075  151F               	bsf	31,2	;volatile
  1307                           
  1308                           ;ADC.c: 188:             break;
  1309  0076  28B2               	goto	l123
  1310  0077                     l137:	
  1311                           ;ADC.c: 190:         default:
  1312                           
  1313                           
  1314                           ;ADC.c: 191:             ADCON0bits.CHS3 = 0;
  1315  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0079  129F               	bcf	31,5	;volatile
  1318                           
  1319                           ;ADC.c: 192:             ADCON0bits.CHS2 = 0;
  1320  007A  121F               	bcf	31,4	;volatile
  1321                           
  1322                           ;ADC.c: 193:             ADCON0bits.CHS1 = 0;
  1323  007B  119F               	bcf	31,3	;volatile
  1324                           
  1325                           ;ADC.c: 194:             ADCON0bits.CHS0 = 0;
  1326  007C  111F               	bcf	31,2	;volatile
  1327                           
  1328                           ;ADC.c: 195:             break;
  1329  007D  28B2               	goto	l123
  1330  007E                     l763:
  1331  007E  0875               	movf	ADC_INIT@c,w
  1332  007F  00F3               	movwf	??_ADC_INIT
  1333  0080  01F4               	clrf	??_ADC_INIT+1
  1334                           
  1335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 1, Range of values is 0 to 0
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte            4     3 (average)
  1341                           ; direct_byte           11     8 (fixed)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ;	Chosen strategy is simple_byte
  1344  0081  0874               	movf	??_ADC_INIT+1,w
  1345  0082  3A00               	xorlw	0	; case 0
  1346  0083  1903               	skipnz
  1347  0084  2886               	goto	l1005
  1348  0085  2877               	goto	l137
  1349  0086                     l1005:
  1350                           
  1351                           ; Switch size 1, requested type "simple"
  1352                           ; Number of cases is 14, Range of values is 0 to 13
  1353                           ; switch strategies available:
  1354                           ; Name         Instructions Cycles
  1355                           ; simple_byte           43    22 (average)
  1356                           ; direct_byte           50     8 (fixed)
  1357                           ; jumptable            260     6 (fixed)
  1358                           ;	Chosen strategy is simple_byte
  1359  0086  0873               	movf	??_ADC_INIT,w
  1360  0087  3A00               	xorlw	0	; case 0
  1361  0088  1903               	skipnz
  1362  0089  2815               	goto	l122
  1363  008A  3A01               	xorlw	1	; case 1
  1364  008B  1903               	skipnz
  1365  008C  281C               	goto	l124
  1366  008D  3A03               	xorlw	3	; case 2
  1367  008E  1903               	skipnz
  1368  008F  2823               	goto	l125
  1369  0090  3A01               	xorlw	1	; case 3
  1370  0091  1903               	skipnz
  1371  0092  282A               	goto	l126
  1372  0093  3A07               	xorlw	7	; case 4
  1373  0094  1903               	skipnz
  1374  0095  2831               	goto	l127
  1375  0096  3A01               	xorlw	1	; case 5
  1376  0097  1903               	skipnz
  1377  0098  2838               	goto	l128
  1378  0099  3A03               	xorlw	3	; case 6
  1379  009A  1903               	skipnz
  1380  009B  283F               	goto	l129
  1381  009C  3A01               	xorlw	1	; case 7
  1382  009D  1903               	skipnz
  1383  009E  2846               	goto	l130
  1384  009F  3A0F               	xorlw	15	; case 8
  1385  00A0  1903               	skipnz
  1386  00A1  284D               	goto	l131
  1387  00A2  3A01               	xorlw	1	; case 9
  1388  00A3  1903               	skipnz
  1389  00A4  2854               	goto	l132
  1390  00A5  3A03               	xorlw	3	; case 10
  1391  00A6  1903               	skipnz
  1392  00A7  285B               	goto	l133
  1393  00A8  3A01               	xorlw	1	; case 11
  1394  00A9  1903               	skipnz
  1395  00AA  2862               	goto	l134
  1396  00AB  3A07               	xorlw	7	; case 12
  1397  00AC  1903               	skipnz
  1398  00AD  2869               	goto	l135
  1399  00AE  3A01               	xorlw	1	; case 13
  1400  00AF  1903               	skipnz
  1401  00B0  2870               	goto	l136
  1402  00B1  2877               	goto	l137
  1403  00B2                     l123:
  1404                           
  1405                           ;ADC.c: 198:     ADCON1bits.VCFG0 = 0;
  1406  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1407  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1408  00B4  121F               	bcf	31,4	;volatile
  1409                           
  1410                           ;ADC.c: 199:     ADCON1bits.VCFG1 = 0;
  1411  00B5  129F               	bcf	31,5	;volatile
  1412                           
  1413                           ;ADC.c: 201:     ADCON0bits.ADCS0 = 0;
  1414  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1415  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1416  00B8  131F               	bcf	31,6	;volatile
  1417                           
  1418                           ;ADC.c: 202:     ADCON0bits.ADCS1 = 1;
  1419  00B9  179F               	bsf	31,7	;volatile
  1420                           
  1421                           ;ADC.c: 204:     ADCON1bits.ADFM =0;
  1422  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1423  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1424  00BC  139F               	bcf	31,7	;volatile
  1425                           
  1426                           ;ADC.c: 206:     ADCON0bits.ADON = 1;
  1427  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1428  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1429  00BF  141F               	bsf	31,0	;volatile
  1430  00C0                     l765:
  1431                           
  1432                           ;ADC.c: 207:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1433  00C0  3021               	movlw	33
  1434  00C1  00F3               	movwf	??_ADC_INIT
  1435  00C2                     u107:
  1436  00C2  0BF3               	decfsz	??_ADC_INIT,f
  1437  00C3  28C2               	goto	u107
  1438  00C4                     l767:
  1439                           
  1440                           ;ADC.c: 208:     ADCON0bits.GO_nDONE = 1;
  1441  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1442  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1443  00C6  149F               	bsf	31,1	;volatile
  1444  00C7                     l138:
  1445  00C7  0008               	return
  1446  00C8                     __end_of_ADC_INIT:
  1447                           
  1448                           	psect	text5
  1449  016C                     __ptext5:	
  1450 ;; *************** function _ADC_READ *****************
  1451 ;; Defined at:
  1452 ;;		line 211 in file "ADC.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      unsigned char 
  1459 ;; Registers used:
  1460 ;;		wreg
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0
  1468 ;;      Temps:          2       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 2
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480  016C                     _ADC_READ:	
  1481                           ;psect for function _ADC_READ
  1482                           
  1483  016C                     l821:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _ADC_READ: [wreg]
  1486                           
  1487                           
  1488                           ;ADC.c: 212:     ADCON0bits.GO_nDONE = 1;
  1489  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1490  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1491  016E  149F               	bsf	31,1	;volatile
  1492  016F                     l823:
  1493                           
  1494                           ;ADC.c: 213:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1495  016F  3006               	movlw	6
  1496  0170  00F4               	movwf	??_ADC_READ+1
  1497  0171  3030               	movlw	48
  1498  0172  00F3               	movwf	??_ADC_READ
  1499  0173                     u117:
  1500  0173  0BF3               	decfsz	??_ADC_READ,f
  1501  0174  2973               	goto	u117
  1502  0175  0BF4               	decfsz	??_ADC_READ+1,f
  1503  0176  2973               	goto	u117
  1504  0177  0000               	nop
  1505  0178                     l141:	
  1506                           ;ADC.c: 214:     while( ADCON0bits.GO_nDONE == 1);
  1507                           
  1508  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1510  017A  189F               	btfsc	31,1	;volatile
  1511  017B  297D               	goto	u21
  1512  017C  297E               	goto	u20
  1513  017D                     u21:
  1514  017D  2978               	goto	l141
  1515  017E                     u20:
  1516  017E                     l825:
  1517                           
  1518                           ;ADC.c: 215:     return ADRESH;
  1519  017E  081E               	movf	30,w	;volatile
  1520  017F                     l144:
  1521  017F  0008               	return
  1522  0180                     __end_of_ADC_READ:
  1523                           
  1524                           	psect	text6
  1525  0156                     __ptext6:	
  1526 ;; *************** function _isr *****************
  1527 ;; Defined at:
  1528 ;;		line 37 in file "MAIN_S1.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          2       0       0       0       0
  1545 ;;      Totals:         2       0       0       0       0
  1546 ;;Total ram usage:        2 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 1
  1549 ;; This function calls:
  1550 ;;		_spiWrite
  1551 ;; This function is called by:
  1552 ;;		Interrupt level 1
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556  0156                     _isr:	
  1557                           ;psect for function _isr
  1558                           
  1559  0156                     i1l837:
  1560                           
  1561                           ;MAIN_S1.c: 38:     if(SSPIF == 1){
  1562  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0158  1D8C               	btfss	12,3	;volatile
  1565  0159  295B               	goto	u4_21
  1566  015A  295C               	goto	u4_20
  1567  015B                     u4_21:
  1568  015B  2965               	goto	i1l40
  1569  015C                     u4_20:
  1570  015C                     i1l839:
  1571                           
  1572                           ;MAIN_S1.c: 40:         spiWrite(PORTD);
  1573  015C  0808               	movf	8,w	;volatile
  1574  015D  120A  118A  2191  120A  118A  	fcall	_spiWrite
  1575  0162                     i1l841:
  1576                           
  1577                           ;MAIN_S1.c: 41:         SSPIF = 0;
  1578  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0164  118C               	bcf	12,3	;volatile
  1581  0165                     i1l40:
  1582  0165  0872               	movf	??_isr+1,w
  1583  0166  008A               	movwf	10
  1584  0167  0E71               	swapf	??_isr,w
  1585  0168  0083               	movwf	3
  1586  0169  0EFE               	swapf	btemp,f
  1587  016A  0E7E               	swapf	btemp,w
  1588  016B  0009               	retfie
  1589  016C                     __end_of_isr:
  1590                           
  1591                           	psect	intentry
  1592  0004                     __pintentry:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1595                           
  1596  0004                     interrupt_function:
  1597  007E                     saved_w	set	btemp
  1598  0004  00FE               	movwf	btemp
  1599  0005  0E03               	swapf	3,w
  1600  0006  00F1               	movwf	??_isr
  1601  0007  080A               	movf	10,w
  1602  0008  00F2               	movwf	??_isr+1
  1603  0009  120A  118A  2956   	ljmp	_isr
  1604                           
  1605                           	psect	text7
  1606  0191                     __ptext7:	
  1607 ;; *************** function _spiWrite *****************
  1608 ;; Defined at:
  1609 ;;		line 34 in file "SPIS1.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  dat             1    wreg     unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  dat             1    0[COMMON] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         1       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         1       0       0       0       0
  1627 ;;Total ram usage:        1 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_isr
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636  0191                     _spiWrite:	
  1637                           ;psect for function _spiWrite
  1638                           
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _spiWrite: [wreg]
  1642                           ;spiWrite@dat stored from wreg
  1643  0191  00F0               	movwf	spiWrite@dat
  1644  0192                     i1l791:
  1645                           
  1646                           ;SPIS1.c: 34: void spiWrite(char dat);SPIS1.c: 35: {;SPIS1.c: 36:     SSPBUF = dat;
  1647  0192  0870               	movf	spiWrite@dat,w
  1648  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0195  0093               	movwf	19	;volatile
  1651  0196                     i1l77:
  1652  0196  0008               	return
  1653  0197                     __end_of_spiWrite:
  1654  007E                     btemp	set	126	;btemp
  1655  007E                     wtemp0	set	126
  1656                           
  1657                           	psect	idloc
  1658                           
  1659                           ;Config register IDLOC0 @ 0x2000
  1660                           ;	unspecified, using default values
  1661  2000                     	org	8192
  1662  2000  3FFF               	dw	16383
  1663                           
  1664                           ;Config register IDLOC1 @ 0x2001
  1665                           ;	unspecified, using default values
  1666  2001                     	org	8193
  1667  2001  3FFF               	dw	16383
  1668                           
  1669                           ;Config register IDLOC2 @ 0x2002
  1670                           ;	unspecified, using default values
  1671  2002                     	org	8194
  1672  2002  3FFF               	dw	16383
  1673                           
  1674                           ;Config register IDLOC3 @ 0x2003
  1675                           ;	unspecified, using default values
  1676  2003                     	org	8195
  1677  2003  3FFF               	dw	16383
  1678                           
  1679                           	psect	config
  1680                           
  1681                           ;Config register CONFIG1 @ 0x2007
  1682                           ;	Oscillator Selection bits
  1683                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1684                           ;	Watchdog Timer Enable bit
  1685                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1686                           ;	Power-up Timer Enable bit
  1687                           ;	PWRTE = OFF, PWRT disabled
  1688                           ;	RE3/MCLR pin function select bit
  1689                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1690                           ;	Code Protection bit
  1691                           ;	CP = OFF, Program memory code protection is disabled
  1692                           ;	Data Code Protection bit
  1693                           ;	CPD = OFF, Data memory code protection is disabled
  1694                           ;	Brown Out Reset Selection bits
  1695                           ;	BOREN = OFF, BOR disabled
  1696                           ;	Internal External Switchover bit
  1697                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1698                           ;	Fail-Safe Clock Monitor Enabled bit
  1699                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1700                           ;	Low Voltage Programming Enable bit
  1701                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1702                           ;	In-Circuit Debugger Mode bit
  1703                           ;	DEBUG = 0x1, unprogrammed default
  1704  2007                     	org	8199
  1705  2007  20D4               	dw	8404
  1706                           
  1707                           ;Config register CONFIG2 @ 0x2008
  1708                           ;	Brown-out Reset Selection bit
  1709                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1710                           ;	Flash Program Memory Self Write Enable bits
  1711                           ;	WRT = OFF, Write protection off
  1712  2008                     	org	8200
  1713  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     390
                           _ADC_READ
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     390
                           _ADC_INIT
                         _OSCILLATOR
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
   _setup
     _ADC_INIT
     _OSCILLATOR
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Jul 26 20:56:08 2023

            _SSPSTATbits 0094                       l51 013F                       l67 0150  
                     l68 0155                       u20 017E                       u21 017D  
                     u90 0148                       u91 0147                      l110 00D1  
                    l111 00D5                      l112 00D9                      l113 00DD  
                    l130 0046                      l122 0015                      l114 00E1  
                    l131 004D                      l123 00B2                      l115 00E5  
                    l132 0054                      l124 001C                      l116 00E9  
                    l108 00CD                      l141 0178                      l133 005B  
                    l125 0023                      l117 00ED                      l134 0062  
                    l126 002A                      l118 0113                      l135 0069  
                    l127 0031                      l144 017F                      l136 0070  
                    l128 0038                      l137 0077                      l129 003F  
                    l138 00C7                      l821 016C                      l823 016F  
                    l825 017E                      l753 00F1                      l921 0141  
                    l763 007E                      l923 0148                      l931 0114  
                    l765 00C0                      l749 00C9                      l925 014A  
                    l941 0123                      l933 011A                      l767 00C4  
                    l759 0014                      l927 014C                      l951 012F  
                    l943 0126                      l935 011E                      l929 014F  
                    l953 0132                      l945 0127                      l937 011F  
                    l961 0185                      l955 0135                      l947 012D  
                    l939 0122                      l957 0136                      l949 012E  
                    l959 0180                      u107 00C2                      u117 0173  
                    _isr 0156                     l1003 00F9                     l1005 0086  
                   ?_isr 0070                     i1l40 0165                     i1l77 0196  
                   u4_20 015C                     u4_21 015B         __end_of_ADC_INIT 00C8  
       __end_of_ADC_READ 0180                     _main 0180                     btemp 007E  
                   start 000C              ?_OSCILLATOR 0070                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l841 0162  
                  i1l837 0156                    i1l791 0192                    i1l839 015C  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 0114  
                  pclath 000A          __end_of_spiInit 0156                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0191  
                 ??_main 0077                ADC_INIT@c 0075                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_INIT 0070                ?_ADC_READ 0070                   saved_w 007E  
       __end_of_spiWrite 0197                ??_spiInit 0076  __end_of__initialization 000F  
         __pcstackCOMMON 0070              OSCILLATOR@f 0075            __end_of_setup 0140  
             ??_ADC_INIT 0073               ??_ADC_READ 0073                  ??_setup 0077  
           ??_OSCILLATOR 0073               __pmaintext 0180               __pintentry 0004  
     __end_of_OSCILLATOR 0114                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0114                  __ptext2 0140                  __ptext3 00C8  
                __ptext4 0013                  __ptext5 016C                  __ptext6 0156  
                __ptext7 0191                  _spiInit 0140     end_of_initialization 000F  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 016C                ___latbits 0002  
               _ADC_INIT 0013                 _ADC_READ 016C                 ?_spiInit 0073  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _spiWrite 0191             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
             _OSCILLATOR 00C8               _OSCCONbits 008F  
